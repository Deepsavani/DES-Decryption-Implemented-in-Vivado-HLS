// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Loop_Pipeline_loop4_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        sub_key_address0,
        sub_key_ce0,
        sub_key_q0,
        ap_return_0,
        ap_return_1
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state5 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] p_read;
input  [31:0] p_read1;
output  [3:0] sub_key_address0;
output   sub_key_ce0;
input  [47:0] sub_key_q0;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg sub_key_ce0;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [8:0] S_address0;
reg    S_ce0;
wire   [3:0] S_q0;
wire   [8:0] S_address1;
reg    S_ce1;
wire   [3:0] S_q1;
wire   [8:0] S_address2;
reg    S_ce2;
wire   [3:0] S_q2;
wire   [8:0] S_address3;
reg    S_ce3;
wire   [3:0] S_q3;
wire   [8:0] S_address4;
reg    S_ce4;
wire   [3:0] S_q4;
wire   [8:0] S_address5;
reg    S_ce5;
wire   [3:0] S_q5;
wire   [8:0] S_address6;
reg    S_ce6;
wire   [3:0] S_q6;
wire   [8:0] S_address7;
reg    S_ce7;
wire   [3:0] S_q7;
reg   [4:0] i_3_i_reg_366;
reg   [31:0] temp_reg_377;
reg   [31:0] L_0_loc_0_reg_387;
reg    ap_block_state1;
wire   [0:0] icmp_ln223_fu_398_p2;
reg   [0:0] icmp_ln223_reg_1995;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln223_reg_1995_pp0_iter1_reg;
wire   [4:0] i_fu_404_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [31:0] R_fu_1967_p2;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter1;
reg   [31:0] ap_phi_mux_temp_phi_fu_380_p4;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln232_fu_416_p1;
wire   [63:0] zext_ln246_1_fu_1265_p1;
wire  signed [63:0] sext_ln246_fu_1324_p1;
wire  signed [63:0] sext_ln246_1_fu_1383_p1;
wire  signed [63:0] sext_ln246_2_fu_1442_p1;
wire  signed [63:0] sext_ln246_3_fu_1501_p1;
wire  signed [63:0] sext_ln246_4_fu_1560_p1;
wire  signed [63:0] sext_ln246_5_fu_1619_p1;
wire  signed [63:0] sext_ln246_6_fu_1670_p1;
wire   [4:0] sub_ln232_fu_410_p2;
wire   [4:0] trunc_ln229_1_fu_489_p1;
wire   [0:0] tmp_54_fu_449_p3;
wire   [5:0] tmp_4_fu_501_p4;
wire   [5:0] tmp_5_fu_511_p4;
wire   [5:0] tmp_6_fu_521_p4;
wire   [5:0] tmp_7_fu_531_p4;
wire   [0:0] tmp_56_fu_457_p3;
wire   [0:0] tmp_57_fu_465_p3;
wire   [4:0] tmp_8_fu_619_p4;
wire   [0:0] tmp_58_fu_473_p3;
wire   [4:0] tmp_9_fu_667_p4;
wire   [0:0] tmp_59_fu_481_p3;
wire   [4:0] tmp_10_fu_709_p4;
wire   [3:0] trunc_ln229_14_fu_729_p1;
wire   [4:0] tmp_11_fu_741_p4;
wire   [4:0] tmp_12_fu_767_p4;
wire   [5:0] tmp_13_fu_777_p4;
wire   [5:0] tmp_14_fu_787_p4;
wire   [0:0] tmp_50_fu_421_p3;
wire   [0:0] trunc_ln240_fu_819_p1;
wire   [5:0] trunc_ln232_fu_829_p1;
wire   [5:0] trunc_ln229_6_fu_493_p3;
wire   [0:0] tmp_51_fu_433_p3;
wire   [0:0] trunc_ln229_fu_429_p1;
wire   [0:0] tmp_53_fu_441_p3;
wire   [4:0] tmp_15_fu_941_p4;
wire   [4:0] tmp_16_fu_1001_p4;
wire   [46:0] trunc_ln232_cast_fu_797_p10;
wire   [46:0] trunc_ln232_1_fu_839_p1;
wire   [4:0] trunc_ln232_21_fu_1081_p1;
wire   [4:0] trunc_ln229_15_fu_733_p3;
wire   [10:0] trunc_ln232_20_fu_1077_p1;
wire   [10:0] trunc_ln229_13_fu_719_p4;
wire   [11:0] trunc_ln232_19_fu_1073_p1;
wire   [11:0] trunc_ln229_12_fu_699_p4;
wire   [6:0] trunc_ln232_18_fu_1069_p1;
wire   [6:0] trunc_ln229_11_fu_689_p4;
wire   [16:0] trunc_ln232_17_fu_1065_p1;
wire   [16:0] trunc_ln229_10_fu_677_p5;
wire   [17:0] trunc_ln232_16_fu_1061_p1;
wire   [17:0] trunc_ln229_9_fu_655_p5;
wire   [12:0] trunc_ln232_15_fu_1057_p1;
wire   [12:0] trunc_ln229_5_fu_643_p5;
wire   [22:0] trunc_ln232_14_fu_1053_p1;
wire   [22:0] trunc_ln229_4_fu_629_p6;
wire   [23:0] trunc_ln232_13_fu_1049_p1;
wire   [23:0] trunc_ln229_3_fu_605_p6;
wire   [18:0] trunc_ln232_12_fu_1045_p1;
wire   [18:0] trunc_ln229_2_fu_591_p6;
wire   [28:0] trunc_ln232_11_fu_1041_p1;
wire   [28:0] trunc_ln229_16_fu_751_p7;
wire   [29:0] trunc_ln232_10_fu_1037_p1;
wire   [29:0] trunc_ln229_s_fu_575_p7;
wire   [24:0] trunc_ln232_9_fu_1033_p1;
wire   [24:0] trunc_ln229_8_fu_559_p7;
wire   [34:0] trunc_ln232_8_fu_1029_p1;
wire   [34:0] p_cast2_fu_1011_p8;
wire   [35:0] trunc_ln232_7_fu_997_p1;
wire   [35:0] tmp_3_fu_979_p8;
wire   [30:0] trunc_ln232_6_fu_975_p1;
wire   [30:0] trunc_ln229_7_fu_541_p8;
wire   [40:0] trunc_ln232_5_fu_971_p1;
wire   [40:0] p_cast1_fu_951_p9;
wire   [41:0] trunc_ln232_4_fu_937_p1;
wire   [41:0] tmp_2_fu_917_p9;
wire   [36:0] trunc_ln232_3_fu_913_p1;
wire   [36:0] tmp_1_fu_893_p9;
wire   [47:0] tmp_s_fu_869_p11;
wire   [42:0] trunc_ln232_2_fu_865_p1;
wire   [42:0] tmp_fu_843_p10;
wire   [42:0] xor_ln232_21_fu_1211_p2;
wire   [47:0] xor_ln232_20_fu_1205_p2;
wire   [46:0] s_input_fu_1085_p2;
wire   [0:0] tmp_61_fu_1225_p3;
wire   [0:0] tmp_60_fu_1217_p3;
wire   [3:0] trunc_ln7_fu_1233_p4;
wire   [5:0] or_ln_fu_1243_p4;
wire   [7:0] zext_ln246_fu_1253_p1;
wire   [31:0] add_ln246_i_fu_1257_p3;
wire   [36:0] xor_ln232_19_fu_1199_p2;
wire   [41:0] xor_ln232_18_fu_1193_p2;
wire   [40:0] xor_ln232_17_fu_1187_p2;
wire   [0:0] tmp_63_fu_1278_p3;
wire   [0:0] tmp_62_fu_1270_p3;
wire   [3:0] trunc_ln243_1_fu_1286_p4;
wire   [5:0] or_ln246_1_fu_1296_p4;
wire   [7:0] zext_ln246_2_fu_1306_p1;
wire   [10:0] zext_ln246_3_cast_fu_1310_p3;
wire   [10:0] add_ln246_fu_1318_p2;
wire   [30:0] xor_ln232_16_fu_1181_p2;
wire   [35:0] xor_ln232_15_fu_1175_p2;
wire   [34:0] xor_ln232_14_fu_1169_p2;
wire   [0:0] tmp_65_fu_1337_p3;
wire   [0:0] tmp_64_fu_1329_p3;
wire   [3:0] trunc_ln243_2_fu_1345_p4;
wire   [5:0] or_ln246_2_fu_1355_p4;
wire   [7:0] zext_ln246_3_fu_1365_p1;
wire   [10:0] zext_ln246_5_cast_fu_1369_p3;
wire   [10:0] add_ln246_1_fu_1377_p2;
wire   [24:0] xor_ln232_13_fu_1163_p2;
wire   [29:0] xor_ln232_12_fu_1157_p2;
wire   [28:0] xor_ln232_11_fu_1151_p2;
wire   [0:0] tmp_67_fu_1396_p3;
wire   [0:0] tmp_66_fu_1388_p3;
wire   [3:0] trunc_ln243_3_fu_1404_p4;
wire   [5:0] or_ln246_3_fu_1414_p4;
wire   [7:0] zext_ln246_4_fu_1424_p1;
wire   [10:0] zext_ln246_7_cast_fu_1428_p3;
wire   [10:0] add_ln246_2_fu_1436_p2;
wire   [18:0] xor_ln232_10_fu_1145_p2;
wire   [23:0] xor_ln232_9_fu_1139_p2;
wire   [22:0] xor_ln232_8_fu_1133_p2;
wire   [0:0] tmp_69_fu_1455_p3;
wire   [0:0] tmp_68_fu_1447_p3;
wire   [3:0] trunc_ln243_4_fu_1463_p4;
wire   [5:0] or_ln246_4_fu_1473_p4;
wire   [7:0] zext_ln246_5_fu_1483_p1;
wire   [10:0] zext_ln246_9_cast_fu_1487_p3;
wire   [10:0] add_ln246_3_fu_1495_p2;
wire   [12:0] xor_ln232_7_fu_1127_p2;
wire   [17:0] xor_ln232_6_fu_1121_p2;
wire   [16:0] xor_ln232_5_fu_1115_p2;
wire   [0:0] tmp_71_fu_1514_p3;
wire   [0:0] tmp_70_fu_1506_p3;
wire   [3:0] trunc_ln243_5_fu_1522_p4;
wire   [5:0] or_ln246_5_fu_1532_p4;
wire   [7:0] zext_ln246_6_fu_1542_p1;
wire   [10:0] zext_ln246_11_cast_fu_1546_p3;
wire   [10:0] add_ln246_4_fu_1554_p2;
wire   [6:0] xor_ln232_4_fu_1109_p2;
wire   [11:0] xor_ln232_3_fu_1103_p2;
wire   [10:0] xor_ln232_2_fu_1097_p2;
wire   [0:0] tmp_73_fu_1573_p3;
wire   [0:0] tmp_72_fu_1565_p3;
wire   [3:0] trunc_ln243_6_fu_1581_p4;
wire   [5:0] or_ln246_6_fu_1591_p4;
wire   [7:0] zext_ln246_7_fu_1601_p1;
wire   [10:0] zext_ln246_13_cast_fu_1605_p3;
wire   [10:0] add_ln246_5_fu_1613_p2;
wire   [5:0] xor_ln240_fu_833_p2;
wire   [4:0] xor_ln232_1_fu_1091_p2;
wire   [0:0] tmp_74_fu_1624_p3;
wire   [0:0] xor_ln241_fu_823_p2;
wire   [3:0] trunc_ln243_7_fu_1632_p4;
wire   [5:0] or_ln246_7_fu_1642_p4;
wire   [7:0] zext_ln246_8_fu_1652_p1;
wire   [10:0] zext_ln246_15_cast_fu_1656_p3;
wire   [10:0] add_ln246_6_fu_1664_p2;
wire   [0:0] trunc_ln253_6_fu_1711_p1;
wire   [0:0] tmp_75_fu_1703_p3;
wire   [0:0] trunc_ln253_2_fu_1687_p1;
wire   [0:0] tmp_76_fu_1715_p3;
wire   [0:0] tmp_77_fu_1723_p3;
wire   [0:0] trunc_ln253_1_fu_1683_p1;
wire   [0:0] trunc_ln253_4_fu_1695_p1;
wire   [0:0] tmp_78_fu_1731_p3;
wire   [0:0] tmp_79_fu_1739_p3;
wire   [0:0] tmp_80_fu_1747_p3;
wire   [0:0] tmp_82_fu_1763_p3;
wire   [0:0] tmp_81_fu_1755_p3;
wire   [0:0] tmp_83_fu_1771_p3;
wire   [0:0] tmp_84_fu_1779_p3;
wire   [0:0] tmp_85_fu_1787_p3;
wire   [0:0] tmp_86_fu_1795_p3;
wire   [0:0] tmp_87_fu_1803_p3;
wire   [0:0] trunc_ln253_fu_1679_p1;
wire   [0:0] trunc_ln253_3_fu_1691_p1;
wire   [0:0] tmp_88_fu_1811_p3;
wire   [0:0] trunc_ln253_5_fu_1699_p1;
wire   [0:0] tmp_89_fu_1819_p3;
wire   [0:0] tmp_91_fu_1835_p3;
wire   [0:0] tmp_90_fu_1827_p3;
wire   [0:0] tmp_92_fu_1843_p3;
wire   [0:0] tmp_93_fu_1851_p3;
wire   [0:0] tmp_94_fu_1859_p3;
wire   [0:0] tmp_95_fu_1867_p3;
wire   [0:0] tmp_96_fu_1875_p3;
wire   [0:0] tmp_97_fu_1883_p3;
wire   [0:0] trunc_ln254_fu_1675_p1;
wire   [0:0] tmp_98_fu_1891_p3;
wire   [31:0] or_ln254_s_fu_1899_p33;
wire    ap_CS_fsm_state5;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

Loop_Pipeline_loodEe #(
    .DataWidth( 4 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
S_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(S_address0),
    .ce0(S_ce0),
    .q0(S_q0),
    .address1(S_address1),
    .ce1(S_ce1),
    .q1(S_q1),
    .address2(S_address2),
    .ce2(S_ce2),
    .q2(S_q2),
    .address3(S_address3),
    .ce3(S_ce3),
    .q3(S_q3),
    .address4(S_address4),
    .ce4(S_ce4),
    .q4(S_q4),
    .address5(S_address5),
    .ce5(S_ce5),
    .q5(S_q5),
    .address6(S_address6),
    .ce6(S_ce6),
    .q6(S_q6),
    .address7(S_address7),
    .ce7(S_ce7),
    .q7(S_q7)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((icmp_ln223_fu_398_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        L_0_loc_0_reg_387 <= p_read1;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln223_reg_1995_pp0_iter1_reg == 1'd0))) begin
        L_0_loc_0_reg_387 <= temp_reg_377;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_3_i_reg_366 <= 5'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln223_fu_398_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        i_3_i_reg_366 <= i_fu_404_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        temp_reg_377 <= p_read;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln223_reg_1995_pp0_iter1_reg == 1'd0))) begin
        temp_reg_377 <= R_fu_1967_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln223_reg_1995 <= icmp_ln223_fu_398_p2;
        icmp_ln223_reg_1995_pp0_iter1_reg <= icmp_ln223_reg_1995;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        S_ce0 = 1'b1;
    end else begin
        S_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        S_ce1 = 1'b1;
    end else begin
        S_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        S_ce2 = 1'b1;
    end else begin
        S_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        S_ce3 = 1'b1;
    end else begin
        S_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        S_ce4 = 1'b1;
    end else begin
        S_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        S_ce5 = 1'b1;
    end else begin
        S_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        S_ce6 = 1'b1;
    end else begin
        S_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        S_ce7 = 1'b1;
    end else begin
        S_ce7 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln223_reg_1995_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_temp_phi_fu_380_p4 = R_fu_1967_p2;
    end else begin
        ap_phi_mux_temp_phi_fu_380_p4 = temp_reg_377;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        sub_key_ce0 = 1'b1;
    end else begin
        sub_key_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign R_fu_1967_p2 = (or_ln254_s_fu_1899_p33 ^ L_0_loc_0_reg_387);

assign S_address0 = zext_ln246_1_fu_1265_p1;

assign S_address1 = sext_ln246_fu_1324_p1;

assign S_address2 = sext_ln246_1_fu_1383_p1;

assign S_address3 = sext_ln246_2_fu_1442_p1;

assign S_address4 = sext_ln246_3_fu_1501_p1;

assign S_address5 = sext_ln246_4_fu_1560_p1;

assign S_address6 = sext_ln246_5_fu_1619_p1;

assign S_address7 = sext_ln246_6_fu_1670_p1;

assign add_ln246_1_fu_1377_p2 = (11'd128 + zext_ln246_5_cast_fu_1369_p3);

assign add_ln246_2_fu_1436_p2 = (11'd192 + zext_ln246_7_cast_fu_1428_p3);

assign add_ln246_3_fu_1495_p2 = (11'd256 + zext_ln246_9_cast_fu_1487_p3);

assign add_ln246_4_fu_1554_p2 = (11'd320 + zext_ln246_11_cast_fu_1546_p3);

assign add_ln246_5_fu_1613_p2 = (11'd384 + zext_ln246_13_cast_fu_1605_p3);

assign add_ln246_6_fu_1664_p2 = (11'd448 + zext_ln246_15_cast_fu_1656_p3);

assign add_ln246_fu_1318_p2 = (11'd64 + zext_ln246_3_cast_fu_1310_p3);

assign add_ln246_i_fu_1257_p3 = {{24'd0}, {zext_ln246_fu_1253_p1}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_return_0 = temp_reg_377;

assign ap_return_1 = L_0_loc_0_reg_387;

assign i_fu_404_p2 = (i_3_i_reg_366 + 5'd1);

assign icmp_ln223_fu_398_p2 = ((i_3_i_reg_366 == 5'd16) ? 1'b1 : 1'b0);

assign or_ln246_1_fu_1296_p4 = {{{tmp_63_fu_1278_p3}, {tmp_62_fu_1270_p3}}, {trunc_ln243_1_fu_1286_p4}};

assign or_ln246_2_fu_1355_p4 = {{{tmp_65_fu_1337_p3}, {tmp_64_fu_1329_p3}}, {trunc_ln243_2_fu_1345_p4}};

assign or_ln246_3_fu_1414_p4 = {{{tmp_67_fu_1396_p3}, {tmp_66_fu_1388_p3}}, {trunc_ln243_3_fu_1404_p4}};

assign or_ln246_4_fu_1473_p4 = {{{tmp_69_fu_1455_p3}, {tmp_68_fu_1447_p3}}, {trunc_ln243_4_fu_1463_p4}};

assign or_ln246_5_fu_1532_p4 = {{{tmp_71_fu_1514_p3}, {tmp_70_fu_1506_p3}}, {trunc_ln243_5_fu_1522_p4}};

assign or_ln246_6_fu_1591_p4 = {{{tmp_73_fu_1573_p3}, {tmp_72_fu_1565_p3}}, {trunc_ln243_6_fu_1581_p4}};

assign or_ln246_7_fu_1642_p4 = {{{tmp_74_fu_1624_p3}, {xor_ln241_fu_823_p2}}, {trunc_ln243_7_fu_1632_p4}};

assign or_ln254_s_fu_1899_p33 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{trunc_ln253_6_fu_1711_p1}, {tmp_75_fu_1703_p3}}, {trunc_ln253_2_fu_1687_p1}}, {tmp_76_fu_1715_p3}}, {tmp_77_fu_1723_p3}}, {trunc_ln253_1_fu_1683_p1}}, {trunc_ln253_4_fu_1695_p1}}, {tmp_78_fu_1731_p3}}, {tmp_79_fu_1739_p3}}, {tmp_80_fu_1747_p3}}, {tmp_82_fu_1763_p3}}, {tmp_81_fu_1755_p3}}, {tmp_83_fu_1771_p3}}, {tmp_84_fu_1779_p3}}, {tmp_85_fu_1787_p3}}, {tmp_86_fu_1795_p3}}, {tmp_87_fu_1803_p3}}, {trunc_ln253_fu_1679_p1}}, {trunc_ln253_3_fu_1691_p1}}, {tmp_88_fu_1811_p3}}, {trunc_ln253_5_fu_1699_p1}}, {tmp_89_fu_1819_p3}}, {tmp_91_fu_1835_p3}}, {tmp_90_fu_1827_p3}}, {tmp_92_fu_1843_p3}}, {tmp_93_fu_1851_p3}}, {tmp_94_fu_1859_p3}}, {tmp_95_fu_1867_p3}}, {tmp_96_fu_1875_p3}}, {tmp_97_fu_1883_p3}}, {trunc_ln254_fu_1675_p1}}, {tmp_98_fu_1891_p3}};

assign or_ln_fu_1243_p4 = {{{tmp_61_fu_1225_p3}, {tmp_60_fu_1217_p3}}, {trunc_ln7_fu_1233_p4}};

assign p_cast1_fu_951_p9 = {{{{{{{{tmp_15_fu_941_p4}, {tmp_14_fu_787_p4}}, {tmp_4_fu_501_p4}}, {tmp_5_fu_511_p4}}, {tmp_6_fu_521_p4}}, {tmp_7_fu_531_p4}}, {trunc_ln229_1_fu_489_p1}}, {tmp_50_fu_421_p3}};

assign p_cast2_fu_1011_p8 = {{{{{{{tmp_16_fu_1001_p4}, {tmp_4_fu_501_p4}}, {tmp_5_fu_511_p4}}, {tmp_6_fu_521_p4}}, {tmp_7_fu_531_p4}}, {trunc_ln229_1_fu_489_p1}}, {tmp_50_fu_421_p3}};

assign s_input_fu_1085_p2 = (trunc_ln232_cast_fu_797_p10 ^ trunc_ln232_1_fu_839_p1);

assign sext_ln246_1_fu_1383_p1 = $signed(add_ln246_1_fu_1377_p2);

assign sext_ln246_2_fu_1442_p1 = $signed(add_ln246_2_fu_1436_p2);

assign sext_ln246_3_fu_1501_p1 = $signed(add_ln246_3_fu_1495_p2);

assign sext_ln246_4_fu_1560_p1 = $signed(add_ln246_4_fu_1554_p2);

assign sext_ln246_5_fu_1619_p1 = $signed(add_ln246_5_fu_1613_p2);

assign sext_ln246_6_fu_1670_p1 = $signed(add_ln246_6_fu_1664_p2);

assign sext_ln246_fu_1324_p1 = $signed(add_ln246_fu_1318_p2);

assign sub_key_address0 = zext_ln232_fu_416_p1;

assign sub_ln232_fu_410_p2 = (5'd15 - i_3_i_reg_366);

assign tmp_10_fu_709_p4 = {{ap_phi_mux_temp_phi_fu_380_p4[7:3]}};

assign tmp_11_fu_741_p4 = {{ap_phi_mux_temp_phi_fu_380_p4[19:15]}};

assign tmp_12_fu_767_p4 = {{ap_phi_mux_temp_phi_fu_380_p4[31:27]}};

assign tmp_13_fu_777_p4 = {{ap_phi_mux_temp_phi_fu_380_p4[28:23]}};

assign tmp_14_fu_787_p4 = {{ap_phi_mux_temp_phi_fu_380_p4[24:19]}};

assign tmp_15_fu_941_p4 = {{ap_phi_mux_temp_phi_fu_380_p4[27:23]}};

assign tmp_16_fu_1001_p4 = {{ap_phi_mux_temp_phi_fu_380_p4[23:19]}};

assign tmp_1_fu_893_p9 = {{{{{{{{tmp_53_fu_441_p3}, {tmp_14_fu_787_p4}}, {tmp_4_fu_501_p4}}, {tmp_5_fu_511_p4}}, {tmp_6_fu_521_p4}}, {tmp_7_fu_531_p4}}, {trunc_ln229_1_fu_489_p1}}, {tmp_50_fu_421_p3}};

assign tmp_2_fu_917_p9 = {{{{{{{{tmp_13_fu_777_p4}, {tmp_14_fu_787_p4}}, {tmp_4_fu_501_p4}}, {tmp_5_fu_511_p4}}, {tmp_6_fu_521_p4}}, {tmp_7_fu_531_p4}}, {trunc_ln229_1_fu_489_p1}}, {tmp_50_fu_421_p3}};

assign tmp_3_fu_979_p8 = {{{{{{{tmp_14_fu_787_p4}, {tmp_4_fu_501_p4}}, {tmp_5_fu_511_p4}}, {tmp_6_fu_521_p4}}, {tmp_7_fu_531_p4}}, {trunc_ln229_1_fu_489_p1}}, {tmp_50_fu_421_p3}};

assign tmp_4_fu_501_p4 = {{ap_phi_mux_temp_phi_fu_380_p4[20:15]}};

assign tmp_50_fu_421_p3 = ap_phi_mux_temp_phi_fu_380_p4[32'd31];

assign tmp_51_fu_433_p3 = ap_phi_mux_temp_phi_fu_380_p4[32'd27];

assign tmp_53_fu_441_p3 = ap_phi_mux_temp_phi_fu_380_p4[32'd23];

assign tmp_54_fu_449_p3 = ap_phi_mux_temp_phi_fu_380_p4[32'd19];

assign tmp_56_fu_457_p3 = ap_phi_mux_temp_phi_fu_380_p4[32'd15];

assign tmp_57_fu_465_p3 = ap_phi_mux_temp_phi_fu_380_p4[32'd11];

assign tmp_58_fu_473_p3 = ap_phi_mux_temp_phi_fu_380_p4[32'd7];

assign tmp_59_fu_481_p3 = ap_phi_mux_temp_phi_fu_380_p4[32'd3];

assign tmp_5_fu_511_p4 = {{ap_phi_mux_temp_phi_fu_380_p4[16:11]}};

assign tmp_60_fu_1217_p3 = xor_ln232_21_fu_1211_p2[32'd42];

assign tmp_61_fu_1225_p3 = xor_ln232_20_fu_1205_p2[32'd47];

assign tmp_62_fu_1270_p3 = xor_ln232_19_fu_1199_p2[32'd36];

assign tmp_63_fu_1278_p3 = xor_ln232_18_fu_1193_p2[32'd41];

assign tmp_64_fu_1329_p3 = xor_ln232_16_fu_1181_p2[32'd30];

assign tmp_65_fu_1337_p3 = xor_ln232_15_fu_1175_p2[32'd35];

assign tmp_66_fu_1388_p3 = xor_ln232_13_fu_1163_p2[32'd24];

assign tmp_67_fu_1396_p3 = xor_ln232_12_fu_1157_p2[32'd29];

assign tmp_68_fu_1447_p3 = xor_ln232_10_fu_1145_p2[32'd18];

assign tmp_69_fu_1455_p3 = xor_ln232_9_fu_1139_p2[32'd23];

assign tmp_6_fu_521_p4 = {{ap_phi_mux_temp_phi_fu_380_p4[12:7]}};

assign tmp_70_fu_1506_p3 = xor_ln232_7_fu_1127_p2[32'd12];

assign tmp_71_fu_1514_p3 = xor_ln232_6_fu_1121_p2[32'd17];

assign tmp_72_fu_1565_p3 = xor_ln232_4_fu_1109_p2[32'd6];

assign tmp_73_fu_1573_p3 = xor_ln232_3_fu_1103_p2[32'd11];

assign tmp_74_fu_1624_p3 = xor_ln240_fu_833_p2[32'd5];

assign tmp_75_fu_1703_p3 = S_q1[32'd1];

assign tmp_76_fu_1715_p3 = S_q5[32'd3];

assign tmp_77_fu_1723_p3 = S_q7[32'd3];

assign tmp_78_fu_1731_p3 = S_q4[32'd3];

assign tmp_79_fu_1739_p3 = S_q0[32'd3];

assign tmp_7_fu_531_p4 = {{ap_phi_mux_temp_phi_fu_380_p4[8:3]}};

assign tmp_80_fu_1747_p3 = S_q3[32'd1];

assign tmp_81_fu_1755_p3 = S_q6[32'd2];

assign tmp_82_fu_1763_p3 = S_q5[32'd1];

assign tmp_83_fu_1771_p3 = S_q1[32'd3];

assign tmp_84_fu_1779_p3 = S_q4[32'd2];

assign tmp_85_fu_1787_p3 = S_q7[32'd1];

assign tmp_86_fu_1795_p3 = S_q2[32'd2];

assign tmp_87_fu_1803_p3 = S_q0[32'd2];

assign tmp_88_fu_1811_p3 = S_q3[32'd2];

assign tmp_89_fu_1819_p3 = S_q6[32'd1];

assign tmp_8_fu_619_p4 = {{ap_phi_mux_temp_phi_fu_380_p4[15:11]}};

assign tmp_90_fu_1827_p3 = S_q2[32'd3];

assign tmp_91_fu_1835_p3 = S_q0[32'd1];

assign tmp_92_fu_1843_p3 = S_q4[32'd1];

assign tmp_93_fu_1851_p3 = S_q3[32'd3];

assign tmp_94_fu_1859_p3 = S_q7[32'd2];

assign tmp_95_fu_1867_p3 = S_q1[32'd2];

assign tmp_96_fu_1875_p3 = S_q5[32'd2];

assign tmp_97_fu_1883_p3 = S_q2[32'd1];

assign tmp_98_fu_1891_p3 = S_q6[32'd3];

assign tmp_9_fu_667_p4 = {{ap_phi_mux_temp_phi_fu_380_p4[11:7]}};

assign tmp_fu_843_p10 = {{{{{{{{{tmp_51_fu_433_p3}, {tmp_13_fu_777_p4}}, {tmp_14_fu_787_p4}}, {tmp_4_fu_501_p4}}, {tmp_5_fu_511_p4}}, {tmp_6_fu_521_p4}}, {tmp_7_fu_531_p4}}, {trunc_ln229_1_fu_489_p1}}, {tmp_50_fu_421_p3}};

assign tmp_s_fu_869_p11 = {{{{{{{{{{trunc_ln229_fu_429_p1}, {tmp_12_fu_767_p4}}, {tmp_13_fu_777_p4}}, {tmp_14_fu_787_p4}}, {tmp_4_fu_501_p4}}, {tmp_5_fu_511_p4}}, {tmp_6_fu_521_p4}}, {tmp_7_fu_531_p4}}, {trunc_ln229_1_fu_489_p1}}, {tmp_50_fu_421_p3}};

assign trunc_ln229_10_fu_677_p5 = {{{{tmp_9_fu_667_p4}, {tmp_7_fu_531_p4}}, {trunc_ln229_1_fu_489_p1}}, {1'd0}};

assign trunc_ln229_11_fu_689_p4 = {{{tmp_59_fu_481_p3}, {trunc_ln229_1_fu_489_p1}}, {1'd0}};

assign trunc_ln229_12_fu_699_p4 = {{{tmp_7_fu_531_p4}, {trunc_ln229_1_fu_489_p1}}, {1'd0}};

assign trunc_ln229_13_fu_719_p4 = {{{tmp_10_fu_709_p4}, {trunc_ln229_1_fu_489_p1}}, {1'd0}};

assign trunc_ln229_14_fu_729_p1 = ap_phi_mux_temp_phi_fu_380_p4[3:0];

assign trunc_ln229_15_fu_733_p3 = {{trunc_ln229_14_fu_729_p1}, {1'd0}};

assign trunc_ln229_16_fu_751_p7 = {{{{{{tmp_11_fu_741_p4}, {tmp_5_fu_511_p4}}, {tmp_6_fu_521_p4}}, {tmp_7_fu_531_p4}}, {trunc_ln229_1_fu_489_p1}}, {1'd0}};

assign trunc_ln229_1_fu_489_p1 = ap_phi_mux_temp_phi_fu_380_p4[4:0];

assign trunc_ln229_2_fu_591_p6 = {{{{{tmp_57_fu_465_p3}, {tmp_6_fu_521_p4}}, {tmp_7_fu_531_p4}}, {trunc_ln229_1_fu_489_p1}}, {1'd0}};

assign trunc_ln229_3_fu_605_p6 = {{{{{tmp_5_fu_511_p4}, {tmp_6_fu_521_p4}}, {tmp_7_fu_531_p4}}, {trunc_ln229_1_fu_489_p1}}, {1'd0}};

assign trunc_ln229_4_fu_629_p6 = {{{{{tmp_8_fu_619_p4}, {tmp_6_fu_521_p4}}, {tmp_7_fu_531_p4}}, {trunc_ln229_1_fu_489_p1}}, {1'd0}};

assign trunc_ln229_5_fu_643_p5 = {{{{tmp_58_fu_473_p3}, {tmp_7_fu_531_p4}}, {trunc_ln229_1_fu_489_p1}}, {1'd0}};

assign trunc_ln229_6_fu_493_p3 = {{trunc_ln229_1_fu_489_p1}, {1'd0}};

assign trunc_ln229_7_fu_541_p8 = {{{{{{{tmp_54_fu_449_p3}, {tmp_4_fu_501_p4}}, {tmp_5_fu_511_p4}}, {tmp_6_fu_521_p4}}, {tmp_7_fu_531_p4}}, {trunc_ln229_1_fu_489_p1}}, {1'd0}};

assign trunc_ln229_8_fu_559_p7 = {{{{{{tmp_56_fu_457_p3}, {tmp_5_fu_511_p4}}, {tmp_6_fu_521_p4}}, {tmp_7_fu_531_p4}}, {trunc_ln229_1_fu_489_p1}}, {1'd0}};

assign trunc_ln229_9_fu_655_p5 = {{{{tmp_6_fu_521_p4}, {tmp_7_fu_531_p4}}, {trunc_ln229_1_fu_489_p1}}, {1'd0}};

assign trunc_ln229_fu_429_p1 = ap_phi_mux_temp_phi_fu_380_p4[0:0];

assign trunc_ln229_s_fu_575_p7 = {{{{{{tmp_4_fu_501_p4}, {tmp_5_fu_511_p4}}, {tmp_6_fu_521_p4}}, {tmp_7_fu_531_p4}}, {trunc_ln229_1_fu_489_p1}}, {1'd0}};

assign trunc_ln232_10_fu_1037_p1 = sub_key_q0[29:0];

assign trunc_ln232_11_fu_1041_p1 = sub_key_q0[28:0];

assign trunc_ln232_12_fu_1045_p1 = sub_key_q0[18:0];

assign trunc_ln232_13_fu_1049_p1 = sub_key_q0[23:0];

assign trunc_ln232_14_fu_1053_p1 = sub_key_q0[22:0];

assign trunc_ln232_15_fu_1057_p1 = sub_key_q0[12:0];

assign trunc_ln232_16_fu_1061_p1 = sub_key_q0[17:0];

assign trunc_ln232_17_fu_1065_p1 = sub_key_q0[16:0];

assign trunc_ln232_18_fu_1069_p1 = sub_key_q0[6:0];

assign trunc_ln232_19_fu_1073_p1 = sub_key_q0[11:0];

assign trunc_ln232_1_fu_839_p1 = sub_key_q0[46:0];

assign trunc_ln232_20_fu_1077_p1 = sub_key_q0[10:0];

assign trunc_ln232_21_fu_1081_p1 = sub_key_q0[4:0];

assign trunc_ln232_2_fu_865_p1 = sub_key_q0[42:0];

assign trunc_ln232_3_fu_913_p1 = sub_key_q0[36:0];

assign trunc_ln232_4_fu_937_p1 = sub_key_q0[41:0];

assign trunc_ln232_5_fu_971_p1 = sub_key_q0[40:0];

assign trunc_ln232_6_fu_975_p1 = sub_key_q0[30:0];

assign trunc_ln232_7_fu_997_p1 = sub_key_q0[35:0];

assign trunc_ln232_8_fu_1029_p1 = sub_key_q0[34:0];

assign trunc_ln232_9_fu_1033_p1 = sub_key_q0[24:0];

assign trunc_ln232_cast_fu_797_p10 = {{{{{{{{{tmp_12_fu_767_p4}, {tmp_13_fu_777_p4}}, {tmp_14_fu_787_p4}}, {tmp_4_fu_501_p4}}, {tmp_5_fu_511_p4}}, {tmp_6_fu_521_p4}}, {tmp_7_fu_531_p4}}, {trunc_ln229_1_fu_489_p1}}, {tmp_50_fu_421_p3}};

assign trunc_ln232_fu_829_p1 = sub_key_q0[5:0];

assign trunc_ln240_fu_819_p1 = sub_key_q0[0:0];

assign trunc_ln243_1_fu_1286_p4 = {{xor_ln232_17_fu_1187_p2[40:37]}};

assign trunc_ln243_2_fu_1345_p4 = {{xor_ln232_14_fu_1169_p2[34:31]}};

assign trunc_ln243_3_fu_1404_p4 = {{xor_ln232_11_fu_1151_p2[28:25]}};

assign trunc_ln243_4_fu_1463_p4 = {{xor_ln232_8_fu_1133_p2[22:19]}};

assign trunc_ln243_5_fu_1522_p4 = {{xor_ln232_5_fu_1115_p2[16:13]}};

assign trunc_ln243_6_fu_1581_p4 = {{xor_ln232_2_fu_1097_p2[10:7]}};

assign trunc_ln243_7_fu_1632_p4 = {{xor_ln232_1_fu_1091_p2[4:1]}};

assign trunc_ln253_1_fu_1683_p1 = S_q2[0:0];

assign trunc_ln253_2_fu_1687_p1 = S_q4[0:0];

assign trunc_ln253_3_fu_1691_p1 = S_q5[0:0];

assign trunc_ln253_4_fu_1695_p1 = S_q6[0:0];

assign trunc_ln253_5_fu_1699_p1 = S_q7[0:0];

assign trunc_ln253_6_fu_1711_p1 = S_q3[0:0];

assign trunc_ln253_fu_1679_p1 = S_q1[0:0];

assign trunc_ln254_fu_1675_p1 = S_q0[0:0];

assign trunc_ln7_fu_1233_p4 = {{s_input_fu_1085_p2[46:43]}};

assign xor_ln232_10_fu_1145_p2 = (trunc_ln232_12_fu_1045_p1 ^ trunc_ln229_2_fu_591_p6);

assign xor_ln232_11_fu_1151_p2 = (trunc_ln232_11_fu_1041_p1 ^ trunc_ln229_16_fu_751_p7);

assign xor_ln232_12_fu_1157_p2 = (trunc_ln232_10_fu_1037_p1 ^ trunc_ln229_s_fu_575_p7);

assign xor_ln232_13_fu_1163_p2 = (trunc_ln232_9_fu_1033_p1 ^ trunc_ln229_8_fu_559_p7);

assign xor_ln232_14_fu_1169_p2 = (trunc_ln232_8_fu_1029_p1 ^ p_cast2_fu_1011_p8);

assign xor_ln232_15_fu_1175_p2 = (trunc_ln232_7_fu_997_p1 ^ tmp_3_fu_979_p8);

assign xor_ln232_16_fu_1181_p2 = (trunc_ln232_6_fu_975_p1 ^ trunc_ln229_7_fu_541_p8);

assign xor_ln232_17_fu_1187_p2 = (trunc_ln232_5_fu_971_p1 ^ p_cast1_fu_951_p9);

assign xor_ln232_18_fu_1193_p2 = (trunc_ln232_4_fu_937_p1 ^ tmp_2_fu_917_p9);

assign xor_ln232_19_fu_1199_p2 = (trunc_ln232_3_fu_913_p1 ^ tmp_1_fu_893_p9);

assign xor_ln232_1_fu_1091_p2 = (trunc_ln232_21_fu_1081_p1 ^ trunc_ln229_15_fu_733_p3);

assign xor_ln232_20_fu_1205_p2 = (tmp_s_fu_869_p11 ^ sub_key_q0);

assign xor_ln232_21_fu_1211_p2 = (trunc_ln232_2_fu_865_p1 ^ tmp_fu_843_p10);

assign xor_ln232_2_fu_1097_p2 = (trunc_ln232_20_fu_1077_p1 ^ trunc_ln229_13_fu_719_p4);

assign xor_ln232_3_fu_1103_p2 = (trunc_ln232_19_fu_1073_p1 ^ trunc_ln229_12_fu_699_p4);

assign xor_ln232_4_fu_1109_p2 = (trunc_ln232_18_fu_1069_p1 ^ trunc_ln229_11_fu_689_p4);

assign xor_ln232_5_fu_1115_p2 = (trunc_ln232_17_fu_1065_p1 ^ trunc_ln229_10_fu_677_p5);

assign xor_ln232_6_fu_1121_p2 = (trunc_ln232_16_fu_1061_p1 ^ trunc_ln229_9_fu_655_p5);

assign xor_ln232_7_fu_1127_p2 = (trunc_ln232_15_fu_1057_p1 ^ trunc_ln229_5_fu_643_p5);

assign xor_ln232_8_fu_1133_p2 = (trunc_ln232_14_fu_1053_p1 ^ trunc_ln229_4_fu_629_p6);

assign xor_ln232_9_fu_1139_p2 = (trunc_ln232_13_fu_1049_p1 ^ trunc_ln229_3_fu_605_p6);

assign xor_ln240_fu_833_p2 = (trunc_ln232_fu_829_p1 ^ trunc_ln229_6_fu_493_p3);

assign xor_ln241_fu_823_p2 = (trunc_ln240_fu_819_p1 ^ tmp_50_fu_421_p3);

assign zext_ln232_fu_416_p1 = sub_ln232_fu_410_p2;

assign zext_ln246_11_cast_fu_1546_p3 = {{3'd0}, {zext_ln246_6_fu_1542_p1}};

assign zext_ln246_13_cast_fu_1605_p3 = {{3'd0}, {zext_ln246_7_fu_1601_p1}};

assign zext_ln246_15_cast_fu_1656_p3 = {{3'd0}, {zext_ln246_8_fu_1652_p1}};

assign zext_ln246_1_fu_1265_p1 = add_ln246_i_fu_1257_p3;

assign zext_ln246_2_fu_1306_p1 = or_ln246_1_fu_1296_p4;

assign zext_ln246_3_cast_fu_1310_p3 = {{3'd0}, {zext_ln246_2_fu_1306_p1}};

assign zext_ln246_3_fu_1365_p1 = or_ln246_2_fu_1355_p4;

assign zext_ln246_4_fu_1424_p1 = or_ln246_3_fu_1414_p4;

assign zext_ln246_5_cast_fu_1369_p3 = {{3'd0}, {zext_ln246_3_fu_1365_p1}};

assign zext_ln246_5_fu_1483_p1 = or_ln246_4_fu_1473_p4;

assign zext_ln246_6_fu_1542_p1 = or_ln246_5_fu_1532_p4;

assign zext_ln246_7_cast_fu_1428_p3 = {{3'd0}, {zext_ln246_4_fu_1424_p1}};

assign zext_ln246_7_fu_1601_p1 = or_ln246_6_fu_1591_p4;

assign zext_ln246_8_fu_1652_p1 = or_ln246_7_fu_1642_p4;

assign zext_ln246_9_cast_fu_1487_p3 = {{3'd0}, {zext_ln246_5_fu_1483_p1}};

assign zext_ln246_fu_1253_p1 = or_ln_fu_1243_p4;

endmodule //Loop_Pipeline_loop4_s

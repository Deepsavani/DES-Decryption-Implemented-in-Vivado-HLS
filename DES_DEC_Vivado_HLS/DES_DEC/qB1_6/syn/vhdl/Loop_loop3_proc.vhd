-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Loop_loop3_proc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (59 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (63 downto 0);
    sub_key_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    sub_key_ce0 : OUT STD_LOGIC;
    sub_key_we0 : OUT STD_LOGIC;
    sub_key_d0 : OUT STD_LOGIC_VECTOR (47 downto 0) );
end;


architecture behav of Loop_loop3_proc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i_2_i_reg_145 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln192_fu_181_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln192_reg_851 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_fu_187_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_reg_855 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal empty_854_fu_235_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_phi_mux_i_2_i_phi_fu_149_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln214_fu_359_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal C_3_fu_112 : STD_LOGIC_VECTOR (27 downto 0);
    signal C_1_fu_259_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal C_2_fu_307_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal D_fu_116 : STD_LOGIC_VECTOR (27 downto 0);
    signal D_3_fu_167_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal D_1_fu_277_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal D_2_fu_327_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal empty_849_fu_205_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_848_fu_199_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_851_fu_217_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_850_fu_211_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_853_fu_229_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_852_fu_223_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln203_fu_241_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_4_fu_249_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln204_fu_245_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_5_fu_267_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln197_fu_303_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_fu_295_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln198_fu_323_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_1_fu_315_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_380_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_372_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_388_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_396_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_404_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_412_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_420_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln212_1_fu_355_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_364_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_428_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_436_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_444_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_452_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_460_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_468_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_476_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_484_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_492_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_500_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_508_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_516_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_524_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_532_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_540_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_548_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_556_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_564_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_572_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_580_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_588_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_596_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_604_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_612_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_620_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_628_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_fu_636_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_644_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_fu_652_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_fu_660_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln212_fu_351_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_fu_668_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_676_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_fu_684_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_fu_692_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_fu_700_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_708_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_fu_716_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_fu_724_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    C_3_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((empty_854_fu_235_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln192_fu_181_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                C_3_fu_112 <= C_2_fu_307_p3;
            elsif (((empty_854_fu_235_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln192_fu_181_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                C_3_fu_112 <= C_1_fu_259_p3;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                C_3_fu_112 <= p_read(55 downto 28);
            end if; 
        end if;
    end process;

    D_fu_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((empty_854_fu_235_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln192_fu_181_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                D_fu_116 <= D_2_fu_327_p3;
            elsif (((empty_854_fu_235_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln192_fu_181_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                D_fu_116 <= D_1_fu_277_p3;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                D_fu_116 <= D_3_fu_167_p1;
            end if; 
        end if;
    end process;

    i_2_i_reg_145_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln192_reg_851 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_2_i_reg_145 <= i_reg_855;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_2_i_reg_145 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                i_reg_855 <= i_fu_187_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln192_reg_851 <= icmp_ln192_fu_181_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln192_fu_181_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln192_fu_181_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln192_fu_181_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    C_1_fu_259_p3 <= (trunc_ln203_fu_241_p1 & tmp_4_fu_249_p4);
    C_2_fu_307_p3 <= (trunc_ln197_fu_303_p1 & tmp_fu_295_p3);
    D_1_fu_277_p3 <= (trunc_ln204_fu_245_p1 & tmp_5_fu_267_p4);
    D_2_fu_327_p3 <= (trunc_ln198_fu_323_p1 & tmp_1_fu_315_p3);
    D_3_fu_167_p1 <= p_read1(28 - 1 downto 0);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln192_fu_181_p2)
    begin
        if ((icmp_ln192_fu_181_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_2_i_phi_fu_149_p4_assign_proc : process(i_2_i_reg_145, icmp_ln192_reg_851, ap_CS_fsm_pp0_stage0, i_reg_855, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln192_reg_851 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_i_2_i_phi_fu_149_p4 <= i_reg_855;
        else 
            ap_phi_mux_i_2_i_phi_fu_149_p4 <= i_2_i_reg_145;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    empty_848_fu_199_p2 <= "1" when (ap_phi_mux_i_2_i_phi_fu_149_p4 = ap_const_lv5_F) else "0";
    empty_849_fu_205_p2 <= "1" when (ap_phi_mux_i_2_i_phi_fu_149_p4 = ap_const_lv5_8) else "0";
    empty_850_fu_211_p2 <= (empty_849_fu_205_p2 or empty_848_fu_199_p2);
    empty_851_fu_217_p2 <= "1" when (ap_phi_mux_i_2_i_phi_fu_149_p4 = ap_const_lv5_1) else "0";
    empty_852_fu_223_p2 <= (empty_851_fu_217_p2 or empty_850_fu_211_p2);
    empty_853_fu_229_p2 <= "1" when (ap_phi_mux_i_2_i_phi_fu_149_p4 = ap_const_lv5_0) else "0";
    empty_854_fu_235_p2 <= (empty_853_fu_229_p2 or empty_852_fu_223_p2);
    i_fu_187_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_2_i_phi_fu_149_p4) + unsigned(ap_const_lv5_1));
    icmp_ln192_fu_181_p2 <= "1" when (ap_phi_mux_i_2_i_phi_fu_149_p4 = ap_const_lv5_10) else "0";
    sub_key_address0 <= zext_ln214_fu_359_p1(4 - 1 downto 0);

    sub_key_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sub_key_ce0 <= ap_const_logic_1;
        else 
            sub_key_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sub_key_d0 <= (((((((((((((((((((((((((((((((((((((((((((((((tmp_6_fu_380_p3 & tmp_3_fu_372_p3) & tmp_7_fu_388_p3) & tmp_8_fu_396_p3) & tmp_9_fu_404_p3) & tmp_10_fu_412_p3) & tmp_11_fu_420_p3) & trunc_ln212_1_fu_355_p1) & tmp_2_fu_364_p3) & tmp_12_fu_428_p3) & tmp_13_fu_436_p3) & tmp_14_fu_444_p3) & tmp_15_fu_452_p3) & tmp_16_fu_460_p3) & tmp_17_fu_468_p3) & tmp_18_fu_476_p3) & tmp_19_fu_484_p3) & tmp_20_fu_492_p3) & tmp_21_fu_500_p3) & tmp_22_fu_508_p3) & tmp_23_fu_516_p3) & tmp_24_fu_524_p3) & tmp_25_fu_532_p3) & tmp_26_fu_540_p3) & tmp_27_fu_548_p3) & tmp_28_fu_556_p3) & tmp_29_fu_564_p3) & tmp_30_fu_572_p3) & tmp_31_fu_580_p3) & tmp_32_fu_588_p3) & tmp_33_fu_596_p3) & tmp_34_fu_604_p3) & tmp_35_fu_612_p3) & tmp_36_fu_620_p3) & tmp_37_fu_628_p3) & tmp_38_fu_636_p3) & tmp_39_fu_644_p3) & tmp_40_fu_652_p3) & tmp_41_fu_660_p3) & trunc_ln212_fu_351_p1) & tmp_42_fu_668_p3) & tmp_43_fu_676_p3) & tmp_44_fu_684_p3) & tmp_45_fu_692_p3) & tmp_46_fu_700_p3) & tmp_47_fu_708_p3) & tmp_48_fu_716_p3) & tmp_49_fu_724_p3);

    sub_key_we0_assign_proc : process(icmp_ln192_reg_851, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln192_reg_851 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            sub_key_we0 <= ap_const_logic_1;
        else 
            sub_key_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_10_fu_412_p3 <= C_3_fu_112(23 downto 23);
    tmp_11_fu_420_p3 <= C_3_fu_112(25 downto 25);
    tmp_12_fu_428_p3 <= C_3_fu_112(22 downto 22);
    tmp_13_fu_436_p3 <= C_3_fu_112(7 downto 7);
    tmp_14_fu_444_p3 <= C_3_fu_112(18 downto 18);
    tmp_15_fu_452_p3 <= C_3_fu_112(5 downto 5);
    tmp_16_fu_460_p3 <= C_3_fu_112(9 downto 9);
    tmp_17_fu_468_p3 <= C_3_fu_112(16 downto 16);
    tmp_18_fu_476_p3 <= C_3_fu_112(24 downto 24);
    tmp_19_fu_484_p3 <= C_3_fu_112(2 downto 2);
    tmp_1_fu_315_p3 <= D_fu_116(27 downto 27);
    tmp_20_fu_492_p3 <= C_3_fu_112(20 downto 20);
    tmp_21_fu_500_p3 <= C_3_fu_112(12 downto 12);
    tmp_22_fu_508_p3 <= C_3_fu_112(21 downto 21);
    tmp_23_fu_516_p3 <= C_3_fu_112(1 downto 1);
    tmp_24_fu_524_p3 <= C_3_fu_112(8 downto 8);
    tmp_25_fu_532_p3 <= C_3_fu_112(15 downto 15);
    tmp_26_fu_540_p3 <= C_3_fu_112(26 downto 26);
    tmp_27_fu_548_p3 <= D_fu_116(15 downto 15);
    tmp_28_fu_556_p3 <= D_fu_116(4 downto 4);
    tmp_29_fu_564_p3 <= D_fu_116(25 downto 25);
    tmp_2_fu_364_p3 <= C_3_fu_112(13 downto 13);
    tmp_30_fu_572_p3 <= D_fu_116(19 downto 19);
    tmp_31_fu_580_p3 <= D_fu_116(9 downto 9);
    tmp_32_fu_588_p3 <= D_fu_116(1 downto 1);
    tmp_33_fu_596_p3 <= D_fu_116(26 downto 26);
    tmp_34_fu_604_p3 <= D_fu_116(16 downto 16);
    tmp_35_fu_612_p3 <= D_fu_116(5 downto 5);
    tmp_36_fu_620_p3 <= D_fu_116(11 downto 11);
    tmp_37_fu_628_p3 <= D_fu_116(23 downto 23);
    tmp_38_fu_636_p3 <= D_fu_116(8 downto 8);
    tmp_39_fu_644_p3 <= D_fu_116(12 downto 12);
    tmp_3_fu_372_p3 <= C_3_fu_112(11 downto 11);
    tmp_40_fu_652_p3 <= D_fu_116(7 downto 7);
    tmp_41_fu_660_p3 <= D_fu_116(17 downto 17);
    tmp_42_fu_668_p3 <= D_fu_116(22 downto 22);
    tmp_43_fu_676_p3 <= D_fu_116(3 downto 3);
    tmp_44_fu_684_p3 <= D_fu_116(10 downto 10);
    tmp_45_fu_692_p3 <= D_fu_116(14 downto 14);
    tmp_46_fu_700_p3 <= D_fu_116(6 downto 6);
    tmp_47_fu_708_p3 <= D_fu_116(20 downto 20);
    tmp_48_fu_716_p3 <= D_fu_116(27 downto 27);
    tmp_49_fu_724_p3 <= D_fu_116(24 downto 24);
    tmp_4_fu_249_p4 <= C_3_fu_112(27 downto 26);
    tmp_5_fu_267_p4 <= D_fu_116(27 downto 26);
    tmp_6_fu_380_p3 <= C_3_fu_112(14 downto 14);
    tmp_7_fu_388_p3 <= C_3_fu_112(17 downto 17);
    tmp_8_fu_396_p3 <= C_3_fu_112(4 downto 4);
    tmp_9_fu_404_p3 <= C_3_fu_112(27 downto 27);
    tmp_fu_295_p3 <= C_3_fu_112(27 downto 27);
    trunc_ln197_fu_303_p1 <= C_3_fu_112(27 - 1 downto 0);
    trunc_ln198_fu_323_p1 <= D_fu_116(27 - 1 downto 0);
    trunc_ln203_fu_241_p1 <= C_3_fu_112(26 - 1 downto 0);
    trunc_ln204_fu_245_p1 <= D_fu_116(26 - 1 downto 0);
    trunc_ln212_1_fu_355_p1 <= C_3_fu_112(1 - 1 downto 0);
    trunc_ln212_fu_351_p1 <= D_fu_116(1 - 1 downto 0);
    zext_ln214_fu_359_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_2_i_reg_145),64));
end behav;

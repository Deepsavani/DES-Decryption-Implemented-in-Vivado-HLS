// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Loop_loop3_proc_HH_
#define _Loop_loop3_proc_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct Loop_loop3_proc : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<60> > p_read;
    sc_in< sc_lv<64> > p_read1;
    sc_out< sc_lv<4> > sub_key_address0;
    sc_out< sc_logic > sub_key_ce0;
    sc_out< sc_logic > sub_key_we0;
    sc_out< sc_lv<48> > sub_key_d0;


    // Module declarations
    Loop_loop3_proc(sc_module_name name);
    SC_HAS_PROCESS(Loop_loop3_proc);

    ~Loop_loop3_proc();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<5> > i_2_i_reg_145;
    sc_signal< sc_lv<1> > icmp_ln192_fu_181_p2;
    sc_signal< sc_lv<1> > icmp_ln192_reg_851;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<5> > i_fu_187_p2;
    sc_signal< sc_lv<5> > i_reg_855;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<1> > empty_854_fu_235_p2;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<5> > ap_phi_mux_i_2_i_phi_fu_149_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > zext_ln214_fu_359_p1;
    sc_signal< sc_lv<28> > C_3_fu_112;
    sc_signal< sc_lv<28> > C_1_fu_259_p3;
    sc_signal< sc_lv<28> > C_2_fu_307_p3;
    sc_signal< sc_lv<28> > D_fu_116;
    sc_signal< sc_lv<28> > D_3_fu_167_p1;
    sc_signal< sc_lv<28> > D_1_fu_277_p3;
    sc_signal< sc_lv<28> > D_2_fu_327_p3;
    sc_signal< sc_lv<1> > empty_849_fu_205_p2;
    sc_signal< sc_lv<1> > empty_848_fu_199_p2;
    sc_signal< sc_lv<1> > empty_851_fu_217_p2;
    sc_signal< sc_lv<1> > empty_850_fu_211_p2;
    sc_signal< sc_lv<1> > empty_853_fu_229_p2;
    sc_signal< sc_lv<1> > empty_852_fu_223_p2;
    sc_signal< sc_lv<26> > trunc_ln203_fu_241_p1;
    sc_signal< sc_lv<2> > tmp_4_fu_249_p4;
    sc_signal< sc_lv<26> > trunc_ln204_fu_245_p1;
    sc_signal< sc_lv<2> > tmp_5_fu_267_p4;
    sc_signal< sc_lv<27> > trunc_ln197_fu_303_p1;
    sc_signal< sc_lv<1> > tmp_fu_295_p3;
    sc_signal< sc_lv<27> > trunc_ln198_fu_323_p1;
    sc_signal< sc_lv<1> > tmp_1_fu_315_p3;
    sc_signal< sc_lv<1> > tmp_6_fu_380_p3;
    sc_signal< sc_lv<1> > tmp_3_fu_372_p3;
    sc_signal< sc_lv<1> > tmp_7_fu_388_p3;
    sc_signal< sc_lv<1> > tmp_8_fu_396_p3;
    sc_signal< sc_lv<1> > tmp_9_fu_404_p3;
    sc_signal< sc_lv<1> > tmp_10_fu_412_p3;
    sc_signal< sc_lv<1> > tmp_11_fu_420_p3;
    sc_signal< sc_lv<1> > trunc_ln212_1_fu_355_p1;
    sc_signal< sc_lv<1> > tmp_2_fu_364_p3;
    sc_signal< sc_lv<1> > tmp_12_fu_428_p3;
    sc_signal< sc_lv<1> > tmp_13_fu_436_p3;
    sc_signal< sc_lv<1> > tmp_14_fu_444_p3;
    sc_signal< sc_lv<1> > tmp_15_fu_452_p3;
    sc_signal< sc_lv<1> > tmp_16_fu_460_p3;
    sc_signal< sc_lv<1> > tmp_17_fu_468_p3;
    sc_signal< sc_lv<1> > tmp_18_fu_476_p3;
    sc_signal< sc_lv<1> > tmp_19_fu_484_p3;
    sc_signal< sc_lv<1> > tmp_20_fu_492_p3;
    sc_signal< sc_lv<1> > tmp_21_fu_500_p3;
    sc_signal< sc_lv<1> > tmp_22_fu_508_p3;
    sc_signal< sc_lv<1> > tmp_23_fu_516_p3;
    sc_signal< sc_lv<1> > tmp_24_fu_524_p3;
    sc_signal< sc_lv<1> > tmp_25_fu_532_p3;
    sc_signal< sc_lv<1> > tmp_26_fu_540_p3;
    sc_signal< sc_lv<1> > tmp_27_fu_548_p3;
    sc_signal< sc_lv<1> > tmp_28_fu_556_p3;
    sc_signal< sc_lv<1> > tmp_29_fu_564_p3;
    sc_signal< sc_lv<1> > tmp_30_fu_572_p3;
    sc_signal< sc_lv<1> > tmp_31_fu_580_p3;
    sc_signal< sc_lv<1> > tmp_32_fu_588_p3;
    sc_signal< sc_lv<1> > tmp_33_fu_596_p3;
    sc_signal< sc_lv<1> > tmp_34_fu_604_p3;
    sc_signal< sc_lv<1> > tmp_35_fu_612_p3;
    sc_signal< sc_lv<1> > tmp_36_fu_620_p3;
    sc_signal< sc_lv<1> > tmp_37_fu_628_p3;
    sc_signal< sc_lv<1> > tmp_38_fu_636_p3;
    sc_signal< sc_lv<1> > tmp_39_fu_644_p3;
    sc_signal< sc_lv<1> > tmp_40_fu_652_p3;
    sc_signal< sc_lv<1> > tmp_41_fu_660_p3;
    sc_signal< sc_lv<1> > trunc_ln212_fu_351_p1;
    sc_signal< sc_lv<1> > tmp_42_fu_668_p3;
    sc_signal< sc_lv<1> > tmp_43_fu_676_p3;
    sc_signal< sc_lv<1> > tmp_44_fu_684_p3;
    sc_signal< sc_lv<1> > tmp_45_fu_692_p3;
    sc_signal< sc_lv<1> > tmp_46_fu_700_p3;
    sc_signal< sc_lv<1> > tmp_47_fu_708_p3;
    sc_signal< sc_lv<1> > tmp_48_fu_716_p3;
    sc_signal< sc_lv<1> > tmp_49_fu_724_p3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_pp0_stage0;
    static const sc_lv<3> ap_ST_fsm_state4;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_37;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_F;
    static const sc_lv<5> ap_const_lv5_8;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_6;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_C_1_fu_259_p3();
    void thread_C_2_fu_307_p3();
    void thread_D_1_fu_277_p3();
    void thread_D_2_fu_327_p3();
    void thread_D_3_fu_167_p1();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_i_2_i_phi_fu_149_p4();
    void thread_ap_ready();
    void thread_empty_848_fu_199_p2();
    void thread_empty_849_fu_205_p2();
    void thread_empty_850_fu_211_p2();
    void thread_empty_851_fu_217_p2();
    void thread_empty_852_fu_223_p2();
    void thread_empty_853_fu_229_p2();
    void thread_empty_854_fu_235_p2();
    void thread_i_fu_187_p2();
    void thread_icmp_ln192_fu_181_p2();
    void thread_sub_key_address0();
    void thread_sub_key_ce0();
    void thread_sub_key_d0();
    void thread_sub_key_we0();
    void thread_tmp_10_fu_412_p3();
    void thread_tmp_11_fu_420_p3();
    void thread_tmp_12_fu_428_p3();
    void thread_tmp_13_fu_436_p3();
    void thread_tmp_14_fu_444_p3();
    void thread_tmp_15_fu_452_p3();
    void thread_tmp_16_fu_460_p3();
    void thread_tmp_17_fu_468_p3();
    void thread_tmp_18_fu_476_p3();
    void thread_tmp_19_fu_484_p3();
    void thread_tmp_1_fu_315_p3();
    void thread_tmp_20_fu_492_p3();
    void thread_tmp_21_fu_500_p3();
    void thread_tmp_22_fu_508_p3();
    void thread_tmp_23_fu_516_p3();
    void thread_tmp_24_fu_524_p3();
    void thread_tmp_25_fu_532_p3();
    void thread_tmp_26_fu_540_p3();
    void thread_tmp_27_fu_548_p3();
    void thread_tmp_28_fu_556_p3();
    void thread_tmp_29_fu_564_p3();
    void thread_tmp_2_fu_364_p3();
    void thread_tmp_30_fu_572_p3();
    void thread_tmp_31_fu_580_p3();
    void thread_tmp_32_fu_588_p3();
    void thread_tmp_33_fu_596_p3();
    void thread_tmp_34_fu_604_p3();
    void thread_tmp_35_fu_612_p3();
    void thread_tmp_36_fu_620_p3();
    void thread_tmp_37_fu_628_p3();
    void thread_tmp_38_fu_636_p3();
    void thread_tmp_39_fu_644_p3();
    void thread_tmp_3_fu_372_p3();
    void thread_tmp_40_fu_652_p3();
    void thread_tmp_41_fu_660_p3();
    void thread_tmp_42_fu_668_p3();
    void thread_tmp_43_fu_676_p3();
    void thread_tmp_44_fu_684_p3();
    void thread_tmp_45_fu_692_p3();
    void thread_tmp_46_fu_700_p3();
    void thread_tmp_47_fu_708_p3();
    void thread_tmp_48_fu_716_p3();
    void thread_tmp_49_fu_724_p3();
    void thread_tmp_4_fu_249_p4();
    void thread_tmp_5_fu_267_p4();
    void thread_tmp_6_fu_380_p3();
    void thread_tmp_7_fu_388_p3();
    void thread_tmp_8_fu_396_p3();
    void thread_tmp_9_fu_404_p3();
    void thread_tmp_fu_295_p3();
    void thread_trunc_ln197_fu_303_p1();
    void thread_trunc_ln198_fu_323_p1();
    void thread_trunc_ln203_fu_241_p1();
    void thread_trunc_ln204_fu_245_p1();
    void thread_trunc_ln212_1_fu_355_p1();
    void thread_trunc_ln212_fu_351_p1();
    void thread_zext_ln214_fu_359_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif

// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Loop_loop3_proc.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Loop_loop3_proc::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Loop_loop3_proc::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> Loop_loop3_proc::ap_ST_fsm_state1 = "1";
const sc_lv<3> Loop_loop3_proc::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<3> Loop_loop3_proc::ap_ST_fsm_state4 = "100";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool Loop_loop3_proc::ap_const_boolean_1 = true;
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_1 = "1";
const bool Loop_loop3_proc::ap_const_boolean_0 = false;
const sc_lv<1> Loop_loop3_proc::ap_const_lv1_0 = "0";
const sc_lv<1> Loop_loop3_proc::ap_const_lv1_1 = "1";
const sc_lv<5> Loop_loop3_proc::ap_const_lv5_0 = "00000";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_1C = "11100";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_37 = "110111";
const sc_lv<5> Loop_loop3_proc::ap_const_lv5_10 = "10000";
const sc_lv<5> Loop_loop3_proc::ap_const_lv5_1 = "1";
const sc_lv<5> Loop_loop3_proc::ap_const_lv5_F = "1111";
const sc_lv<5> Loop_loop3_proc::ap_const_lv5_8 = "1000";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_1A = "11010";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_1B = "11011";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_D = "1101";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_B = "1011";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_E = "1110";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_11 = "10001";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_4 = "100";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_17 = "10111";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_19 = "11001";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_16 = "10110";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_7 = "111";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_12 = "10010";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_5 = "101";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_9 = "1001";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_10 = "10000";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_18 = "11000";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_2 = "10";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_14 = "10100";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_C = "1100";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_15 = "10101";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_8 = "1000";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_F = "1111";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_13 = "10011";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_3 = "11";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_A = "1010";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_6 = "110";

Loop_loop3_proc::Loop_loop3_proc(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_C_1_fu_259_p3);
    sensitive << ( trunc_ln203_fu_241_p1 );
    sensitive << ( tmp_4_fu_249_p4 );

    SC_METHOD(thread_C_2_fu_307_p3);
    sensitive << ( trunc_ln197_fu_303_p1 );
    sensitive << ( tmp_fu_295_p3 );

    SC_METHOD(thread_D_1_fu_277_p3);
    sensitive << ( trunc_ln204_fu_245_p1 );
    sensitive << ( tmp_5_fu_267_p4 );

    SC_METHOD(thread_D_2_fu_327_p3);
    sensitive << ( trunc_ln198_fu_323_p1 );
    sensitive << ( tmp_1_fu_315_p3 );

    SC_METHOD(thread_D_3_fu_167_p1);
    sensitive << ( p_read1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln192_fu_181_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_phi_mux_i_2_i_phi_fu_149_p4);
    sensitive << ( i_2_i_reg_145 );
    sensitive << ( icmp_ln192_reg_851 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i_reg_855 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_empty_848_fu_199_p2);
    sensitive << ( icmp_ln192_fu_181_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_i_2_i_phi_fu_149_p4 );

    SC_METHOD(thread_empty_849_fu_205_p2);
    sensitive << ( icmp_ln192_fu_181_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_i_2_i_phi_fu_149_p4 );

    SC_METHOD(thread_empty_850_fu_211_p2);
    sensitive << ( empty_849_fu_205_p2 );
    sensitive << ( empty_848_fu_199_p2 );

    SC_METHOD(thread_empty_851_fu_217_p2);
    sensitive << ( icmp_ln192_fu_181_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_i_2_i_phi_fu_149_p4 );

    SC_METHOD(thread_empty_852_fu_223_p2);
    sensitive << ( empty_851_fu_217_p2 );
    sensitive << ( empty_850_fu_211_p2 );

    SC_METHOD(thread_empty_853_fu_229_p2);
    sensitive << ( icmp_ln192_fu_181_p2 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_i_2_i_phi_fu_149_p4 );

    SC_METHOD(thread_empty_854_fu_235_p2);
    sensitive << ( empty_853_fu_229_p2 );
    sensitive << ( empty_852_fu_223_p2 );

    SC_METHOD(thread_i_fu_187_p2);
    sensitive << ( ap_phi_mux_i_2_i_phi_fu_149_p4 );

    SC_METHOD(thread_icmp_ln192_fu_181_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_i_2_i_phi_fu_149_p4 );

    SC_METHOD(thread_sub_key_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln214_fu_359_p1 );

    SC_METHOD(thread_sub_key_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_sub_key_d0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( tmp_6_fu_380_p3 );
    sensitive << ( tmp_3_fu_372_p3 );
    sensitive << ( tmp_7_fu_388_p3 );
    sensitive << ( tmp_8_fu_396_p3 );
    sensitive << ( tmp_9_fu_404_p3 );
    sensitive << ( tmp_10_fu_412_p3 );
    sensitive << ( tmp_11_fu_420_p3 );
    sensitive << ( trunc_ln212_1_fu_355_p1 );
    sensitive << ( tmp_2_fu_364_p3 );
    sensitive << ( tmp_12_fu_428_p3 );
    sensitive << ( tmp_13_fu_436_p3 );
    sensitive << ( tmp_14_fu_444_p3 );
    sensitive << ( tmp_15_fu_452_p3 );
    sensitive << ( tmp_16_fu_460_p3 );
    sensitive << ( tmp_17_fu_468_p3 );
    sensitive << ( tmp_18_fu_476_p3 );
    sensitive << ( tmp_19_fu_484_p3 );
    sensitive << ( tmp_20_fu_492_p3 );
    sensitive << ( tmp_21_fu_500_p3 );
    sensitive << ( tmp_22_fu_508_p3 );
    sensitive << ( tmp_23_fu_516_p3 );
    sensitive << ( tmp_24_fu_524_p3 );
    sensitive << ( tmp_25_fu_532_p3 );
    sensitive << ( tmp_26_fu_540_p3 );
    sensitive << ( tmp_27_fu_548_p3 );
    sensitive << ( tmp_28_fu_556_p3 );
    sensitive << ( tmp_29_fu_564_p3 );
    sensitive << ( tmp_30_fu_572_p3 );
    sensitive << ( tmp_31_fu_580_p3 );
    sensitive << ( tmp_32_fu_588_p3 );
    sensitive << ( tmp_33_fu_596_p3 );
    sensitive << ( tmp_34_fu_604_p3 );
    sensitive << ( tmp_35_fu_612_p3 );
    sensitive << ( tmp_36_fu_620_p3 );
    sensitive << ( tmp_37_fu_628_p3 );
    sensitive << ( tmp_38_fu_636_p3 );
    sensitive << ( tmp_39_fu_644_p3 );
    sensitive << ( tmp_40_fu_652_p3 );
    sensitive << ( tmp_41_fu_660_p3 );
    sensitive << ( trunc_ln212_fu_351_p1 );
    sensitive << ( tmp_42_fu_668_p3 );
    sensitive << ( tmp_43_fu_676_p3 );
    sensitive << ( tmp_44_fu_684_p3 );
    sensitive << ( tmp_45_fu_692_p3 );
    sensitive << ( tmp_46_fu_700_p3 );
    sensitive << ( tmp_47_fu_708_p3 );
    sensitive << ( tmp_48_fu_716_p3 );
    sensitive << ( tmp_49_fu_724_p3 );

    SC_METHOD(thread_sub_key_we0);
    sensitive << ( icmp_ln192_reg_851 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_tmp_10_fu_412_p3);
    sensitive << ( C_3_fu_112 );

    SC_METHOD(thread_tmp_11_fu_420_p3);
    sensitive << ( C_3_fu_112 );

    SC_METHOD(thread_tmp_12_fu_428_p3);
    sensitive << ( C_3_fu_112 );

    SC_METHOD(thread_tmp_13_fu_436_p3);
    sensitive << ( C_3_fu_112 );

    SC_METHOD(thread_tmp_14_fu_444_p3);
    sensitive << ( C_3_fu_112 );

    SC_METHOD(thread_tmp_15_fu_452_p3);
    sensitive << ( C_3_fu_112 );

    SC_METHOD(thread_tmp_16_fu_460_p3);
    sensitive << ( C_3_fu_112 );

    SC_METHOD(thread_tmp_17_fu_468_p3);
    sensitive << ( C_3_fu_112 );

    SC_METHOD(thread_tmp_18_fu_476_p3);
    sensitive << ( C_3_fu_112 );

    SC_METHOD(thread_tmp_19_fu_484_p3);
    sensitive << ( C_3_fu_112 );

    SC_METHOD(thread_tmp_1_fu_315_p3);
    sensitive << ( D_fu_116 );

    SC_METHOD(thread_tmp_20_fu_492_p3);
    sensitive << ( C_3_fu_112 );

    SC_METHOD(thread_tmp_21_fu_500_p3);
    sensitive << ( C_3_fu_112 );

    SC_METHOD(thread_tmp_22_fu_508_p3);
    sensitive << ( C_3_fu_112 );

    SC_METHOD(thread_tmp_23_fu_516_p3);
    sensitive << ( C_3_fu_112 );

    SC_METHOD(thread_tmp_24_fu_524_p3);
    sensitive << ( C_3_fu_112 );

    SC_METHOD(thread_tmp_25_fu_532_p3);
    sensitive << ( C_3_fu_112 );

    SC_METHOD(thread_tmp_26_fu_540_p3);
    sensitive << ( C_3_fu_112 );

    SC_METHOD(thread_tmp_27_fu_548_p3);
    sensitive << ( D_fu_116 );

    SC_METHOD(thread_tmp_28_fu_556_p3);
    sensitive << ( D_fu_116 );

    SC_METHOD(thread_tmp_29_fu_564_p3);
    sensitive << ( D_fu_116 );

    SC_METHOD(thread_tmp_2_fu_364_p3);
    sensitive << ( C_3_fu_112 );

    SC_METHOD(thread_tmp_30_fu_572_p3);
    sensitive << ( D_fu_116 );

    SC_METHOD(thread_tmp_31_fu_580_p3);
    sensitive << ( D_fu_116 );

    SC_METHOD(thread_tmp_32_fu_588_p3);
    sensitive << ( D_fu_116 );

    SC_METHOD(thread_tmp_33_fu_596_p3);
    sensitive << ( D_fu_116 );

    SC_METHOD(thread_tmp_34_fu_604_p3);
    sensitive << ( D_fu_116 );

    SC_METHOD(thread_tmp_35_fu_612_p3);
    sensitive << ( D_fu_116 );

    SC_METHOD(thread_tmp_36_fu_620_p3);
    sensitive << ( D_fu_116 );

    SC_METHOD(thread_tmp_37_fu_628_p3);
    sensitive << ( D_fu_116 );

    SC_METHOD(thread_tmp_38_fu_636_p3);
    sensitive << ( D_fu_116 );

    SC_METHOD(thread_tmp_39_fu_644_p3);
    sensitive << ( D_fu_116 );

    SC_METHOD(thread_tmp_3_fu_372_p3);
    sensitive << ( C_3_fu_112 );

    SC_METHOD(thread_tmp_40_fu_652_p3);
    sensitive << ( D_fu_116 );

    SC_METHOD(thread_tmp_41_fu_660_p3);
    sensitive << ( D_fu_116 );

    SC_METHOD(thread_tmp_42_fu_668_p3);
    sensitive << ( D_fu_116 );

    SC_METHOD(thread_tmp_43_fu_676_p3);
    sensitive << ( D_fu_116 );

    SC_METHOD(thread_tmp_44_fu_684_p3);
    sensitive << ( D_fu_116 );

    SC_METHOD(thread_tmp_45_fu_692_p3);
    sensitive << ( D_fu_116 );

    SC_METHOD(thread_tmp_46_fu_700_p3);
    sensitive << ( D_fu_116 );

    SC_METHOD(thread_tmp_47_fu_708_p3);
    sensitive << ( D_fu_116 );

    SC_METHOD(thread_tmp_48_fu_716_p3);
    sensitive << ( D_fu_116 );

    SC_METHOD(thread_tmp_49_fu_724_p3);
    sensitive << ( D_fu_116 );

    SC_METHOD(thread_tmp_4_fu_249_p4);
    sensitive << ( C_3_fu_112 );

    SC_METHOD(thread_tmp_5_fu_267_p4);
    sensitive << ( D_fu_116 );

    SC_METHOD(thread_tmp_6_fu_380_p3);
    sensitive << ( C_3_fu_112 );

    SC_METHOD(thread_tmp_7_fu_388_p3);
    sensitive << ( C_3_fu_112 );

    SC_METHOD(thread_tmp_8_fu_396_p3);
    sensitive << ( C_3_fu_112 );

    SC_METHOD(thread_tmp_9_fu_404_p3);
    sensitive << ( C_3_fu_112 );

    SC_METHOD(thread_tmp_fu_295_p3);
    sensitive << ( C_3_fu_112 );

    SC_METHOD(thread_trunc_ln197_fu_303_p1);
    sensitive << ( C_3_fu_112 );

    SC_METHOD(thread_trunc_ln198_fu_323_p1);
    sensitive << ( D_fu_116 );

    SC_METHOD(thread_trunc_ln203_fu_241_p1);
    sensitive << ( C_3_fu_112 );

    SC_METHOD(thread_trunc_ln204_fu_245_p1);
    sensitive << ( D_fu_116 );

    SC_METHOD(thread_trunc_ln212_1_fu_355_p1);
    sensitive << ( C_3_fu_112 );

    SC_METHOD(thread_trunc_ln212_fu_351_p1);
    sensitive << ( D_fu_116 );

    SC_METHOD(thread_zext_ln214_fu_359_p1);
    sensitive << ( i_2_i_reg_145 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln192_fu_181_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Loop_loop3_proc_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, p_read, "(port)p_read");
    sc_trace(mVcdFile, p_read1, "(port)p_read1");
    sc_trace(mVcdFile, sub_key_address0, "(port)sub_key_address0");
    sc_trace(mVcdFile, sub_key_ce0, "(port)sub_key_ce0");
    sc_trace(mVcdFile, sub_key_we0, "(port)sub_key_we0");
    sc_trace(mVcdFile, sub_key_d0, "(port)sub_key_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_2_i_reg_145, "i_2_i_reg_145");
    sc_trace(mVcdFile, icmp_ln192_fu_181_p2, "icmp_ln192_fu_181_p2");
    sc_trace(mVcdFile, icmp_ln192_reg_851, "icmp_ln192_reg_851");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, i_fu_187_p2, "i_fu_187_p2");
    sc_trace(mVcdFile, i_reg_855, "i_reg_855");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, empty_854_fu_235_p2, "empty_854_fu_235_p2");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_phi_mux_i_2_i_phi_fu_149_p4, "ap_phi_mux_i_2_i_phi_fu_149_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, zext_ln214_fu_359_p1, "zext_ln214_fu_359_p1");
    sc_trace(mVcdFile, C_3_fu_112, "C_3_fu_112");
    sc_trace(mVcdFile, C_1_fu_259_p3, "C_1_fu_259_p3");
    sc_trace(mVcdFile, C_2_fu_307_p3, "C_2_fu_307_p3");
    sc_trace(mVcdFile, D_fu_116, "D_fu_116");
    sc_trace(mVcdFile, D_3_fu_167_p1, "D_3_fu_167_p1");
    sc_trace(mVcdFile, D_1_fu_277_p3, "D_1_fu_277_p3");
    sc_trace(mVcdFile, D_2_fu_327_p3, "D_2_fu_327_p3");
    sc_trace(mVcdFile, empty_849_fu_205_p2, "empty_849_fu_205_p2");
    sc_trace(mVcdFile, empty_848_fu_199_p2, "empty_848_fu_199_p2");
    sc_trace(mVcdFile, empty_851_fu_217_p2, "empty_851_fu_217_p2");
    sc_trace(mVcdFile, empty_850_fu_211_p2, "empty_850_fu_211_p2");
    sc_trace(mVcdFile, empty_853_fu_229_p2, "empty_853_fu_229_p2");
    sc_trace(mVcdFile, empty_852_fu_223_p2, "empty_852_fu_223_p2");
    sc_trace(mVcdFile, trunc_ln203_fu_241_p1, "trunc_ln203_fu_241_p1");
    sc_trace(mVcdFile, tmp_4_fu_249_p4, "tmp_4_fu_249_p4");
    sc_trace(mVcdFile, trunc_ln204_fu_245_p1, "trunc_ln204_fu_245_p1");
    sc_trace(mVcdFile, tmp_5_fu_267_p4, "tmp_5_fu_267_p4");
    sc_trace(mVcdFile, trunc_ln197_fu_303_p1, "trunc_ln197_fu_303_p1");
    sc_trace(mVcdFile, tmp_fu_295_p3, "tmp_fu_295_p3");
    sc_trace(mVcdFile, trunc_ln198_fu_323_p1, "trunc_ln198_fu_323_p1");
    sc_trace(mVcdFile, tmp_1_fu_315_p3, "tmp_1_fu_315_p3");
    sc_trace(mVcdFile, tmp_6_fu_380_p3, "tmp_6_fu_380_p3");
    sc_trace(mVcdFile, tmp_3_fu_372_p3, "tmp_3_fu_372_p3");
    sc_trace(mVcdFile, tmp_7_fu_388_p3, "tmp_7_fu_388_p3");
    sc_trace(mVcdFile, tmp_8_fu_396_p3, "tmp_8_fu_396_p3");
    sc_trace(mVcdFile, tmp_9_fu_404_p3, "tmp_9_fu_404_p3");
    sc_trace(mVcdFile, tmp_10_fu_412_p3, "tmp_10_fu_412_p3");
    sc_trace(mVcdFile, tmp_11_fu_420_p3, "tmp_11_fu_420_p3");
    sc_trace(mVcdFile, trunc_ln212_1_fu_355_p1, "trunc_ln212_1_fu_355_p1");
    sc_trace(mVcdFile, tmp_2_fu_364_p3, "tmp_2_fu_364_p3");
    sc_trace(mVcdFile, tmp_12_fu_428_p3, "tmp_12_fu_428_p3");
    sc_trace(mVcdFile, tmp_13_fu_436_p3, "tmp_13_fu_436_p3");
    sc_trace(mVcdFile, tmp_14_fu_444_p3, "tmp_14_fu_444_p3");
    sc_trace(mVcdFile, tmp_15_fu_452_p3, "tmp_15_fu_452_p3");
    sc_trace(mVcdFile, tmp_16_fu_460_p3, "tmp_16_fu_460_p3");
    sc_trace(mVcdFile, tmp_17_fu_468_p3, "tmp_17_fu_468_p3");
    sc_trace(mVcdFile, tmp_18_fu_476_p3, "tmp_18_fu_476_p3");
    sc_trace(mVcdFile, tmp_19_fu_484_p3, "tmp_19_fu_484_p3");
    sc_trace(mVcdFile, tmp_20_fu_492_p3, "tmp_20_fu_492_p3");
    sc_trace(mVcdFile, tmp_21_fu_500_p3, "tmp_21_fu_500_p3");
    sc_trace(mVcdFile, tmp_22_fu_508_p3, "tmp_22_fu_508_p3");
    sc_trace(mVcdFile, tmp_23_fu_516_p3, "tmp_23_fu_516_p3");
    sc_trace(mVcdFile, tmp_24_fu_524_p3, "tmp_24_fu_524_p3");
    sc_trace(mVcdFile, tmp_25_fu_532_p3, "tmp_25_fu_532_p3");
    sc_trace(mVcdFile, tmp_26_fu_540_p3, "tmp_26_fu_540_p3");
    sc_trace(mVcdFile, tmp_27_fu_548_p3, "tmp_27_fu_548_p3");
    sc_trace(mVcdFile, tmp_28_fu_556_p3, "tmp_28_fu_556_p3");
    sc_trace(mVcdFile, tmp_29_fu_564_p3, "tmp_29_fu_564_p3");
    sc_trace(mVcdFile, tmp_30_fu_572_p3, "tmp_30_fu_572_p3");
    sc_trace(mVcdFile, tmp_31_fu_580_p3, "tmp_31_fu_580_p3");
    sc_trace(mVcdFile, tmp_32_fu_588_p3, "tmp_32_fu_588_p3");
    sc_trace(mVcdFile, tmp_33_fu_596_p3, "tmp_33_fu_596_p3");
    sc_trace(mVcdFile, tmp_34_fu_604_p3, "tmp_34_fu_604_p3");
    sc_trace(mVcdFile, tmp_35_fu_612_p3, "tmp_35_fu_612_p3");
    sc_trace(mVcdFile, tmp_36_fu_620_p3, "tmp_36_fu_620_p3");
    sc_trace(mVcdFile, tmp_37_fu_628_p3, "tmp_37_fu_628_p3");
    sc_trace(mVcdFile, tmp_38_fu_636_p3, "tmp_38_fu_636_p3");
    sc_trace(mVcdFile, tmp_39_fu_644_p3, "tmp_39_fu_644_p3");
    sc_trace(mVcdFile, tmp_40_fu_652_p3, "tmp_40_fu_652_p3");
    sc_trace(mVcdFile, tmp_41_fu_660_p3, "tmp_41_fu_660_p3");
    sc_trace(mVcdFile, trunc_ln212_fu_351_p1, "trunc_ln212_fu_351_p1");
    sc_trace(mVcdFile, tmp_42_fu_668_p3, "tmp_42_fu_668_p3");
    sc_trace(mVcdFile, tmp_43_fu_676_p3, "tmp_43_fu_676_p3");
    sc_trace(mVcdFile, tmp_44_fu_684_p3, "tmp_44_fu_684_p3");
    sc_trace(mVcdFile, tmp_45_fu_692_p3, "tmp_45_fu_692_p3");
    sc_trace(mVcdFile, tmp_46_fu_700_p3, "tmp_46_fu_700_p3");
    sc_trace(mVcdFile, tmp_47_fu_708_p3, "tmp_47_fu_708_p3");
    sc_trace(mVcdFile, tmp_48_fu_716_p3, "tmp_48_fu_716_p3");
    sc_trace(mVcdFile, tmp_49_fu_724_p3, "tmp_49_fu_724_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

Loop_loop3_proc::~Loop_loop3_proc() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void Loop_loop3_proc::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln192_fu_181_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(empty_854_fu_235_p2.read(), ap_const_lv1_1))) {
        C_3_fu_112 = C_2_fu_307_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(icmp_ln192_fu_181_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(empty_854_fu_235_p2.read(), ap_const_lv1_0))) {
        C_3_fu_112 = C_1_fu_259_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_3_fu_112 = p_read.read().range(55, 28);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln192_fu_181_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(empty_854_fu_235_p2.read(), ap_const_lv1_1))) {
        D_fu_116 = D_2_fu_327_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(icmp_ln192_fu_181_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(empty_854_fu_235_p2.read(), ap_const_lv1_0))) {
        D_fu_116 = D_1_fu_277_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        D_fu_116 = D_3_fu_167_p1.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln192_reg_851.read(), ap_const_lv1_0))) {
        i_2_i_reg_145 = i_reg_855.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        i_2_i_reg_145 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        i_reg_855 = i_fu_187_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln192_reg_851 = icmp_ln192_fu_181_p2.read();
    }
}

void Loop_loop3_proc::thread_C_1_fu_259_p3() {
    C_1_fu_259_p3 = esl_concat<26,2>(trunc_ln203_fu_241_p1.read(), tmp_4_fu_249_p4.read());
}

void Loop_loop3_proc::thread_C_2_fu_307_p3() {
    C_2_fu_307_p3 = esl_concat<27,1>(trunc_ln197_fu_303_p1.read(), tmp_fu_295_p3.read());
}

void Loop_loop3_proc::thread_D_1_fu_277_p3() {
    D_1_fu_277_p3 = esl_concat<26,2>(trunc_ln204_fu_245_p1.read(), tmp_5_fu_267_p4.read());
}

void Loop_loop3_proc::thread_D_2_fu_327_p3() {
    D_2_fu_327_p3 = esl_concat<27,1>(trunc_ln198_fu_323_p1.read(), tmp_1_fu_315_p3.read());
}

void Loop_loop3_proc::thread_D_3_fu_167_p1() {
    D_3_fu_167_p1 = p_read1.read().range(28-1, 0);
}

void Loop_loop3_proc::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void Loop_loop3_proc::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Loop_loop3_proc::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[2];
}

void Loop_loop3_proc::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_loop3_proc::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_loop3_proc::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_loop3_proc::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void Loop_loop3_proc::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_loop3_proc::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Loop_loop3_proc::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln192_fu_181_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void Loop_loop3_proc::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Loop_loop3_proc::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Loop_loop3_proc::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Loop_loop3_proc::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Loop_loop3_proc::thread_ap_phi_mux_i_2_i_phi_fu_149_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln192_reg_851.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_2_i_phi_fu_149_p4 = i_reg_855.read();
    } else {
        ap_phi_mux_i_2_i_phi_fu_149_p4 = i_2_i_reg_145.read();
    }
}

void Loop_loop3_proc::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Loop_loop3_proc::thread_empty_848_fu_199_p2() {
    empty_848_fu_199_p2 = (!ap_phi_mux_i_2_i_phi_fu_149_p4.read().is_01() || !ap_const_lv5_F.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_2_i_phi_fu_149_p4.read() == ap_const_lv5_F);
}

void Loop_loop3_proc::thread_empty_849_fu_205_p2() {
    empty_849_fu_205_p2 = (!ap_phi_mux_i_2_i_phi_fu_149_p4.read().is_01() || !ap_const_lv5_8.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_2_i_phi_fu_149_p4.read() == ap_const_lv5_8);
}

void Loop_loop3_proc::thread_empty_850_fu_211_p2() {
    empty_850_fu_211_p2 = (empty_849_fu_205_p2.read() | empty_848_fu_199_p2.read());
}

void Loop_loop3_proc::thread_empty_851_fu_217_p2() {
    empty_851_fu_217_p2 = (!ap_phi_mux_i_2_i_phi_fu_149_p4.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_2_i_phi_fu_149_p4.read() == ap_const_lv5_1);
}

void Loop_loop3_proc::thread_empty_852_fu_223_p2() {
    empty_852_fu_223_p2 = (empty_851_fu_217_p2.read() | empty_850_fu_211_p2.read());
}

void Loop_loop3_proc::thread_empty_853_fu_229_p2() {
    empty_853_fu_229_p2 = (!ap_phi_mux_i_2_i_phi_fu_149_p4.read().is_01() || !ap_const_lv5_0.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_2_i_phi_fu_149_p4.read() == ap_const_lv5_0);
}

void Loop_loop3_proc::thread_empty_854_fu_235_p2() {
    empty_854_fu_235_p2 = (empty_853_fu_229_p2.read() | empty_852_fu_223_p2.read());
}

void Loop_loop3_proc::thread_i_fu_187_p2() {
    i_fu_187_p2 = (!ap_phi_mux_i_2_i_phi_fu_149_p4.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(ap_phi_mux_i_2_i_phi_fu_149_p4.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void Loop_loop3_proc::thread_icmp_ln192_fu_181_p2() {
    icmp_ln192_fu_181_p2 = (!ap_phi_mux_i_2_i_phi_fu_149_p4.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_2_i_phi_fu_149_p4.read() == ap_const_lv5_10);
}

void Loop_loop3_proc::thread_sub_key_address0() {
    sub_key_address0 =  (sc_lv<4>) (zext_ln214_fu_359_p1.read());
}

void Loop_loop3_proc::thread_sub_key_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        sub_key_ce0 = ap_const_logic_1;
    } else {
        sub_key_ce0 = ap_const_logic_0;
    }
}

void Loop_loop3_proc::thread_sub_key_d0() {
    sub_key_d0 = esl_concat<47,1>(esl_concat<46,1>(esl_concat<45,1>(esl_concat<44,1>(esl_concat<43,1>(esl_concat<42,1>(esl_concat<41,1>(esl_concat<40,1>(esl_concat<39,1>(esl_concat<38,1>(esl_concat<37,1>(esl_concat<36,1>(esl_concat<35,1>(esl_concat<34,1>(esl_concat<33,1>(esl_concat<32,1>(esl_concat<31,1>(esl_concat<30,1>(esl_concat<29,1>(esl_concat<28,1>(esl_concat<27,1>(esl_concat<26,1>(esl_concat<25,1>(esl_concat<24,1>(esl_concat<23,1>(esl_concat<22,1>(esl_concat<21,1>(esl_concat<20,1>(esl_concat<19,1>(esl_concat<18,1>(esl_concat<17,1>(esl_concat<16,1>(esl_concat<15,1>(esl_concat<14,1>(esl_concat<13,1>(esl_concat<12,1>(esl_concat<11,1>(esl_concat<10,1>(esl_concat<9,1>(esl_concat<8,1>(esl_concat<7,1>(esl_concat<6,1>(esl_concat<5,1>(esl_concat<4,1>(esl_concat<3,1>(esl_concat<2,1>(esl_concat<1,1>(tmp_6_fu_380_p3.read(), tmp_3_fu_372_p3.read()), tmp_7_fu_388_p3.read()), tmp_8_fu_396_p3.read()), tmp_9_fu_404_p3.read()), tmp_10_fu_412_p3.read()), tmp_11_fu_420_p3.read()), trunc_ln212_1_fu_355_p1.read()), tmp_2_fu_364_p3.read()), tmp_12_fu_428_p3.read()), tmp_13_fu_436_p3.read()), tmp_14_fu_444_p3.read()), tmp_15_fu_452_p3.read()), tmp_16_fu_460_p3.read()), tmp_17_fu_468_p3.read()), tmp_18_fu_476_p3.read()), tmp_19_fu_484_p3.read()), tmp_20_fu_492_p3.read()), tmp_21_fu_500_p3.read()), tmp_22_fu_508_p3.read()), tmp_23_fu_516_p3.read()), tmp_24_fu_524_p3.read()), tmp_25_fu_532_p3.read()), tmp_26_fu_540_p3.read()), tmp_27_fu_548_p3.read()), tmp_28_fu_556_p3.read()), tmp_29_fu_564_p3.read()), tmp_30_fu_572_p3.read()), tmp_31_fu_580_p3.read()), tmp_32_fu_588_p3.read()), tmp_33_fu_596_p3.read()), tmp_34_fu_604_p3.read()), tmp_35_fu_612_p3.read()), tmp_36_fu_620_p3.read()), tmp_37_fu_628_p3.read()), tmp_38_fu_636_p3.read()), tmp_39_fu_644_p3.read()), tmp_40_fu_652_p3.read()), tmp_41_fu_660_p3.read()), trunc_ln212_fu_351_p1.read()), tmp_42_fu_668_p3.read()), tmp_43_fu_676_p3.read()), tmp_44_fu_684_p3.read()), tmp_45_fu_692_p3.read()), tmp_46_fu_700_p3.read()), tmp_47_fu_708_p3.read()), tmp_48_fu_716_p3.read()), tmp_49_fu_724_p3.read());
}

void Loop_loop3_proc::thread_sub_key_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln192_reg_851.read(), ap_const_lv1_0))) {
        sub_key_we0 = ap_const_logic_1;
    } else {
        sub_key_we0 = ap_const_logic_0;
    }
}

void Loop_loop3_proc::thread_tmp_10_fu_412_p3() {
    tmp_10_fu_412_p3 = C_3_fu_112.read().range(23, 23);
}

void Loop_loop3_proc::thread_tmp_11_fu_420_p3() {
    tmp_11_fu_420_p3 = C_3_fu_112.read().range(25, 25);
}

void Loop_loop3_proc::thread_tmp_12_fu_428_p3() {
    tmp_12_fu_428_p3 = C_3_fu_112.read().range(22, 22);
}

void Loop_loop3_proc::thread_tmp_13_fu_436_p3() {
    tmp_13_fu_436_p3 = C_3_fu_112.read().range(7, 7);
}

void Loop_loop3_proc::thread_tmp_14_fu_444_p3() {
    tmp_14_fu_444_p3 = C_3_fu_112.read().range(18, 18);
}

void Loop_loop3_proc::thread_tmp_15_fu_452_p3() {
    tmp_15_fu_452_p3 = C_3_fu_112.read().range(5, 5);
}

void Loop_loop3_proc::thread_tmp_16_fu_460_p3() {
    tmp_16_fu_460_p3 = C_3_fu_112.read().range(9, 9);
}

void Loop_loop3_proc::thread_tmp_17_fu_468_p3() {
    tmp_17_fu_468_p3 = C_3_fu_112.read().range(16, 16);
}

void Loop_loop3_proc::thread_tmp_18_fu_476_p3() {
    tmp_18_fu_476_p3 = C_3_fu_112.read().range(24, 24);
}

void Loop_loop3_proc::thread_tmp_19_fu_484_p3() {
    tmp_19_fu_484_p3 = C_3_fu_112.read().range(2, 2);
}

void Loop_loop3_proc::thread_tmp_1_fu_315_p3() {
    tmp_1_fu_315_p3 = D_fu_116.read().range(27, 27);
}

void Loop_loop3_proc::thread_tmp_20_fu_492_p3() {
    tmp_20_fu_492_p3 = C_3_fu_112.read().range(20, 20);
}

void Loop_loop3_proc::thread_tmp_21_fu_500_p3() {
    tmp_21_fu_500_p3 = C_3_fu_112.read().range(12, 12);
}

void Loop_loop3_proc::thread_tmp_22_fu_508_p3() {
    tmp_22_fu_508_p3 = C_3_fu_112.read().range(21, 21);
}

void Loop_loop3_proc::thread_tmp_23_fu_516_p3() {
    tmp_23_fu_516_p3 = C_3_fu_112.read().range(1, 1);
}

void Loop_loop3_proc::thread_tmp_24_fu_524_p3() {
    tmp_24_fu_524_p3 = C_3_fu_112.read().range(8, 8);
}

void Loop_loop3_proc::thread_tmp_25_fu_532_p3() {
    tmp_25_fu_532_p3 = C_3_fu_112.read().range(15, 15);
}

void Loop_loop3_proc::thread_tmp_26_fu_540_p3() {
    tmp_26_fu_540_p3 = C_3_fu_112.read().range(26, 26);
}

void Loop_loop3_proc::thread_tmp_27_fu_548_p3() {
    tmp_27_fu_548_p3 = D_fu_116.read().range(15, 15);
}

void Loop_loop3_proc::thread_tmp_28_fu_556_p3() {
    tmp_28_fu_556_p3 = D_fu_116.read().range(4, 4);
}

void Loop_loop3_proc::thread_tmp_29_fu_564_p3() {
    tmp_29_fu_564_p3 = D_fu_116.read().range(25, 25);
}

void Loop_loop3_proc::thread_tmp_2_fu_364_p3() {
    tmp_2_fu_364_p3 = C_3_fu_112.read().range(13, 13);
}

void Loop_loop3_proc::thread_tmp_30_fu_572_p3() {
    tmp_30_fu_572_p3 = D_fu_116.read().range(19, 19);
}

void Loop_loop3_proc::thread_tmp_31_fu_580_p3() {
    tmp_31_fu_580_p3 = D_fu_116.read().range(9, 9);
}

void Loop_loop3_proc::thread_tmp_32_fu_588_p3() {
    tmp_32_fu_588_p3 = D_fu_116.read().range(1, 1);
}

void Loop_loop3_proc::thread_tmp_33_fu_596_p3() {
    tmp_33_fu_596_p3 = D_fu_116.read().range(26, 26);
}

void Loop_loop3_proc::thread_tmp_34_fu_604_p3() {
    tmp_34_fu_604_p3 = D_fu_116.read().range(16, 16);
}

void Loop_loop3_proc::thread_tmp_35_fu_612_p3() {
    tmp_35_fu_612_p3 = D_fu_116.read().range(5, 5);
}

void Loop_loop3_proc::thread_tmp_36_fu_620_p3() {
    tmp_36_fu_620_p3 = D_fu_116.read().range(11, 11);
}

void Loop_loop3_proc::thread_tmp_37_fu_628_p3() {
    tmp_37_fu_628_p3 = D_fu_116.read().range(23, 23);
}

void Loop_loop3_proc::thread_tmp_38_fu_636_p3() {
    tmp_38_fu_636_p3 = D_fu_116.read().range(8, 8);
}

void Loop_loop3_proc::thread_tmp_39_fu_644_p3() {
    tmp_39_fu_644_p3 = D_fu_116.read().range(12, 12);
}

void Loop_loop3_proc::thread_tmp_3_fu_372_p3() {
    tmp_3_fu_372_p3 = C_3_fu_112.read().range(11, 11);
}

void Loop_loop3_proc::thread_tmp_40_fu_652_p3() {
    tmp_40_fu_652_p3 = D_fu_116.read().range(7, 7);
}

void Loop_loop3_proc::thread_tmp_41_fu_660_p3() {
    tmp_41_fu_660_p3 = D_fu_116.read().range(17, 17);
}

void Loop_loop3_proc::thread_tmp_42_fu_668_p3() {
    tmp_42_fu_668_p3 = D_fu_116.read().range(22, 22);
}

void Loop_loop3_proc::thread_tmp_43_fu_676_p3() {
    tmp_43_fu_676_p3 = D_fu_116.read().range(3, 3);
}

void Loop_loop3_proc::thread_tmp_44_fu_684_p3() {
    tmp_44_fu_684_p3 = D_fu_116.read().range(10, 10);
}

void Loop_loop3_proc::thread_tmp_45_fu_692_p3() {
    tmp_45_fu_692_p3 = D_fu_116.read().range(14, 14);
}

void Loop_loop3_proc::thread_tmp_46_fu_700_p3() {
    tmp_46_fu_700_p3 = D_fu_116.read().range(6, 6);
}

void Loop_loop3_proc::thread_tmp_47_fu_708_p3() {
    tmp_47_fu_708_p3 = D_fu_116.read().range(20, 20);
}

void Loop_loop3_proc::thread_tmp_48_fu_716_p3() {
    tmp_48_fu_716_p3 = D_fu_116.read().range(27, 27);
}

void Loop_loop3_proc::thread_tmp_49_fu_724_p3() {
    tmp_49_fu_724_p3 = D_fu_116.read().range(24, 24);
}

void Loop_loop3_proc::thread_tmp_4_fu_249_p4() {
    tmp_4_fu_249_p4 = C_3_fu_112.read().range(27, 26);
}

void Loop_loop3_proc::thread_tmp_5_fu_267_p4() {
    tmp_5_fu_267_p4 = D_fu_116.read().range(27, 26);
}

void Loop_loop3_proc::thread_tmp_6_fu_380_p3() {
    tmp_6_fu_380_p3 = C_3_fu_112.read().range(14, 14);
}

void Loop_loop3_proc::thread_tmp_7_fu_388_p3() {
    tmp_7_fu_388_p3 = C_3_fu_112.read().range(17, 17);
}

void Loop_loop3_proc::thread_tmp_8_fu_396_p3() {
    tmp_8_fu_396_p3 = C_3_fu_112.read().range(4, 4);
}

void Loop_loop3_proc::thread_tmp_9_fu_404_p3() {
    tmp_9_fu_404_p3 = C_3_fu_112.read().range(27, 27);
}

void Loop_loop3_proc::thread_tmp_fu_295_p3() {
    tmp_fu_295_p3 = C_3_fu_112.read().range(27, 27);
}

void Loop_loop3_proc::thread_trunc_ln197_fu_303_p1() {
    trunc_ln197_fu_303_p1 = C_3_fu_112.read().range(27-1, 0);
}

void Loop_loop3_proc::thread_trunc_ln198_fu_323_p1() {
    trunc_ln198_fu_323_p1 = D_fu_116.read().range(27-1, 0);
}

void Loop_loop3_proc::thread_trunc_ln203_fu_241_p1() {
    trunc_ln203_fu_241_p1 = C_3_fu_112.read().range(26-1, 0);
}

void Loop_loop3_proc::thread_trunc_ln204_fu_245_p1() {
    trunc_ln204_fu_245_p1 = D_fu_116.read().range(26-1, 0);
}

void Loop_loop3_proc::thread_trunc_ln212_1_fu_355_p1() {
    trunc_ln212_1_fu_355_p1 = C_3_fu_112.read().range(1-1, 0);
}

void Loop_loop3_proc::thread_trunc_ln212_fu_351_p1() {
    trunc_ln212_fu_351_p1 = D_fu_116.read().range(1-1, 0);
}

void Loop_loop3_proc::thread_zext_ln214_fu_359_p1() {
    zext_ln214_fu_359_p1 = esl_zext<64,5>(i_2_i_reg_145.read());
}

void Loop_loop3_proc::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln192_fu_181_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln192_fu_181_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}


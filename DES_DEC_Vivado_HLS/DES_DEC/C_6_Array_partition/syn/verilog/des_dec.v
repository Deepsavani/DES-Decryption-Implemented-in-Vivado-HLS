// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="des_dec,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a35tl-cpg236-2L,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.689625,HLS_SYN_LAT=6629,HLS_SYN_TPT=none,HLS_SYN_MEM=1,HLS_SYN_DSP=0,HLS_SYN_FF=2285,HLS_SYN_LUT=3830,HLS_VERSION=2019_1}" *)

module des_dec (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r,
        key,
        ap_return
);

parameter    ap_ST_fsm_state1 = 22'd1;
parameter    ap_ST_fsm_state2 = 22'd2;
parameter    ap_ST_fsm_state3 = 22'd4;
parameter    ap_ST_fsm_state4 = 22'd8;
parameter    ap_ST_fsm_state5 = 22'd16;
parameter    ap_ST_fsm_state6 = 22'd32;
parameter    ap_ST_fsm_state7 = 22'd64;
parameter    ap_ST_fsm_state8 = 22'd128;
parameter    ap_ST_fsm_state9 = 22'd256;
parameter    ap_ST_fsm_state10 = 22'd512;
parameter    ap_ST_fsm_state11 = 22'd1024;
parameter    ap_ST_fsm_state12 = 22'd2048;
parameter    ap_ST_fsm_state13 = 22'd4096;
parameter    ap_ST_fsm_state14 = 22'd8192;
parameter    ap_ST_fsm_state15 = 22'd16384;
parameter    ap_ST_fsm_state16 = 22'd32768;
parameter    ap_ST_fsm_state17 = 22'd65536;
parameter    ap_ST_fsm_state18 = 22'd131072;
parameter    ap_ST_fsm_state19 = 22'd262144;
parameter    ap_ST_fsm_state20 = 22'd524288;
parameter    ap_ST_fsm_state21 = 22'd1048576;
parameter    ap_ST_fsm_state22 = 22'd2097152;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] input_r;
input  [63:0] key;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [21:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [5:0] IP_address0;
reg    IP_ce0;
wire   [6:0] IP_q0;
wire   [5:0] PC1_address0;
reg    PC1_ce0;
wire   [5:0] PC1_q0;
wire   [5:0] PC2_address0;
reg    PC2_ce0;
wire   [5:0] PC2_q0;
wire   [5:0] E_address0;
reg    E_ce0;
wire   [5:0] E_q0;
wire   [8:0] S_address0;
reg    S_ce0;
wire   [3:0] S_q0;
wire   [4:0] P_address0;
reg    P_ce0;
wire   [5:0] P_q0;
wire   [5:0] PI_address0;
reg    PI_ce0;
wire   [6:0] PI_q0;
wire   [6:0] i_fu_613_p2;
reg   [6:0] i_reg_2231;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln171_fu_607_p2;
wire   [62:0] trunc_ln174_1_fu_624_p1;
reg   [62:0] trunc_ln174_1_reg_2241;
reg   [31:0] L_reg_2246;
wire   [31:0] R_fu_638_p1;
reg   [31:0] R_reg_2251;
wire   [63:0] init_perm_res_fu_661_p3;
wire    ap_CS_fsm_state3;
wire   [5:0] i_5_fu_674_p2;
reg   [5:0] i_5_reg_2264;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln182_fu_668_p2;
wire   [62:0] trunc_ln184_1_fu_685_p1;
reg   [62:0] trunc_ln184_1_reg_2274;
wire   [63:0] permuted_choice_1_fu_736_p3;
wire    ap_CS_fsm_state5;
wire   [4:0] i_7_fu_749_p2;
reg   [4:0] i_7_reg_2415;
wire    ap_CS_fsm_state6;
wire   [3:0] trunc_ln214_fu_901_p1;
reg   [3:0] trunc_ln214_reg_2423;
wire   [0:0] icmp_ln192_fu_743_p2;
wire   [55:0] tmp_9_fu_910_p3;
reg   [55:0] tmp_9_reg_2451;
wire    ap_CS_fsm_state7;
wire   [5:0] j_fu_1596_p2;
reg   [5:0] j_reg_2459;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln216_fu_1590_p2;
wire   [63:0] sub_key_0_fu_1667_p3;
reg   [63:0] sub_key_0_reg_2469;
wire    ap_CS_fsm_state9;
wire   [4:0] i_8_fu_1745_p2;
reg   [4:0] i_8_reg_2492;
wire    ap_CS_fsm_state12;
wire   [63:0] pre_output_fu_1751_p3;
reg   [63:0] pre_output_reg_2497;
wire   [0:0] icmp_ln223_fu_1739_p2;
wire   [5:0] j_6_fu_1765_p2;
reg   [5:0] j_6_reg_2505;
wire    ap_CS_fsm_state13;
wire   [0:0] icmp_ln227_fu_1759_p2;
wire   [62:0] trunc_ln229_1_fu_1776_p1;
reg   [62:0] trunc_ln229_1_reg_2515;
wire   [46:0] xor_ln232_1_fu_1844_p2;
reg   [46:0] xor_ln232_1_reg_2520;
wire   [47:0] xor_ln232_2_fu_1850_p2;
reg   [47:0] xor_ln232_2_reg_2525;
wire   [63:0] s_input_fu_1876_p3;
wire    ap_CS_fsm_state14;
wire   [3:0] j_7_fu_1889_p2;
reg   [3:0] j_7_reg_2538;
wire    ap_CS_fsm_state15;
wire   [6:0] sub_ln240_fu_1925_p2;
reg   [6:0] sub_ln240_reg_2543;
wire   [0:0] icmp_ln235_fu_1883_p2;
wire   [5:0] sub_ln240_2_fu_1949_p2;
reg   [5:0] sub_ln240_2_reg_2548;
wire   [5:0] sub_ln243_1_fu_1961_p2;
reg   [5:0] sub_ln243_1_reg_2553;
wire   [10:0] add_ln246_1_fu_2090_p2;
reg   [10:0] add_ln246_1_reg_2558;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire   [5:0] j_8_fu_2123_p2;
reg   [5:0] j_8_reg_2571;
wire    ap_CS_fsm_state19;
wire   [0:0] icmp_ln252_fu_2117_p2;
wire   [30:0] trunc_ln254_1_fu_2134_p1;
reg   [30:0] trunc_ln254_1_reg_2581;
wire   [31:0] R_1_fu_2138_p2;
wire   [31:0] f_function_res_fu_2164_p3;
wire    ap_CS_fsm_state20;
wire   [6:0] i_6_fu_2177_p2;
reg   [6:0] i_6_reg_2599;
wire    ap_CS_fsm_state21;
wire   [0:0] icmp_ln267_fu_2171_p2;
wire   [62:0] trunc_ln270_1_fu_2188_p1;
reg   [62:0] trunc_ln270_1_reg_2609;
wire   [63:0] inv_init_perm_res_fu_2211_p3;
wire    ap_CS_fsm_state22;
reg   [63:0] init_perm_res_0_reg_373;
reg   [6:0] i_0_reg_384;
reg   [63:0] permuted_choice_1_0_reg_395;
reg   [5:0] i_1_reg_406;
reg   [4:0] i_2_reg_417;
reg   [5:0] j_0_reg_428;
wire    ap_CS_fsm_state11;
reg   [31:0] temp_reg_439;
reg   [31:0] L_0_reg_449;
reg   [4:0] i_3_reg_460;
reg   [63:0] s_input_0_reg_472;
reg   [5:0] j_1_reg_483;
reg   [3:0] j_2_reg_494;
wire    ap_CS_fsm_state18;
reg   [31:0] f_function_res_0_reg_506;
reg   [5:0] j_3_reg_517;
reg   [6:0] i_4_reg_528;
reg   [63:0] inv_init_perm_res_0_reg_539;
wire   [63:0] zext_ln174_1_fu_619_p1;
wire   [63:0] zext_ln184_1_fu_680_p1;
wire   [63:0] zext_ln218_fu_1602_p1;
wire   [63:0] zext_ln229_fu_1771_p1;
wire  signed [63:0] sext_ln246_3_fu_2096_p1;
wire   [63:0] zext_ln254_fu_2129_p1;
wire   [63:0] zext_ln270_1_fu_2183_p1;
reg   [27:0] C_1_fu_194;
wire   [27:0] C_2_fu_811_p3;
wire   [0:0] empty_17_fu_791_p2;
wire   [27:0] C_3_fu_863_p3;
reg   [27:0] D_fu_198;
wire   [27:0] D_1_fu_699_p1;
wire   [27:0] D_2_fu_833_p3;
wire   [27:0] D_3_fu_883_p3;
reg   [63:0] sub_key_15_fu_202;
wire   [63:0] sub_key_0_21_ph_fu_918_p18;
wire    ap_CS_fsm_state10;
reg   [63:0] sub_key_15_1_fu_206;
wire   [63:0] sub_key_1_2_ph_fu_955_p18;
reg   [63:0] sub_key_15_2_fu_210;
wire   [63:0] sub_key_2_2_ph_fu_992_p18;
reg   [63:0] sub_key_15_3_fu_214;
wire   [63:0] sub_key_3_2_ph_fu_1029_p18;
reg   [63:0] sub_key_15_4_fu_218;
wire   [63:0] sub_key_4_2_ph_fu_1066_p18;
reg   [63:0] sub_key_15_5_fu_222;
wire   [63:0] sub_key_5_2_ph_fu_1103_p18;
reg   [63:0] sub_key_15_6_fu_226;
wire   [63:0] sub_key_6_2_ph_fu_1140_p18;
reg   [63:0] sub_key_15_7_fu_230;
wire   [63:0] sub_key_7_2_ph_fu_1177_p18;
reg   [63:0] sub_key_15_8_fu_234;
wire   [63:0] sub_key_8_2_ph_fu_1214_p18;
reg   [63:0] sub_key_15_9_fu_238;
wire   [63:0] sub_key_9_2_ph_fu_1251_p18;
reg   [63:0] sub_key_15_10_fu_242;
wire   [63:0] sub_key_10_2_ph_fu_1288_p18;
reg   [63:0] sub_key_15_11_fu_246;
wire   [63:0] sub_key_11_2_ph_fu_1325_p18;
reg   [63:0] sub_key_15_12_fu_250;
wire   [63:0] sub_key_12_2_ph_fu_1362_p18;
reg   [63:0] sub_key_15_13_fu_254;
wire   [63:0] sub_key_13_2_ph_fu_1399_p18;
reg   [63:0] sub_key_15_14_fu_258;
wire   [63:0] sub_key_14_2_ph_fu_1436_p18;
reg   [63:0] sub_key_15_15_fu_262;
wire   [63:0] sub_key_15_2_ph_fu_1473_p18;
reg   [31:0] s_output_1_fu_266;
wire   [31:0] s_output_fu_2104_p3;
wire   [6:0] sub_ln174_fu_642_p2;
wire   [63:0] zext_ln174_fu_648_p1;
wire   [63:0] lshr_ln174_fu_652_p2;
wire   [0:0] trunc_ln174_fu_657_p1;
wire   [6:0] zext_ln184_2_fu_713_p1;
wire   [6:0] sub_ln184_fu_717_p2;
wire   [63:0] zext_ln184_fu_723_p1;
wire   [63:0] lshr_ln184_fu_727_p2;
wire   [0:0] trunc_ln184_fu_732_p1;
wire   [0:0] empty_12_fu_761_p2;
wire   [0:0] empty_11_fu_755_p2;
wire   [0:0] empty_14_fu_773_p2;
wire   [0:0] empty_13_fu_767_p2;
wire   [0:0] empty_16_fu_785_p2;
wire   [0:0] empty_15_fu_779_p2;
wire   [25:0] trunc_ln203_fu_797_p1;
wire   [1:0] tmp_3_fu_801_p4;
wire   [25:0] trunc_ln204_fu_819_p1;
wire   [1:0] tmp_s_fu_823_p4;
wire   [26:0] trunc_ln197_fu_859_p1;
wire   [0:0] tmp_2_fu_851_p3;
wire   [26:0] trunc_ln198_fu_879_p1;
wire   [0:0] tmp_4_fu_871_p3;
wire   [5:0] sub_ln218_fu_1644_p2;
wire   [55:0] zext_ln218_1_fu_1650_p1;
wire   [55:0] lshr_ln218_fu_1654_p2;
wire   [63:0] tmp_6_fu_1607_p18;
wire   [62:0] trunc_ln218_1_fu_1663_p1;
wire   [0:0] trunc_ln218_fu_1659_p1;
wire   [3:0] trunc_ln232_fu_1780_p1;
wire   [3:0] tmp_5_fu_1790_p17;
wire   [63:0] tmp_5_fu_1790_p18;
wire   [46:0] trunc_ln232_4_fu_1840_p1;
wire   [46:0] trunc_ln232_3_fu_1836_p1;
wire   [47:0] trunc_ln232_2_fu_1832_p1;
wire   [47:0] trunc_ln232_1_fu_1828_p1;
wire   [5:0] sub_ln229_fu_1856_p2;
wire   [31:0] zext_ln229_1_fu_1862_p1;
wire   [31:0] lshr_ln229_fu_1866_p2;
wire   [0:0] trunc_ln229_fu_1872_p1;
wire   [2:0] trunc_ln240_fu_1895_p1;
wire   [5:0] shl_ln_fu_1899_p3;
wire   [3:0] shl_ln240_fu_1911_p2;
wire   [6:0] zext_ln240_fu_1907_p1;
wire   [6:0] zext_ln240_2_fu_1921_p1;
wire   [4:0] shl_ln240_1_fu_1931_p3;
wire   [5:0] zext_ln240_1_fu_1917_p1;
wire   [5:0] sub_ln240_1_fu_1943_p2;
wire   [5:0] zext_ln240_5_fu_1939_p1;
wire   [5:0] sub_ln243_fu_1955_p2;
wire  signed [31:0] sext_ln240_fu_1967_p1;
wire   [47:0] zext_ln240_4_fu_1974_p1;
wire   [47:0] lshr_ln240_fu_1978_p2;
wire   [47:0] and_ln240_fu_1984_p2;
wire   [47:0] zext_ln240_6_fu_1989_p1;
wire   [47:0] lshr_ln240_1_fu_1992_p2;
wire   [0:0] tmp_7_fu_2002_p3;
wire   [0:0] trunc_ln240_1_fu_1998_p1;
wire   [46:0] zext_ln240_3_fu_1970_p1;
wire   [46:0] lshr_ln243_fu_2026_p2;
wire   [46:0] and_ln243_fu_2032_p2;
wire   [46:0] zext_ln243_fu_2037_p1;
wire   [2:0] tmp_8_fu_2016_p4;
wire   [0:0] or_ln241_fu_2010_p2;
wire   [7:0] tmp_10_fu_2046_p4;
wire   [46:0] lshr_ln243_1_fu_2040_p2;
wire   [7:0] trunc_ln246_fu_2060_p1;
wire  signed [8:0] sext_ln246_1_fu_2064_p1;
wire  signed [8:0] sext_ln246_fu_2056_p1;
wire   [8:0] add_ln246_fu_2068_p2;
wire   [9:0] tmp_11_fu_2078_p3;
wire  signed [10:0] sext_ln246_2_fu_2074_p1;
wire   [10:0] zext_ln246_fu_2086_p1;
wire   [27:0] trunc_ln246_1_fu_2100_p1;
wire   [5:0] sub_ln254_fu_2144_p2;
wire   [31:0] zext_ln254_1_fu_2150_p1;
wire   [31:0] lshr_ln254_fu_2154_p2;
wire   [0:0] trunc_ln254_fu_2160_p1;
wire   [6:0] sub_ln270_fu_2192_p2;
wire   [63:0] zext_ln270_fu_2198_p1;
wire   [63:0] lshr_ln270_fu_2202_p2;
wire   [0:0] trunc_ln270_fu_2207_p1;
reg   [21:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 22'd1;
end

des_dec_IP #(
    .DataWidth( 7 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
IP_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(IP_address0),
    .ce0(IP_ce0),
    .q0(IP_q0)
);

des_dec_PC1 #(
    .DataWidth( 6 ),
    .AddressRange( 56 ),
    .AddressWidth( 6 ))
PC1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(PC1_address0),
    .ce0(PC1_ce0),
    .q0(PC1_q0)
);

des_dec_PC2 #(
    .DataWidth( 6 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
PC2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(PC2_address0),
    .ce0(PC2_ce0),
    .q0(PC2_q0)
);

des_dec_E #(
    .DataWidth( 6 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
E_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(E_address0),
    .ce0(E_ce0),
    .q0(E_q0)
);

des_dec_S #(
    .DataWidth( 4 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
S_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(S_address0),
    .ce0(S_ce0),
    .q0(S_q0)
);

des_dec_P #(
    .DataWidth( 6 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
P_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(P_address0),
    .ce0(P_ce0),
    .q0(P_q0)
);

des_dec_PI #(
    .DataWidth( 7 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
PI_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(PI_address0),
    .ce0(PI_ce0),
    .q0(PI_q0)
);

des_dec_mux_164_6bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
des_dec_mux_164_6bkb_U1(
    .din0(64'd0),
    .din1(sub_key_15_fu_202),
    .din2(sub_key_15_fu_202),
    .din3(sub_key_15_fu_202),
    .din4(sub_key_15_fu_202),
    .din5(sub_key_15_fu_202),
    .din6(sub_key_15_fu_202),
    .din7(sub_key_15_fu_202),
    .din8(sub_key_15_fu_202),
    .din9(sub_key_15_fu_202),
    .din10(sub_key_15_fu_202),
    .din11(sub_key_15_fu_202),
    .din12(sub_key_15_fu_202),
    .din13(sub_key_15_fu_202),
    .din14(sub_key_15_fu_202),
    .din15(sub_key_15_fu_202),
    .din16(trunc_ln214_reg_2423),
    .dout(sub_key_0_21_ph_fu_918_p18)
);

des_dec_mux_164_6bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
des_dec_mux_164_6bkb_U2(
    .din0(sub_key_15_1_fu_206),
    .din1(64'd0),
    .din2(sub_key_15_1_fu_206),
    .din3(sub_key_15_1_fu_206),
    .din4(sub_key_15_1_fu_206),
    .din5(sub_key_15_1_fu_206),
    .din6(sub_key_15_1_fu_206),
    .din7(sub_key_15_1_fu_206),
    .din8(sub_key_15_1_fu_206),
    .din9(sub_key_15_1_fu_206),
    .din10(sub_key_15_1_fu_206),
    .din11(sub_key_15_1_fu_206),
    .din12(sub_key_15_1_fu_206),
    .din13(sub_key_15_1_fu_206),
    .din14(sub_key_15_1_fu_206),
    .din15(sub_key_15_1_fu_206),
    .din16(trunc_ln214_reg_2423),
    .dout(sub_key_1_2_ph_fu_955_p18)
);

des_dec_mux_164_6bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
des_dec_mux_164_6bkb_U3(
    .din0(sub_key_15_2_fu_210),
    .din1(sub_key_15_2_fu_210),
    .din2(64'd0),
    .din3(sub_key_15_2_fu_210),
    .din4(sub_key_15_2_fu_210),
    .din5(sub_key_15_2_fu_210),
    .din6(sub_key_15_2_fu_210),
    .din7(sub_key_15_2_fu_210),
    .din8(sub_key_15_2_fu_210),
    .din9(sub_key_15_2_fu_210),
    .din10(sub_key_15_2_fu_210),
    .din11(sub_key_15_2_fu_210),
    .din12(sub_key_15_2_fu_210),
    .din13(sub_key_15_2_fu_210),
    .din14(sub_key_15_2_fu_210),
    .din15(sub_key_15_2_fu_210),
    .din16(trunc_ln214_reg_2423),
    .dout(sub_key_2_2_ph_fu_992_p18)
);

des_dec_mux_164_6bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
des_dec_mux_164_6bkb_U4(
    .din0(sub_key_15_3_fu_214),
    .din1(sub_key_15_3_fu_214),
    .din2(sub_key_15_3_fu_214),
    .din3(64'd0),
    .din4(sub_key_15_3_fu_214),
    .din5(sub_key_15_3_fu_214),
    .din6(sub_key_15_3_fu_214),
    .din7(sub_key_15_3_fu_214),
    .din8(sub_key_15_3_fu_214),
    .din9(sub_key_15_3_fu_214),
    .din10(sub_key_15_3_fu_214),
    .din11(sub_key_15_3_fu_214),
    .din12(sub_key_15_3_fu_214),
    .din13(sub_key_15_3_fu_214),
    .din14(sub_key_15_3_fu_214),
    .din15(sub_key_15_3_fu_214),
    .din16(trunc_ln214_reg_2423),
    .dout(sub_key_3_2_ph_fu_1029_p18)
);

des_dec_mux_164_6bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
des_dec_mux_164_6bkb_U5(
    .din0(sub_key_15_4_fu_218),
    .din1(sub_key_15_4_fu_218),
    .din2(sub_key_15_4_fu_218),
    .din3(sub_key_15_4_fu_218),
    .din4(64'd0),
    .din5(sub_key_15_4_fu_218),
    .din6(sub_key_15_4_fu_218),
    .din7(sub_key_15_4_fu_218),
    .din8(sub_key_15_4_fu_218),
    .din9(sub_key_15_4_fu_218),
    .din10(sub_key_15_4_fu_218),
    .din11(sub_key_15_4_fu_218),
    .din12(sub_key_15_4_fu_218),
    .din13(sub_key_15_4_fu_218),
    .din14(sub_key_15_4_fu_218),
    .din15(sub_key_15_4_fu_218),
    .din16(trunc_ln214_reg_2423),
    .dout(sub_key_4_2_ph_fu_1066_p18)
);

des_dec_mux_164_6bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
des_dec_mux_164_6bkb_U6(
    .din0(sub_key_15_5_fu_222),
    .din1(sub_key_15_5_fu_222),
    .din2(sub_key_15_5_fu_222),
    .din3(sub_key_15_5_fu_222),
    .din4(sub_key_15_5_fu_222),
    .din5(64'd0),
    .din6(sub_key_15_5_fu_222),
    .din7(sub_key_15_5_fu_222),
    .din8(sub_key_15_5_fu_222),
    .din9(sub_key_15_5_fu_222),
    .din10(sub_key_15_5_fu_222),
    .din11(sub_key_15_5_fu_222),
    .din12(sub_key_15_5_fu_222),
    .din13(sub_key_15_5_fu_222),
    .din14(sub_key_15_5_fu_222),
    .din15(sub_key_15_5_fu_222),
    .din16(trunc_ln214_reg_2423),
    .dout(sub_key_5_2_ph_fu_1103_p18)
);

des_dec_mux_164_6bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
des_dec_mux_164_6bkb_U7(
    .din0(sub_key_15_6_fu_226),
    .din1(sub_key_15_6_fu_226),
    .din2(sub_key_15_6_fu_226),
    .din3(sub_key_15_6_fu_226),
    .din4(sub_key_15_6_fu_226),
    .din5(sub_key_15_6_fu_226),
    .din6(64'd0),
    .din7(sub_key_15_6_fu_226),
    .din8(sub_key_15_6_fu_226),
    .din9(sub_key_15_6_fu_226),
    .din10(sub_key_15_6_fu_226),
    .din11(sub_key_15_6_fu_226),
    .din12(sub_key_15_6_fu_226),
    .din13(sub_key_15_6_fu_226),
    .din14(sub_key_15_6_fu_226),
    .din15(sub_key_15_6_fu_226),
    .din16(trunc_ln214_reg_2423),
    .dout(sub_key_6_2_ph_fu_1140_p18)
);

des_dec_mux_164_6bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
des_dec_mux_164_6bkb_U8(
    .din0(sub_key_15_7_fu_230),
    .din1(sub_key_15_7_fu_230),
    .din2(sub_key_15_7_fu_230),
    .din3(sub_key_15_7_fu_230),
    .din4(sub_key_15_7_fu_230),
    .din5(sub_key_15_7_fu_230),
    .din6(sub_key_15_7_fu_230),
    .din7(64'd0),
    .din8(sub_key_15_7_fu_230),
    .din9(sub_key_15_7_fu_230),
    .din10(sub_key_15_7_fu_230),
    .din11(sub_key_15_7_fu_230),
    .din12(sub_key_15_7_fu_230),
    .din13(sub_key_15_7_fu_230),
    .din14(sub_key_15_7_fu_230),
    .din15(sub_key_15_7_fu_230),
    .din16(trunc_ln214_reg_2423),
    .dout(sub_key_7_2_ph_fu_1177_p18)
);

des_dec_mux_164_6bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
des_dec_mux_164_6bkb_U9(
    .din0(sub_key_15_8_fu_234),
    .din1(sub_key_15_8_fu_234),
    .din2(sub_key_15_8_fu_234),
    .din3(sub_key_15_8_fu_234),
    .din4(sub_key_15_8_fu_234),
    .din5(sub_key_15_8_fu_234),
    .din6(sub_key_15_8_fu_234),
    .din7(sub_key_15_8_fu_234),
    .din8(64'd0),
    .din9(sub_key_15_8_fu_234),
    .din10(sub_key_15_8_fu_234),
    .din11(sub_key_15_8_fu_234),
    .din12(sub_key_15_8_fu_234),
    .din13(sub_key_15_8_fu_234),
    .din14(sub_key_15_8_fu_234),
    .din15(sub_key_15_8_fu_234),
    .din16(trunc_ln214_reg_2423),
    .dout(sub_key_8_2_ph_fu_1214_p18)
);

des_dec_mux_164_6bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
des_dec_mux_164_6bkb_U10(
    .din0(sub_key_15_9_fu_238),
    .din1(sub_key_15_9_fu_238),
    .din2(sub_key_15_9_fu_238),
    .din3(sub_key_15_9_fu_238),
    .din4(sub_key_15_9_fu_238),
    .din5(sub_key_15_9_fu_238),
    .din6(sub_key_15_9_fu_238),
    .din7(sub_key_15_9_fu_238),
    .din8(sub_key_15_9_fu_238),
    .din9(64'd0),
    .din10(sub_key_15_9_fu_238),
    .din11(sub_key_15_9_fu_238),
    .din12(sub_key_15_9_fu_238),
    .din13(sub_key_15_9_fu_238),
    .din14(sub_key_15_9_fu_238),
    .din15(sub_key_15_9_fu_238),
    .din16(trunc_ln214_reg_2423),
    .dout(sub_key_9_2_ph_fu_1251_p18)
);

des_dec_mux_164_6bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
des_dec_mux_164_6bkb_U11(
    .din0(sub_key_15_10_fu_242),
    .din1(sub_key_15_10_fu_242),
    .din2(sub_key_15_10_fu_242),
    .din3(sub_key_15_10_fu_242),
    .din4(sub_key_15_10_fu_242),
    .din5(sub_key_15_10_fu_242),
    .din6(sub_key_15_10_fu_242),
    .din7(sub_key_15_10_fu_242),
    .din8(sub_key_15_10_fu_242),
    .din9(sub_key_15_10_fu_242),
    .din10(64'd0),
    .din11(sub_key_15_10_fu_242),
    .din12(sub_key_15_10_fu_242),
    .din13(sub_key_15_10_fu_242),
    .din14(sub_key_15_10_fu_242),
    .din15(sub_key_15_10_fu_242),
    .din16(trunc_ln214_reg_2423),
    .dout(sub_key_10_2_ph_fu_1288_p18)
);

des_dec_mux_164_6bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
des_dec_mux_164_6bkb_U12(
    .din0(sub_key_15_11_fu_246),
    .din1(sub_key_15_11_fu_246),
    .din2(sub_key_15_11_fu_246),
    .din3(sub_key_15_11_fu_246),
    .din4(sub_key_15_11_fu_246),
    .din5(sub_key_15_11_fu_246),
    .din6(sub_key_15_11_fu_246),
    .din7(sub_key_15_11_fu_246),
    .din8(sub_key_15_11_fu_246),
    .din9(sub_key_15_11_fu_246),
    .din10(sub_key_15_11_fu_246),
    .din11(64'd0),
    .din12(sub_key_15_11_fu_246),
    .din13(sub_key_15_11_fu_246),
    .din14(sub_key_15_11_fu_246),
    .din15(sub_key_15_11_fu_246),
    .din16(trunc_ln214_reg_2423),
    .dout(sub_key_11_2_ph_fu_1325_p18)
);

des_dec_mux_164_6bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
des_dec_mux_164_6bkb_U13(
    .din0(sub_key_15_12_fu_250),
    .din1(sub_key_15_12_fu_250),
    .din2(sub_key_15_12_fu_250),
    .din3(sub_key_15_12_fu_250),
    .din4(sub_key_15_12_fu_250),
    .din5(sub_key_15_12_fu_250),
    .din6(sub_key_15_12_fu_250),
    .din7(sub_key_15_12_fu_250),
    .din8(sub_key_15_12_fu_250),
    .din9(sub_key_15_12_fu_250),
    .din10(sub_key_15_12_fu_250),
    .din11(sub_key_15_12_fu_250),
    .din12(64'd0),
    .din13(sub_key_15_12_fu_250),
    .din14(sub_key_15_12_fu_250),
    .din15(sub_key_15_12_fu_250),
    .din16(trunc_ln214_reg_2423),
    .dout(sub_key_12_2_ph_fu_1362_p18)
);

des_dec_mux_164_6bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
des_dec_mux_164_6bkb_U14(
    .din0(sub_key_15_13_fu_254),
    .din1(sub_key_15_13_fu_254),
    .din2(sub_key_15_13_fu_254),
    .din3(sub_key_15_13_fu_254),
    .din4(sub_key_15_13_fu_254),
    .din5(sub_key_15_13_fu_254),
    .din6(sub_key_15_13_fu_254),
    .din7(sub_key_15_13_fu_254),
    .din8(sub_key_15_13_fu_254),
    .din9(sub_key_15_13_fu_254),
    .din10(sub_key_15_13_fu_254),
    .din11(sub_key_15_13_fu_254),
    .din12(sub_key_15_13_fu_254),
    .din13(64'd0),
    .din14(sub_key_15_13_fu_254),
    .din15(sub_key_15_13_fu_254),
    .din16(trunc_ln214_reg_2423),
    .dout(sub_key_13_2_ph_fu_1399_p18)
);

des_dec_mux_164_6bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
des_dec_mux_164_6bkb_U15(
    .din0(sub_key_15_14_fu_258),
    .din1(sub_key_15_14_fu_258),
    .din2(sub_key_15_14_fu_258),
    .din3(sub_key_15_14_fu_258),
    .din4(sub_key_15_14_fu_258),
    .din5(sub_key_15_14_fu_258),
    .din6(sub_key_15_14_fu_258),
    .din7(sub_key_15_14_fu_258),
    .din8(sub_key_15_14_fu_258),
    .din9(sub_key_15_14_fu_258),
    .din10(sub_key_15_14_fu_258),
    .din11(sub_key_15_14_fu_258),
    .din12(sub_key_15_14_fu_258),
    .din13(sub_key_15_14_fu_258),
    .din14(64'd0),
    .din15(sub_key_15_14_fu_258),
    .din16(trunc_ln214_reg_2423),
    .dout(sub_key_14_2_ph_fu_1436_p18)
);

des_dec_mux_164_6bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
des_dec_mux_164_6bkb_U16(
    .din0(sub_key_15_15_fu_262),
    .din1(sub_key_15_15_fu_262),
    .din2(sub_key_15_15_fu_262),
    .din3(sub_key_15_15_fu_262),
    .din4(sub_key_15_15_fu_262),
    .din5(sub_key_15_15_fu_262),
    .din6(sub_key_15_15_fu_262),
    .din7(sub_key_15_15_fu_262),
    .din8(sub_key_15_15_fu_262),
    .din9(sub_key_15_15_fu_262),
    .din10(sub_key_15_15_fu_262),
    .din11(sub_key_15_15_fu_262),
    .din12(sub_key_15_15_fu_262),
    .din13(sub_key_15_15_fu_262),
    .din14(sub_key_15_15_fu_262),
    .din15(64'd0),
    .din16(trunc_ln214_reg_2423),
    .dout(sub_key_15_2_ph_fu_1473_p18)
);

des_dec_mux_164_6bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
des_dec_mux_164_6bkb_U17(
    .din0(sub_key_15_fu_202),
    .din1(sub_key_15_1_fu_206),
    .din2(sub_key_15_2_fu_210),
    .din3(sub_key_15_3_fu_214),
    .din4(sub_key_15_4_fu_218),
    .din5(sub_key_15_5_fu_222),
    .din6(sub_key_15_6_fu_226),
    .din7(sub_key_15_7_fu_230),
    .din8(sub_key_15_8_fu_234),
    .din9(sub_key_15_9_fu_238),
    .din10(sub_key_15_10_fu_242),
    .din11(sub_key_15_11_fu_246),
    .din12(sub_key_15_12_fu_250),
    .din13(sub_key_15_13_fu_254),
    .din14(sub_key_15_14_fu_258),
    .din15(sub_key_15_15_fu_262),
    .din16(trunc_ln214_reg_2423),
    .dout(tmp_6_fu_1607_p18)
);

des_dec_mux_164_6bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 64 ),
    .din5_WIDTH( 64 ),
    .din6_WIDTH( 64 ),
    .din7_WIDTH( 64 ),
    .din8_WIDTH( 64 ),
    .din9_WIDTH( 64 ),
    .din10_WIDTH( 64 ),
    .din11_WIDTH( 64 ),
    .din12_WIDTH( 64 ),
    .din13_WIDTH( 64 ),
    .din14_WIDTH( 64 ),
    .din15_WIDTH( 64 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 64 ))
des_dec_mux_164_6bkb_U18(
    .din0(sub_key_15_fu_202),
    .din1(sub_key_15_1_fu_206),
    .din2(sub_key_15_2_fu_210),
    .din3(sub_key_15_3_fu_214),
    .din4(sub_key_15_4_fu_218),
    .din5(sub_key_15_5_fu_222),
    .din6(sub_key_15_6_fu_226),
    .din7(sub_key_15_7_fu_230),
    .din8(sub_key_15_8_fu_234),
    .din9(sub_key_15_9_fu_238),
    .din10(sub_key_15_10_fu_242),
    .din11(sub_key_15_11_fu_246),
    .din12(sub_key_15_12_fu_250),
    .din13(sub_key_15_13_fu_254),
    .din14(sub_key_15_14_fu_258),
    .din15(sub_key_15_15_fu_262),
    .din16(tmp_5_fu_1790_p17),
    .dout(tmp_5_fu_1790_p18)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (empty_17_fu_791_p2 == 1'd1) & (icmp_ln192_fu_743_p2 == 1'd0))) begin
        C_1_fu_194 <= C_3_fu_863_p3;
    end else if (((1'b1 == ap_CS_fsm_state6) & (empty_17_fu_791_p2 == 1'd0) & (icmp_ln192_fu_743_p2 == 1'd0))) begin
        C_1_fu_194 <= C_2_fu_811_p3;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln182_fu_668_p2 == 1'd1))) begin
        C_1_fu_194 <= {{permuted_choice_1_0_reg_395[55:28]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (empty_17_fu_791_p2 == 1'd1) & (icmp_ln192_fu_743_p2 == 1'd0))) begin
        D_fu_198 <= D_3_fu_883_p3;
    end else if (((1'b1 == ap_CS_fsm_state6) & (empty_17_fu_791_p2 == 1'd0) & (icmp_ln192_fu_743_p2 == 1'd0))) begin
        D_fu_198 <= D_2_fu_833_p3;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln182_fu_668_p2 == 1'd1))) begin
        D_fu_198 <= D_1_fu_699_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln192_fu_743_p2 == 1'd1))) begin
        L_0_reg_449 <= L_reg_2246;
    end else if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln252_fu_2117_p2 == 1'd1))) begin
        L_0_reg_449 <= temp_reg_439;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln235_fu_1883_p2 == 1'd1))) begin
        f_function_res_0_reg_506 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        f_function_res_0_reg_506 <= f_function_res_fu_2164_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_0_reg_384 <= i_reg_2231;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_384 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_1_reg_406 <= i_5_reg_2264;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln171_fu_607_p2 == 1'd1))) begin
        i_1_reg_406 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln216_fu_1590_p2 == 1'd1))) begin
        i_2_reg_417 <= i_7_reg_2415;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln182_fu_668_p2 == 1'd1))) begin
        i_2_reg_417 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln192_fu_743_p2 == 1'd1))) begin
        i_3_reg_460 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln252_fu_2117_p2 == 1'd1))) begin
        i_3_reg_460 <= i_8_reg_2492;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        i_4_reg_528 <= i_6_reg_2599;
    end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln223_fu_1739_p2 == 1'd1))) begin
        i_4_reg_528 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        init_perm_res_0_reg_373 <= init_perm_res_fu_661_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        init_perm_res_0_reg_373 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        inv_init_perm_res_0_reg_539 <= inv_init_perm_res_fu_2211_p3;
    end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln223_fu_1739_p2 == 1'd1))) begin
        inv_init_perm_res_0_reg_539 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        j_0_reg_428 <= j_reg_2459;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        j_0_reg_428 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        j_1_reg_483 <= j_6_reg_2505;
    end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln223_fu_1739_p2 == 1'd0))) begin
        j_1_reg_483 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        j_2_reg_494 <= j_7_reg_2538;
    end else if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln227_fu_1759_p2 == 1'd1))) begin
        j_2_reg_494 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln235_fu_1883_p2 == 1'd1))) begin
        j_3_reg_517 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        j_3_reg_517 <= j_8_reg_2571;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        permuted_choice_1_0_reg_395 <= permuted_choice_1_fu_736_p3;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln171_fu_607_p2 == 1'd1))) begin
        permuted_choice_1_0_reg_395 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        s_input_0_reg_472 <= s_input_fu_1876_p3;
    end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln223_fu_1739_p2 == 1'd0))) begin
        s_input_0_reg_472 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        s_output_1_fu_266 <= s_output_fu_2104_p3;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln192_fu_743_p2 == 1'd1))) begin
        s_output_1_fu_266 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (trunc_ln214_reg_2423 == 4'd10))) begin
        sub_key_15_10_fu_242 <= sub_key_0_reg_2469;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sub_key_15_10_fu_242 <= sub_key_10_2_ph_fu_1288_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (trunc_ln214_reg_2423 == 4'd11))) begin
        sub_key_15_11_fu_246 <= sub_key_0_reg_2469;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sub_key_15_11_fu_246 <= sub_key_11_2_ph_fu_1325_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (trunc_ln214_reg_2423 == 4'd12))) begin
        sub_key_15_12_fu_250 <= sub_key_0_reg_2469;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sub_key_15_12_fu_250 <= sub_key_12_2_ph_fu_1362_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (trunc_ln214_reg_2423 == 4'd13))) begin
        sub_key_15_13_fu_254 <= sub_key_0_reg_2469;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sub_key_15_13_fu_254 <= sub_key_13_2_ph_fu_1399_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (trunc_ln214_reg_2423 == 4'd14))) begin
        sub_key_15_14_fu_258 <= sub_key_0_reg_2469;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sub_key_15_14_fu_258 <= sub_key_14_2_ph_fu_1436_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (trunc_ln214_reg_2423 == 4'd15))) begin
        sub_key_15_15_fu_262 <= sub_key_0_reg_2469;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sub_key_15_15_fu_262 <= sub_key_15_2_ph_fu_1473_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (trunc_ln214_reg_2423 == 4'd1))) begin
        sub_key_15_1_fu_206 <= sub_key_0_reg_2469;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sub_key_15_1_fu_206 <= sub_key_1_2_ph_fu_955_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (trunc_ln214_reg_2423 == 4'd2))) begin
        sub_key_15_2_fu_210 <= sub_key_0_reg_2469;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sub_key_15_2_fu_210 <= sub_key_2_2_ph_fu_992_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (trunc_ln214_reg_2423 == 4'd3))) begin
        sub_key_15_3_fu_214 <= sub_key_0_reg_2469;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sub_key_15_3_fu_214 <= sub_key_3_2_ph_fu_1029_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (trunc_ln214_reg_2423 == 4'd4))) begin
        sub_key_15_4_fu_218 <= sub_key_0_reg_2469;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sub_key_15_4_fu_218 <= sub_key_4_2_ph_fu_1066_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (trunc_ln214_reg_2423 == 4'd5))) begin
        sub_key_15_5_fu_222 <= sub_key_0_reg_2469;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sub_key_15_5_fu_222 <= sub_key_5_2_ph_fu_1103_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (trunc_ln214_reg_2423 == 4'd6))) begin
        sub_key_15_6_fu_226 <= sub_key_0_reg_2469;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sub_key_15_6_fu_226 <= sub_key_6_2_ph_fu_1140_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (trunc_ln214_reg_2423 == 4'd7))) begin
        sub_key_15_7_fu_230 <= sub_key_0_reg_2469;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sub_key_15_7_fu_230 <= sub_key_7_2_ph_fu_1177_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (trunc_ln214_reg_2423 == 4'd8))) begin
        sub_key_15_8_fu_234 <= sub_key_0_reg_2469;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sub_key_15_8_fu_234 <= sub_key_8_2_ph_fu_1214_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (trunc_ln214_reg_2423 == 4'd9))) begin
        sub_key_15_9_fu_238 <= sub_key_0_reg_2469;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sub_key_15_9_fu_238 <= sub_key_9_2_ph_fu_1251_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (trunc_ln214_reg_2423 == 4'd0))) begin
        sub_key_15_fu_202 <= sub_key_0_reg_2469;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sub_key_15_fu_202 <= sub_key_0_21_ph_fu_918_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln192_fu_743_p2 == 1'd1))) begin
        temp_reg_439 <= R_reg_2251;
    end else if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln252_fu_2117_p2 == 1'd1))) begin
        temp_reg_439 <= R_1_fu_2138_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln171_fu_607_p2 == 1'd1))) begin
        L_reg_2246 <= {{init_perm_res_0_reg_373[63:32]}};
        R_reg_2251 <= R_fu_638_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        add_ln246_1_reg_2558 <= add_ln246_1_fu_2090_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_5_reg_2264 <= i_5_fu_674_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        i_6_reg_2599 <= i_6_fu_2177_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i_7_reg_2415 <= i_7_fu_749_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i_8_reg_2492 <= i_8_fu_1745_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_2231 <= i_fu_613_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        j_6_reg_2505 <= j_6_fu_1765_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        j_7_reg_2538 <= j_7_fu_1889_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        j_8_reg_2571 <= j_8_fu_2123_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        j_reg_2459 <= j_fu_1596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln223_fu_1739_p2 == 1'd1))) begin
        pre_output_reg_2497 <= pre_output_fu_1751_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        sub_key_0_reg_2469 <= sub_key_0_fu_1667_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln235_fu_1883_p2 == 1'd0))) begin
        sub_ln240_2_reg_2548[5 : 1] <= sub_ln240_2_fu_1949_p2[5 : 1];
        sub_ln240_reg_2543[6 : 1] <= sub_ln240_fu_1925_p2[6 : 1];
        sub_ln243_1_reg_2553[5 : 1] <= sub_ln243_1_fu_1961_p2[5 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_9_reg_2451 <= tmp_9_fu_910_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln171_fu_607_p2 == 1'd0))) begin
        trunc_ln174_1_reg_2241 <= trunc_ln174_1_fu_624_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln182_fu_668_p2 == 1'd0))) begin
        trunc_ln184_1_reg_2274 <= trunc_ln184_1_fu_685_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln192_fu_743_p2 == 1'd0))) begin
        trunc_ln214_reg_2423 <= trunc_ln214_fu_901_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln227_fu_1759_p2 == 1'd0))) begin
        trunc_ln229_1_reg_2515 <= trunc_ln229_1_fu_1776_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln252_fu_2117_p2 == 1'd0))) begin
        trunc_ln254_1_reg_2581 <= trunc_ln254_1_fu_2134_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln267_fu_2171_p2 == 1'd0))) begin
        trunc_ln270_1_reg_2609 <= trunc_ln270_1_fu_2188_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln227_fu_1759_p2 == 1'd1))) begin
        xor_ln232_1_reg_2520 <= xor_ln232_1_fu_1844_p2;
        xor_ln232_2_reg_2525 <= xor_ln232_2_fu_1850_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        E_ce0 = 1'b1;
    end else begin
        E_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IP_ce0 = 1'b1;
    end else begin
        IP_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PC1_ce0 = 1'b1;
    end else begin
        PC1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        PC2_ce0 = 1'b1;
    end else begin
        PC2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        PI_ce0 = 1'b1;
    end else begin
        PI_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        P_ce0 = 1'b1;
    end else begin
        P_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        S_ce0 = 1'b1;
    end else begin
        S_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln267_fu_2171_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln267_fu_2171_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln171_fu_607_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln182_fu_668_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln192_fu_743_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln216_fu_1590_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln223_fu_1739_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln227_fu_1759_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln235_fu_1883_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln252_fu_2117_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln267_fu_2171_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign C_2_fu_811_p3 = {{trunc_ln203_fu_797_p1}, {tmp_3_fu_801_p4}};

assign C_3_fu_863_p3 = {{trunc_ln197_fu_859_p1}, {tmp_2_fu_851_p3}};

assign D_1_fu_699_p1 = permuted_choice_1_0_reg_395[27:0];

assign D_2_fu_833_p3 = {{trunc_ln204_fu_819_p1}, {tmp_s_fu_823_p4}};

assign D_3_fu_883_p3 = {{trunc_ln198_fu_879_p1}, {tmp_4_fu_871_p3}};

assign E_address0 = zext_ln229_fu_1771_p1;

assign IP_address0 = zext_ln174_1_fu_619_p1;

assign PC1_address0 = zext_ln184_1_fu_680_p1;

assign PC2_address0 = zext_ln218_fu_1602_p1;

assign PI_address0 = zext_ln270_1_fu_2183_p1;

assign P_address0 = zext_ln254_fu_2129_p1;

assign R_1_fu_2138_p2 = (f_function_res_0_reg_506 ^ L_0_reg_449);

assign R_fu_638_p1 = init_perm_res_0_reg_373[31:0];

assign S_address0 = sext_ln246_3_fu_2096_p1;

assign add_ln246_1_fu_2090_p2 = ($signed(sext_ln246_2_fu_2074_p1) + $signed(zext_ln246_fu_2086_p1));

assign add_ln246_fu_2068_p2 = ($signed(sext_ln246_1_fu_2064_p1) + $signed(sext_ln246_fu_2056_p1));

assign and_ln240_fu_1984_p2 = (xor_ln232_2_reg_2525 & lshr_ln240_fu_1978_p2);

assign and_ln243_fu_2032_p2 = (xor_ln232_1_reg_2520 & lshr_ln243_fu_2026_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return = inv_init_perm_res_0_reg_539;

assign empty_11_fu_755_p2 = ((i_2_reg_417 == 5'd15) ? 1'b1 : 1'b0);

assign empty_12_fu_761_p2 = ((i_2_reg_417 == 5'd8) ? 1'b1 : 1'b0);

assign empty_13_fu_767_p2 = (empty_12_fu_761_p2 | empty_11_fu_755_p2);

assign empty_14_fu_773_p2 = ((i_2_reg_417 == 5'd1) ? 1'b1 : 1'b0);

assign empty_15_fu_779_p2 = (empty_14_fu_773_p2 | empty_13_fu_767_p2);

assign empty_16_fu_785_p2 = ((i_2_reg_417 == 5'd0) ? 1'b1 : 1'b0);

assign empty_17_fu_791_p2 = (empty_16_fu_785_p2 | empty_15_fu_779_p2);

assign f_function_res_fu_2164_p3 = {{trunc_ln254_1_reg_2581}, {trunc_ln254_fu_2160_p1}};

assign i_5_fu_674_p2 = (i_1_reg_406 + 6'd1);

assign i_6_fu_2177_p2 = (i_4_reg_528 + 7'd1);

assign i_7_fu_749_p2 = (i_2_reg_417 + 5'd1);

assign i_8_fu_1745_p2 = (i_3_reg_460 + 5'd1);

assign i_fu_613_p2 = (i_0_reg_384 + 7'd1);

assign icmp_ln171_fu_607_p2 = ((i_0_reg_384 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln182_fu_668_p2 = ((i_1_reg_406 == 6'd56) ? 1'b1 : 1'b0);

assign icmp_ln192_fu_743_p2 = ((i_2_reg_417 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln216_fu_1590_p2 = ((j_0_reg_428 == 6'd48) ? 1'b1 : 1'b0);

assign icmp_ln223_fu_1739_p2 = ((i_3_reg_460 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln227_fu_1759_p2 = ((j_1_reg_483 == 6'd48) ? 1'b1 : 1'b0);

assign icmp_ln235_fu_1883_p2 = ((j_2_reg_494 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln252_fu_2117_p2 = ((j_3_reg_517 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln267_fu_2171_p2 = ((i_4_reg_528 == 7'd64) ? 1'b1 : 1'b0);

assign init_perm_res_fu_661_p3 = {{trunc_ln174_1_reg_2241}, {trunc_ln174_fu_657_p1}};

assign inv_init_perm_res_fu_2211_p3 = {{trunc_ln270_1_reg_2609}, {trunc_ln270_fu_2207_p1}};

assign j_6_fu_1765_p2 = (j_1_reg_483 + 6'd1);

assign j_7_fu_1889_p2 = (j_2_reg_494 + 4'd1);

assign j_8_fu_2123_p2 = (j_3_reg_517 + 6'd1);

assign j_fu_1596_p2 = (j_0_reg_428 + 6'd1);

assign lshr_ln174_fu_652_p2 = input_r >> zext_ln174_fu_648_p1;

assign lshr_ln184_fu_727_p2 = key >> zext_ln184_fu_723_p1;

assign lshr_ln218_fu_1654_p2 = tmp_9_reg_2451 >> zext_ln218_1_fu_1650_p1;

assign lshr_ln229_fu_1866_p2 = temp_reg_439 >> zext_ln229_1_fu_1862_p1;

assign lshr_ln240_1_fu_1992_p2 = and_ln240_fu_1984_p2 >> zext_ln240_6_fu_1989_p1;

assign lshr_ln240_fu_1978_p2 = 48'd145135534866432 >> zext_ln240_4_fu_1974_p1;

assign lshr_ln243_1_fu_2040_p2 = and_ln243_fu_2032_p2 >> zext_ln243_fu_2037_p1;

assign lshr_ln243_fu_2026_p2 = 47'd131941395333120 >> zext_ln240_3_fu_1970_p1;

assign lshr_ln254_fu_2154_p2 = s_output_1_fu_266 >> zext_ln254_1_fu_2150_p1;

assign lshr_ln270_fu_2202_p2 = pre_output_reg_2497 >> zext_ln270_fu_2198_p1;

assign or_ln241_fu_2010_p2 = (trunc_ln240_1_fu_1998_p1 | tmp_7_fu_2002_p3);

assign permuted_choice_1_fu_736_p3 = {{trunc_ln184_1_reg_2274}, {trunc_ln184_fu_732_p1}};

assign pre_output_fu_1751_p3 = {{temp_reg_439}, {L_0_reg_449}};

assign s_input_fu_1876_p3 = {{trunc_ln229_1_reg_2515}, {trunc_ln229_fu_1872_p1}};

assign s_output_fu_2104_p3 = {{trunc_ln246_1_fu_2100_p1}, {S_q0}};

assign sext_ln240_fu_1967_p1 = $signed(sub_ln240_reg_2543);

assign sext_ln246_1_fu_2064_p1 = $signed(trunc_ln246_fu_2060_p1);

assign sext_ln246_2_fu_2074_p1 = $signed(add_ln246_fu_2068_p2);

assign sext_ln246_3_fu_2096_p1 = $signed(add_ln246_1_reg_2558);

assign sext_ln246_fu_2056_p1 = $signed(tmp_10_fu_2046_p4);

assign shl_ln240_1_fu_1931_p3 = {{trunc_ln240_fu_1895_p1}, {2'd0}};

assign shl_ln240_fu_1911_p2 = j_2_reg_494 << 4'd1;

assign shl_ln_fu_1899_p3 = {{trunc_ln240_fu_1895_p1}, {3'd0}};

assign sub_key_0_fu_1667_p3 = {{trunc_ln218_1_fu_1663_p1}, {trunc_ln218_fu_1659_p1}};

assign sub_ln174_fu_642_p2 = ($signed(7'd64) - $signed(IP_q0));

assign sub_ln184_fu_717_p2 = ($signed(7'd64) - $signed(zext_ln184_2_fu_713_p1));

assign sub_ln218_fu_1644_p2 = ($signed(6'd56) - $signed(PC2_q0));

assign sub_ln229_fu_1856_p2 = ($signed(6'd32) - $signed(E_q0));

assign sub_ln240_1_fu_1943_p2 = ($signed(6'd42) - $signed(zext_ln240_1_fu_1917_p1));

assign sub_ln240_2_fu_1949_p2 = (sub_ln240_1_fu_1943_p2 - zext_ln240_5_fu_1939_p1);

assign sub_ln240_fu_1925_p2 = (zext_ln240_fu_1907_p1 - zext_ln240_2_fu_1921_p1);

assign sub_ln243_1_fu_1961_p2 = (sub_ln243_fu_1955_p2 - zext_ln240_5_fu_1939_p1);

assign sub_ln243_fu_1955_p2 = ($signed(6'd43) - $signed(zext_ln240_1_fu_1917_p1));

assign sub_ln254_fu_2144_p2 = ($signed(6'd32) - $signed(P_q0));

assign sub_ln270_fu_2192_p2 = ($signed(7'd64) - $signed(PI_q0));

assign tmp_10_fu_2046_p4 = {{{tmp_8_fu_2016_p4}, {or_ln241_fu_2010_p2}}, {4'd0}};

assign tmp_11_fu_2078_p3 = {{j_2_reg_494}, {6'd0}};

assign tmp_2_fu_851_p3 = C_1_fu_194[32'd27];

assign tmp_3_fu_801_p4 = {{C_1_fu_194[27:26]}};

assign tmp_4_fu_871_p3 = D_fu_198[32'd27];

assign tmp_5_fu_1790_p17 = (trunc_ln232_fu_1780_p1 ^ 4'd15);

assign tmp_7_fu_2002_p3 = lshr_ln240_1_fu_1992_p2[32'd4];

assign tmp_8_fu_2016_p4 = {{lshr_ln240_1_fu_1992_p2[7:5]}};

assign tmp_9_fu_910_p3 = {{C_1_fu_194}, {D_fu_198}};

assign tmp_s_fu_823_p4 = {{D_fu_198[27:26]}};

assign trunc_ln174_1_fu_624_p1 = init_perm_res_0_reg_373[62:0];

assign trunc_ln174_fu_657_p1 = lshr_ln174_fu_652_p2[0:0];

assign trunc_ln184_1_fu_685_p1 = permuted_choice_1_0_reg_395[62:0];

assign trunc_ln184_fu_732_p1 = lshr_ln184_fu_727_p2[0:0];

assign trunc_ln197_fu_859_p1 = C_1_fu_194[26:0];

assign trunc_ln198_fu_879_p1 = D_fu_198[26:0];

assign trunc_ln203_fu_797_p1 = C_1_fu_194[25:0];

assign trunc_ln204_fu_819_p1 = D_fu_198[25:0];

assign trunc_ln214_fu_901_p1 = i_2_reg_417[3:0];

assign trunc_ln218_1_fu_1663_p1 = tmp_6_fu_1607_p18[62:0];

assign trunc_ln218_fu_1659_p1 = lshr_ln218_fu_1654_p2[0:0];

assign trunc_ln229_1_fu_1776_p1 = s_input_0_reg_472[62:0];

assign trunc_ln229_fu_1872_p1 = lshr_ln229_fu_1866_p2[0:0];

assign trunc_ln232_1_fu_1828_p1 = s_input_0_reg_472[47:0];

assign trunc_ln232_2_fu_1832_p1 = tmp_5_fu_1790_p18[47:0];

assign trunc_ln232_3_fu_1836_p1 = s_input_0_reg_472[46:0];

assign trunc_ln232_4_fu_1840_p1 = tmp_5_fu_1790_p18[46:0];

assign trunc_ln232_fu_1780_p1 = i_3_reg_460[3:0];

assign trunc_ln240_1_fu_1998_p1 = lshr_ln240_1_fu_1992_p2[0:0];

assign trunc_ln240_fu_1895_p1 = j_2_reg_494[2:0];

assign trunc_ln246_1_fu_2100_p1 = s_output_1_fu_266[27:0];

assign trunc_ln246_fu_2060_p1 = lshr_ln243_1_fu_2040_p2[7:0];

assign trunc_ln254_1_fu_2134_p1 = f_function_res_0_reg_506[30:0];

assign trunc_ln254_fu_2160_p1 = lshr_ln254_fu_2154_p2[0:0];

assign trunc_ln270_1_fu_2188_p1 = inv_init_perm_res_0_reg_539[62:0];

assign trunc_ln270_fu_2207_p1 = lshr_ln270_fu_2202_p2[0:0];

assign xor_ln232_1_fu_1844_p2 = (trunc_ln232_4_fu_1840_p1 ^ trunc_ln232_3_fu_1836_p1);

assign xor_ln232_2_fu_1850_p2 = (trunc_ln232_2_fu_1832_p1 ^ trunc_ln232_1_fu_1828_p1);

assign zext_ln174_1_fu_619_p1 = i_0_reg_384;

assign zext_ln174_fu_648_p1 = sub_ln174_fu_642_p2;

assign zext_ln184_1_fu_680_p1 = i_1_reg_406;

assign zext_ln184_2_fu_713_p1 = PC1_q0;

assign zext_ln184_fu_723_p1 = sub_ln184_fu_717_p2;

assign zext_ln218_1_fu_1650_p1 = sub_ln218_fu_1644_p2;

assign zext_ln218_fu_1602_p1 = j_0_reg_428;

assign zext_ln229_1_fu_1862_p1 = sub_ln229_fu_1856_p2;

assign zext_ln229_fu_1771_p1 = j_1_reg_483;

assign zext_ln240_1_fu_1917_p1 = shl_ln240_fu_1911_p2;

assign zext_ln240_2_fu_1921_p1 = shl_ln240_fu_1911_p2;

assign zext_ln240_3_fu_1970_p1 = $unsigned(sext_ln240_fu_1967_p1);

assign zext_ln240_4_fu_1974_p1 = $unsigned(sext_ln240_fu_1967_p1);

assign zext_ln240_5_fu_1939_p1 = shl_ln240_1_fu_1931_p3;

assign zext_ln240_6_fu_1989_p1 = sub_ln240_2_reg_2548;

assign zext_ln240_fu_1907_p1 = shl_ln_fu_1899_p3;

assign zext_ln243_fu_2037_p1 = sub_ln243_1_reg_2553;

assign zext_ln246_fu_2086_p1 = tmp_11_fu_2078_p3;

assign zext_ln254_1_fu_2150_p1 = sub_ln254_fu_2144_p2;

assign zext_ln254_fu_2129_p1 = j_3_reg_517;

assign zext_ln270_1_fu_2183_p1 = i_4_reg_528;

assign zext_ln270_fu_2198_p1 = sub_ln270_fu_2192_p2;

always @ (posedge ap_clk) begin
    sub_ln240_reg_2543[0] <= 1'b0;
    sub_ln240_2_reg_2548[0] <= 1'b0;
    sub_ln243_1_reg_2553[0] <= 1'b1;
end

endmodule //des_dec

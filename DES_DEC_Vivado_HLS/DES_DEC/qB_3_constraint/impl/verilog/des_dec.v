// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="des_dec,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a35tl-cpg236-2L,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.909000,HLS_SYN_LAT=5557,HLS_SYN_TPT=none,HLS_SYN_MEM=3,HLS_SYN_DSP=0,HLS_SYN_FF=1296,HLS_SYN_LUT=1687,HLS_VERSION=2019_1}" *)

module des_dec (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r,
        key,
        ap_return
);

parameter    ap_ST_fsm_state1 = 28'd1;
parameter    ap_ST_fsm_state2 = 28'd2;
parameter    ap_ST_fsm_state3 = 28'd4;
parameter    ap_ST_fsm_state4 = 28'd8;
parameter    ap_ST_fsm_state5 = 28'd16;
parameter    ap_ST_fsm_state6 = 28'd32;
parameter    ap_ST_fsm_state7 = 28'd64;
parameter    ap_ST_fsm_state8 = 28'd128;
parameter    ap_ST_fsm_state9 = 28'd256;
parameter    ap_ST_fsm_state10 = 28'd512;
parameter    ap_ST_fsm_state11 = 28'd1024;
parameter    ap_ST_fsm_state12 = 28'd2048;
parameter    ap_ST_fsm_state13 = 28'd4096;
parameter    ap_ST_fsm_state14 = 28'd8192;
parameter    ap_ST_fsm_state15 = 28'd16384;
parameter    ap_ST_fsm_state16 = 28'd32768;
parameter    ap_ST_fsm_state17 = 28'd65536;
parameter    ap_ST_fsm_state18 = 28'd131072;
parameter    ap_ST_fsm_state19 = 28'd262144;
parameter    ap_ST_fsm_state20 = 28'd524288;
parameter    ap_ST_fsm_state21 = 28'd1048576;
parameter    ap_ST_fsm_state22 = 28'd2097152;
parameter    ap_ST_fsm_state23 = 28'd4194304;
parameter    ap_ST_fsm_state24 = 28'd8388608;
parameter    ap_ST_fsm_state25 = 28'd16777216;
parameter    ap_ST_fsm_state26 = 28'd33554432;
parameter    ap_ST_fsm_state27 = 28'd67108864;
parameter    ap_ST_fsm_state28 = 28'd134217728;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] input_r;
input  [63:0] key;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [27:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [5:0] IP_address0;
reg    IP_ce0;
wire   [6:0] IP_q0;
wire   [5:0] PC1_address0;
reg    PC1_ce0;
wire   [5:0] PC1_q0;
wire   [5:0] PC2_address0;
reg    PC2_ce0;
wire   [5:0] PC2_q0;
wire   [5:0] E_address0;
reg    E_ce0;
wire   [5:0] E_q0;
wire   [8:0] S_address0;
reg    S_ce0;
wire   [3:0] S_q0;
wire   [4:0] P_address0;
reg    P_ce0;
wire   [5:0] P_q0;
wire   [5:0] PI_address0;
reg    PI_ce0;
wire   [6:0] PI_q0;
wire   [10:0] grp_fu_512_p2;
reg   [5:0] reg_354;
wire    ap_CS_fsm_state14;
reg   [4:0] reg_365;
wire    ap_CS_fsm_state18;
reg   [5:0] reg_389;
wire    ap_CS_fsm_state25;
reg   [63:0] reg_433;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state27;
reg   [5:0] reg_479;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state12;
reg   [6:0] reg_490;
wire    ap_CS_fsm_state15;
wire   [6:0] grp_fu_746_p2;
reg   [5:0] reg_757;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
reg   [6:0] reg_781;
wire   [0:0] grp_fu_868_p2;
wire    ap_CS_fsm_state21;
wire   [62:0] trunc_ln174_1_fu_926_p1;
reg   [62:0] trunc_ln174_1_reg_1485;
reg   [31:0] L_reg_1490;
wire   [31:0] R_fu_940_p1;
reg   [31:0] R_reg_1495;
wire   [63:0] init_perm_res_fu_953_p3;
wire    ap_CS_fsm_state3;
wire   [62:0] trunc_ln184_1_fu_965_p1;
reg   [62:0] trunc_ln184_1_reg_1513;
wire   [63:0] permuted_choice_1_fu_1007_p3;
wire    ap_CS_fsm_state5;
reg   [0:0] empty_11_reg_1549;
wire    ap_CS_fsm_state7;
reg   [0:0] empty_12_reg_1554;
wire    ap_CS_fsm_state8;
reg   [0:0] empty_14_reg_1559;
wire    ap_CS_fsm_state9;
reg   [3:0] sub_key_addr_reg_1567;
wire    ap_CS_fsm_state10;
wire   [55:0] tmp_9_fu_1143_p3;
reg   [55:0] tmp_9_reg_1572;
wire    ap_CS_fsm_state11;
wire   [62:0] trunc_ln218_1_fu_1156_p1;
reg   [62:0] trunc_ln218_1_reg_1585;
wire   [63:0] or_ln_fu_1169_p3;
wire    ap_CS_fsm_state13;
wire   [63:0] pre_output_fu_1176_p3;
reg   [63:0] pre_output_reg_1598;
wire   [63:0] s_input_fu_1207_p3;
wire    ap_CS_fsm_state16;
wire   [46:0] xor_ln232_fu_1231_p2;
reg   [46:0] xor_ln232_reg_1621;
wire    ap_CS_fsm_state17;
wire   [47:0] xor_ln232_1_fu_1237_p2;
reg   [47:0] xor_ln232_1_reg_1626;
wire   [2:0] trunc_ln240_fu_1243_p1;
reg   [2:0] trunc_ln240_reg_1634;
wire   [3:0] shl_ln240_fu_1260_p2;
reg   [3:0] shl_ln240_reg_1639;
wire   [5:0] zext_ln240_1_fu_1271_p1;
reg   [5:0] zext_ln240_1_reg_1644;
wire   [5:0] zext_ln240_5_fu_1282_p1;
reg   [5:0] zext_ln240_5_reg_1649;
wire  signed [31:0] sext_ln240_fu_1287_p1;
reg  signed [31:0] sext_ln240_reg_1654;
wire   [47:0] lshr_ln240_1_fu_895_p2;
reg   [47:0] lshr_ln240_1_reg_1659;
wire    ap_CS_fsm_state23;
wire   [30:0] trunc_ln254_1_fu_1416_p1;
reg   [30:0] trunc_ln254_1_reg_1679;
wire   [31:0] R_1_fu_1420_p2;
wire   [31:0] f_function_res_fu_1435_p3;
wire    ap_CS_fsm_state26;
wire   [62:0] trunc_ln270_1_fu_1447_p1;
reg   [62:0] trunc_ln270_1_reg_1702;
wire   [63:0] inv_init_perm_res_fu_1460_p3;
wire    ap_CS_fsm_state28;
reg   [3:0] sub_key_address0;
reg    sub_key_ce0;
reg    sub_key_we0;
wire   [63:0] sub_key_q0;
reg   [63:0] init_perm_res_0_reg_321;
reg   [6:0] i_0_reg_332;
reg   [63:0] permuted_choice_1_0_reg_343;
wire   [4:0] ap_phi_mux_i_2_phi_fu_369_p4;
reg   [63:0] sub_key_load_1_reg_377;
reg   [31:0] temp_reg_400;
reg   [31:0] L_0_reg_410;
reg   [4:0] i_3_reg_421;
reg   [5:0] j_1_reg_445;
reg   [3:0] j_2_reg_456;
wire    ap_CS_fsm_state24;
reg   [31:0] f_function_res_0_reg_468;
reg   [63:0] inv_init_perm_res_0_reg_501;
wire   [63:0] zext_ln174_1_fu_921_p1;
wire   [63:0] zext_ln184_1_fu_960_p1;
wire   [63:0] zext_ln214_fu_1138_p1;
wire   [63:0] zext_ln218_fu_1151_p1;
wire   [63:0] zext_ln229_fu_1184_p1;
wire   [63:0] zext_ln232_fu_1189_p1;
wire  signed [63:0] sext_ln246_3_fu_1389_p1;
wire   [63:0] zext_ln254_fu_1411_p1;
wire   [63:0] zext_ln270_1_fu_1442_p1;
reg   [27:0] C_1_fu_188;
wire   [27:0] C_2_fu_1048_p3;
wire   [0:0] empty_17_fu_1028_p2;
wire   [27:0] C_3_fu_1100_p3;
reg   [27:0] D_fu_192;
wire   [27:0] D_1_fu_979_p1;
wire   [27:0] D_2_fu_1070_p3;
wire   [27:0] D_3_fu_1120_p3;
reg   [31:0] s_output_1_fu_196;
wire   [31:0] s_output_fu_1398_p3;
reg   [10:0] grp_fu_512_p0;
wire  signed [8:0] sext_ln246_1_fu_1366_p1;
wire  signed [10:0] sext_ln246_2_fu_1371_p1;
reg   [10:0] grp_fu_512_p1;
wire  signed [8:0] sext_ln246_fu_1357_p1;
wire   [10:0] zext_ln246_fu_1384_p1;
reg  signed [6:0] grp_fu_746_p0;
wire   [6:0] zext_ln240_fu_1255_p1;
reg   [6:0] grp_fu_746_p1;
wire   [6:0] zext_ln184_2_fu_993_p1;
wire   [6:0] zext_ln240_2_fu_1266_p1;
reg   [6:0] grp_fu_868_p0;
reg  signed [6:0] grp_fu_868_p1;
reg   [63:0] grp_fu_874_p0;
reg   [63:0] grp_fu_874_p1;
wire   [63:0] zext_ln174_fu_944_p1;
wire   [63:0] zext_ln184_fu_998_p1;
wire   [55:0] zext_ln218_1_fu_1160_p1;
wire   [31:0] zext_ln229_1_fu_1194_p1;
wire   [47:0] zext_ln240_4_fu_1291_p1;
wire   [31:0] zext_ln254_1_fu_1426_p1;
wire   [63:0] zext_ln270_fu_1451_p1;
wire   [47:0] and_ln240_fu_1296_p2;
wire   [47:0] zext_ln240_6_fu_1302_p1;
wire   [46:0] zext_ln240_3_fu_1307_p1;
wire   [46:0] and_ln243_fu_1336_p2;
wire   [46:0] zext_ln243_fu_1342_p1;
wire   [63:0] grp_fu_874_p2;
wire   [0:0] trunc_ln174_fu_949_p1;
wire   [0:0] trunc_ln184_fu_1003_p1;
wire   [0:0] empty_13_fu_1019_p2;
wire   [0:0] empty_15_fu_1023_p2;
wire   [25:0] trunc_ln203_fu_1034_p1;
wire   [1:0] tmp_3_fu_1038_p4;
wire   [25:0] trunc_ln204_fu_1056_p1;
wire   [1:0] tmp_s_fu_1060_p4;
wire   [26:0] trunc_ln197_fu_1096_p1;
wire   [0:0] tmp_2_fu_1088_p3;
wire   [26:0] trunc_ln198_fu_1116_p1;
wire   [0:0] tmp_4_fu_1108_p3;
wire   [5:0] zext_ln218_1_fu_1160_p0;
wire   [55:0] trunc_ln218_fu_1165_p0;
wire   [0:0] trunc_ln218_fu_1165_p1;
wire   [4:0] zext_ln232_fu_1189_p0;
wire   [5:0] zext_ln229_1_fu_1194_p0;
wire   [31:0] trunc_ln229_fu_1199_p0;
wire   [62:0] trunc_ln229_1_fu_1203_p1;
wire   [0:0] trunc_ln229_fu_1199_p1;
wire   [46:0] trunc_ln232_3_fu_1227_p1;
wire   [46:0] trunc_ln232_2_fu_1223_p1;
wire   [47:0] trunc_ln232_1_fu_1219_p1;
wire   [47:0] trunc_ln232_fu_1215_p1;
wire   [5:0] shl_ln_fu_1247_p3;
wire   [4:0] shl_ln240_1_fu_1275_p3;
wire   [47:0] and_ln240_fu_1296_p0;
wire   [0:0] tmp_5_fu_1314_p3;
wire   [0:0] trunc_ln240_1_fu_1311_p1;
wire   [46:0] lshr_ln243_fu_899_p2;
wire   [5:0] zext_ln243_fu_1342_p0;
wire   [2:0] tmp_6_fu_1327_p4;
wire   [0:0] or_ln241_fu_1321_p2;
wire   [7:0] tmp_7_fu_1347_p4;
wire   [46:0] lshr_ln243_1_fu_904_p2;
wire   [7:0] trunc_ln246_fu_1362_p1;
wire   [8:0] sext_ln246_2_fu_1371_p0;
wire   [9:0] tmp_8_fu_1376_p3;
wire   [27:0] trunc_ln246_1_fu_1394_p1;
wire   [5:0] zext_ln254_1_fu_1426_p0;
wire   [31:0] trunc_ln254_fu_1431_p0;
wire   [0:0] trunc_ln254_fu_1431_p1;
wire   [0:0] trunc_ln270_fu_1456_p1;
reg   [27:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 28'd1;
end

des_dec_IP #(
    .DataWidth( 7 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
IP_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(IP_address0),
    .ce0(IP_ce0),
    .q0(IP_q0)
);

des_dec_PC1 #(
    .DataWidth( 6 ),
    .AddressRange( 56 ),
    .AddressWidth( 6 ))
PC1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(PC1_address0),
    .ce0(PC1_ce0),
    .q0(PC1_q0)
);

des_dec_PC2 #(
    .DataWidth( 6 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
PC2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(PC2_address0),
    .ce0(PC2_ce0),
    .q0(PC2_q0)
);

des_dec_E #(
    .DataWidth( 6 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
E_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(E_address0),
    .ce0(E_ce0),
    .q0(E_q0)
);

des_dec_S #(
    .DataWidth( 4 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
S_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(S_address0),
    .ce0(S_ce0),
    .q0(S_q0)
);

des_dec_P #(
    .DataWidth( 6 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
P_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(P_address0),
    .ce0(P_ce0),
    .q0(P_q0)
);

des_dec_PI #(
    .DataWidth( 7 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
PI_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(PI_address0),
    .ce0(PI_ce0),
    .q0(PI_q0)
);

des_dec_sub_key #(
    .DataWidth( 64 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
sub_key_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sub_key_address0),
    .ce0(sub_key_ce0),
    .we0(sub_key_we0),
    .d0(sub_key_load_1_reg_377),
    .q0(sub_key_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (empty_17_fu_1028_p2 == 1'd1))) begin
        C_1_fu_188 <= C_3_fu_1100_p3;
    end else if (((1'b1 == ap_CS_fsm_state10) & (empty_17_fu_1028_p2 == 1'd0))) begin
        C_1_fu_188 <= C_2_fu_1048_p3;
    end else if (((1'b1 == ap_CS_fsm_state4) & (grp_fu_868_p2 == 1'd1))) begin
        C_1_fu_188 <= {{permuted_choice_1_0_reg_343[55:28]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (empty_17_fu_1028_p2 == 1'd1))) begin
        D_fu_192 <= D_3_fu_1120_p3;
    end else if (((1'b1 == ap_CS_fsm_state10) & (empty_17_fu_1028_p2 == 1'd0))) begin
        D_fu_192 <= D_2_fu_1070_p3;
    end else if (((1'b1 == ap_CS_fsm_state4) & (grp_fu_868_p2 == 1'd1))) begin
        D_fu_192 <= D_1_fu_979_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_868_p2 == 1'd1)) begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            L_0_reg_410 <= L_reg_1490;
        end else if ((1'b1 == ap_CS_fsm_state25)) begin
            L_0_reg_410 <= temp_reg_400;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (grp_fu_868_p2 == 1'd1))) begin
        f_function_res_0_reg_468 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        f_function_res_0_reg_468 <= f_function_res_fu_1435_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_0_reg_332 <= reg_433;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_332 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_868_p2 == 1'd1)) begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            i_3_reg_421 <= 5'd0;
        end else if ((1'b1 == ap_CS_fsm_state25)) begin
            i_3_reg_421 <= reg_354;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        init_perm_res_0_reg_321 <= init_perm_res_fu_953_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        init_perm_res_0_reg_321 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        inv_init_perm_res_0_reg_501 <= inv_init_perm_res_fu_1460_p3;
    end else if (((1'b1 == ap_CS_fsm_state14) & (grp_fu_868_p2 == 1'd1))) begin
        inv_init_perm_res_0_reg_501 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        j_1_reg_445 <= reg_490;
    end else if (((1'b1 == ap_CS_fsm_state14) & (grp_fu_868_p2 == 1'd0))) begin
        j_1_reg_445 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        j_2_reg_456 <= reg_365;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        j_2_reg_456 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        permuted_choice_1_0_reg_343 <= permuted_choice_1_fu_1007_p3;
    end else if (((1'b1 == ap_CS_fsm_state2) & (grp_fu_868_p2 == 1'd1))) begin
        permuted_choice_1_0_reg_343 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        reg_354 <= reg_479;
    end else if (((1'b1 == ap_CS_fsm_state2) & (grp_fu_868_p2 == 1'd1))) begin
        reg_354 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        reg_354 <= grp_fu_512_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (grp_fu_868_p2 == 1'd1))) begin
        reg_365 <= reg_433;
    end else if (((1'b1 == ap_CS_fsm_state4) & (grp_fu_868_p2 == 1'd1))) begin
        reg_365 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        reg_365 <= grp_fu_512_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        reg_389 <= reg_479;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        reg_389 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        reg_389 <= grp_fu_512_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        reg_433 <= s_input_fu_1207_p3;
    end else if (((1'b1 == ap_CS_fsm_state14) & (grp_fu_868_p2 == 1'd0))) begin
        reg_433 <= 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state2))) begin
        reg_433 <= grp_fu_512_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (grp_fu_868_p2 == 1'd1))) begin
        reg_479 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        reg_479 <= reg_389;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_479 <= grp_fu_512_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        reg_490 <= reg_433;
    end else if (((1'b1 == ap_CS_fsm_state14) & (grp_fu_868_p2 == 1'd1))) begin
        reg_490 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        reg_490 <= grp_fu_512_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        s_output_1_fu_196 <= s_output_fu_1398_p3;
    end else if (((1'b1 == ap_CS_fsm_state6) & (grp_fu_868_p2 == 1'd1))) begin
        s_output_1_fu_196 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        sub_key_load_1_reg_377 <= or_ln_fu_1169_p3;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        sub_key_load_1_reg_377 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((grp_fu_868_p2 == 1'd1)) begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            temp_reg_400 <= R_reg_1495;
        end else if ((1'b1 == ap_CS_fsm_state25)) begin
            temp_reg_400 <= R_1_fu_1420_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_fu_868_p2 == 1'd1))) begin
        L_reg_1490 <= {{init_perm_res_0_reg_321[63:32]}};
        R_reg_1495 <= R_fu_940_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        empty_11_reg_1549 <= grp_fu_868_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        empty_12_reg_1554 <= grp_fu_868_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        empty_14_reg_1559 <= grp_fu_868_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        lshr_ln240_1_reg_1659 <= lshr_ln240_1_fu_895_p2;
        sext_ln240_reg_1654 <= sext_ln240_fu_1287_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (grp_fu_868_p2 == 1'd1))) begin
        pre_output_reg_1598 <= pre_output_fu_1176_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19))) begin
        reg_757 <= grp_fu_746_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) | ((1'b1 == ap_CS_fsm_state18) & (grp_fu_868_p2 == 1'd0)))) begin
        reg_781 <= grp_fu_746_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (grp_fu_868_p2 == 1'd0))) begin
        shl_ln240_reg_1639[3 : 1] <= shl_ln240_fu_1260_p2[3 : 1];
        trunc_ln240_reg_1634 <= trunc_ln240_fu_1243_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        sub_key_addr_reg_1567 <= zext_ln214_fu_1138_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_9_reg_1572 <= tmp_9_fu_1143_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_fu_868_p2 == 1'd0))) begin
        trunc_ln174_1_reg_1485 <= trunc_ln174_1_fu_926_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (grp_fu_868_p2 == 1'd0))) begin
        trunc_ln184_1_reg_1513 <= trunc_ln184_1_fu_965_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (grp_fu_868_p2 == 1'd0))) begin
        trunc_ln218_1_reg_1585 <= trunc_ln218_1_fu_1156_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (grp_fu_868_p2 == 1'd0))) begin
        trunc_ln254_1_reg_1679 <= trunc_ln254_1_fu_1416_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state27) & (grp_fu_868_p2 == 1'd0))) begin
        trunc_ln270_1_reg_1702 <= trunc_ln270_1_fu_1447_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        xor_ln232_1_reg_1626 <= xor_ln232_1_fu_1237_p2;
        xor_ln232_reg_1621 <= xor_ln232_fu_1231_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        zext_ln240_1_reg_1644[3 : 1] <= zext_ln240_1_fu_1271_p1[3 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        zext_ln240_5_reg_1649[4 : 2] <= zext_ln240_5_fu_1282_p1[4 : 2];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        E_ce0 = 1'b1;
    end else begin
        E_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IP_ce0 = 1'b1;
    end else begin
        IP_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PC1_ce0 = 1'b1;
    end else begin
        PC1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        PC2_ce0 = 1'b1;
    end else begin
        PC2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        PI_ce0 = 1'b1;
    end else begin
        PI_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        P_ce0 = 1'b1;
    end else begin
        P_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        S_ce0 = 1'b1;
    end else begin
        S_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) & (grp_fu_868_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) & (grp_fu_868_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_512_p0 = reg_490;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_512_p0 = reg_479;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_512_p0 = sext_ln246_2_fu_1371_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_512_p0 = sext_ln246_1_fu_1366_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_512_p0 = j_2_reg_456;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_512_p0 = j_1_reg_445;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_512_p0 = i_3_reg_421;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_512_p0 = reg_389;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_512_p0 = reg_365;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_512_p0 = reg_354;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_512_p0 = i_0_reg_332;
    end else begin
        grp_fu_512_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_512_p1 = zext_ln246_fu_1384_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_512_p1 = sext_ln246_fu_1357_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_512_p1 = 4'd1;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_512_p1 = 5'd1;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state25))) begin
        grp_fu_512_p1 = 6'd1;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_512_p1 = 7'd1;
    end else begin
        grp_fu_512_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_746_p0 = reg_781;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_746_p0 = 6'd43;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_746_p0 = reg_757;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_746_p0 = 6'd42;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_746_p0 = zext_ln240_fu_1255_p1;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_746_p0 = 6'd32;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_746_p0 = 5'd15;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_746_p0 = 6'd56;
    end else if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        grp_fu_746_p0 = 7'd64;
    end else begin
        grp_fu_746_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_746_p1 = PI_q0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_746_p1 = P_q0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        grp_fu_746_p1 = zext_ln240_5_reg_1649;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_746_p1 = zext_ln240_1_reg_1644;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_746_p1 = zext_ln240_5_fu_1282_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_fu_746_p1 = zext_ln240_1_fu_1271_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_746_p1 = zext_ln240_2_fu_1266_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_746_p1 = E_q0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_746_p1 = i_3_reg_421;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_746_p1 = PC2_q0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_746_p1 = zext_ln184_2_fu_993_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_746_p1 = IP_q0;
    end else begin
        grp_fu_746_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_868_p0 = reg_490;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_868_p0 = reg_479;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_868_p0 = j_2_reg_456;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_868_p0 = j_1_reg_445;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_868_p0 = i_3_reg_421;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_868_p0 = reg_389;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_fu_868_p0 = reg_365;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_868_p0 = ap_phi_mux_i_2_phi_fu_369_p4;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_868_p0 = reg_354;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_868_p0 = i_0_reg_332;
    end else begin
        grp_fu_868_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_868_p1 = 6'd32;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_fu_868_p1 = 4'd8;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12))) begin
        grp_fu_868_p1 = 6'd48;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_868_p1 = 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_868_p1 = 5'd1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_868_p1 = 5'd8;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_868_p1 = 5'd15;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_fu_868_p1 = 5'd16;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_868_p1 = 6'd56;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_868_p1 = 7'd64;
    end else begin
        grp_fu_868_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_874_p0 = pre_output_reg_1598;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_874_p0 = s_output_1_fu_196;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_874_p0 = 48'd145135534866432;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_874_p0 = temp_reg_400;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_874_p0 = tmp_9_reg_1572;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_874_p0 = key;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_874_p0 = input_r;
    end else begin
        grp_fu_874_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_874_p1 = zext_ln270_fu_1451_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_874_p1 = zext_ln254_1_fu_1426_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_874_p1 = zext_ln240_4_fu_1291_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_874_p1 = zext_ln229_1_fu_1194_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_874_p1 = zext_ln218_1_fu_1160_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_874_p1 = zext_ln184_fu_998_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_874_p1 = zext_ln174_fu_944_p1;
    end else begin
        grp_fu_874_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        sub_key_address0 = zext_ln232_fu_1189_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        sub_key_address0 = sub_key_addr_reg_1567;
    end else begin
        sub_key_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12))) begin
        sub_key_ce0 = 1'b1;
    end else begin
        sub_key_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        sub_key_we0 = 1'b1;
    end else begin
        sub_key_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_fu_868_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_fu_868_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (grp_fu_868_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (grp_fu_868_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (grp_fu_868_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (grp_fu_868_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (grp_fu_868_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (grp_fu_868_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (grp_fu_868_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign C_2_fu_1048_p3 = {{trunc_ln203_fu_1034_p1}, {tmp_3_fu_1038_p4}};

assign C_3_fu_1100_p3 = {{trunc_ln197_fu_1096_p1}, {tmp_2_fu_1088_p3}};

assign D_1_fu_979_p1 = permuted_choice_1_0_reg_343[27:0];

assign D_2_fu_1070_p3 = {{trunc_ln204_fu_1056_p1}, {tmp_s_fu_1060_p4}};

assign D_3_fu_1120_p3 = {{trunc_ln198_fu_1116_p1}, {tmp_4_fu_1108_p3}};

assign E_address0 = zext_ln229_fu_1184_p1;

assign IP_address0 = zext_ln174_1_fu_921_p1;

assign PC1_address0 = zext_ln184_1_fu_960_p1;

assign PC2_address0 = zext_ln218_fu_1151_p1;

assign PI_address0 = zext_ln270_1_fu_1442_p1;

assign P_address0 = zext_ln254_fu_1411_p1;

assign R_1_fu_1420_p2 = (f_function_res_0_reg_468 ^ L_0_reg_410);

assign R_fu_940_p1 = init_perm_res_0_reg_321[31:0];

assign S_address0 = sext_ln246_3_fu_1389_p1;

assign and_ln240_fu_1296_p0 = grp_fu_874_p2;

assign and_ln240_fu_1296_p2 = (xor_ln232_1_reg_1626 & and_ln240_fu_1296_p0);

assign and_ln243_fu_1336_p2 = (xor_ln232_reg_1621 & lshr_ln243_fu_899_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_phi_mux_i_2_phi_fu_369_p4 = reg_365;

assign ap_return = inv_init_perm_res_0_reg_501;

assign empty_13_fu_1019_p2 = (empty_12_reg_1554 | empty_11_reg_1549);

assign empty_15_fu_1023_p2 = (empty_14_reg_1559 | empty_13_fu_1019_p2);

assign empty_17_fu_1028_p2 = (grp_fu_868_p2 | empty_15_fu_1023_p2);

assign f_function_res_fu_1435_p3 = {{trunc_ln254_1_reg_1679}, {trunc_ln254_fu_1431_p1}};

assign grp_fu_512_p2 = (grp_fu_512_p0 + grp_fu_512_p1);

assign grp_fu_746_p2 = ($signed(grp_fu_746_p0) - $signed(grp_fu_746_p1));

assign grp_fu_868_p2 = ((grp_fu_868_p0 == grp_fu_868_p1) ? 1'b1 : 1'b0);

assign grp_fu_874_p2 = grp_fu_874_p0 >> grp_fu_874_p1;

assign init_perm_res_fu_953_p3 = {{trunc_ln174_1_reg_1485}, {trunc_ln174_fu_949_p1}};

assign inv_init_perm_res_fu_1460_p3 = {{trunc_ln270_1_reg_1702}, {trunc_ln270_fu_1456_p1}};

assign lshr_ln240_1_fu_895_p2 = and_ln240_fu_1296_p2 >> zext_ln240_6_fu_1302_p1;

assign lshr_ln243_1_fu_904_p2 = and_ln243_fu_1336_p2 >> zext_ln243_fu_1342_p1;

assign lshr_ln243_fu_899_p2 = 47'd131941395333120 >> zext_ln240_3_fu_1307_p1;

assign or_ln241_fu_1321_p2 = (trunc_ln240_1_fu_1311_p1 | tmp_5_fu_1314_p3);

assign or_ln_fu_1169_p3 = {{trunc_ln218_1_reg_1585}, {trunc_ln218_fu_1165_p1}};

assign permuted_choice_1_fu_1007_p3 = {{trunc_ln184_1_reg_1513}, {trunc_ln184_fu_1003_p1}};

assign pre_output_fu_1176_p3 = {{temp_reg_400}, {L_0_reg_410}};

assign s_input_fu_1207_p3 = {{trunc_ln229_1_fu_1203_p1}, {trunc_ln229_fu_1199_p1}};

assign s_output_fu_1398_p3 = {{trunc_ln246_1_fu_1394_p1}, {S_q0}};

assign sext_ln240_fu_1287_p1 = $signed(reg_781);

assign sext_ln246_1_fu_1366_p1 = $signed(trunc_ln246_fu_1362_p1);

assign sext_ln246_2_fu_1371_p0 = reg_433;

assign sext_ln246_2_fu_1371_p1 = $signed(sext_ln246_2_fu_1371_p0);

assign sext_ln246_3_fu_1389_p1 = $signed(grp_fu_512_p2);

assign sext_ln246_fu_1357_p1 = $signed(tmp_7_fu_1347_p4);

assign shl_ln240_1_fu_1275_p3 = {{trunc_ln240_reg_1634}, {2'd0}};

assign shl_ln240_fu_1260_p2 = j_2_reg_456 << 4'd1;

assign shl_ln_fu_1247_p3 = {{trunc_ln240_fu_1243_p1}, {3'd0}};

assign tmp_2_fu_1088_p3 = C_1_fu_188[32'd27];

assign tmp_3_fu_1038_p4 = {{C_1_fu_188[27:26]}};

assign tmp_4_fu_1108_p3 = D_fu_192[32'd27];

assign tmp_5_fu_1314_p3 = lshr_ln240_1_reg_1659[32'd4];

assign tmp_6_fu_1327_p4 = {{lshr_ln240_1_reg_1659[7:5]}};

assign tmp_7_fu_1347_p4 = {{{tmp_6_fu_1327_p4}, {or_ln241_fu_1321_p2}}, {4'd0}};

assign tmp_8_fu_1376_p3 = {{j_2_reg_456}, {6'd0}};

assign tmp_9_fu_1143_p3 = {{C_1_fu_188}, {D_fu_192}};

assign tmp_s_fu_1060_p4 = {{D_fu_192[27:26]}};

assign trunc_ln174_1_fu_926_p1 = init_perm_res_0_reg_321[62:0];

assign trunc_ln174_fu_949_p1 = grp_fu_874_p2[0:0];

assign trunc_ln184_1_fu_965_p1 = permuted_choice_1_0_reg_343[62:0];

assign trunc_ln184_fu_1003_p1 = grp_fu_874_p2[0:0];

assign trunc_ln197_fu_1096_p1 = C_1_fu_188[26:0];

assign trunc_ln198_fu_1116_p1 = D_fu_192[26:0];

assign trunc_ln203_fu_1034_p1 = C_1_fu_188[25:0];

assign trunc_ln204_fu_1056_p1 = D_fu_192[25:0];

assign trunc_ln218_1_fu_1156_p1 = sub_key_load_1_reg_377[62:0];

assign trunc_ln218_fu_1165_p0 = grp_fu_874_p2;

assign trunc_ln218_fu_1165_p1 = trunc_ln218_fu_1165_p0[0:0];

assign trunc_ln229_1_fu_1203_p1 = reg_433[62:0];

assign trunc_ln229_fu_1199_p0 = grp_fu_874_p2;

assign trunc_ln229_fu_1199_p1 = trunc_ln229_fu_1199_p0[0:0];

assign trunc_ln232_1_fu_1219_p1 = sub_key_q0[47:0];

assign trunc_ln232_2_fu_1223_p1 = reg_433[46:0];

assign trunc_ln232_3_fu_1227_p1 = sub_key_q0[46:0];

assign trunc_ln232_fu_1215_p1 = reg_433[47:0];

assign trunc_ln240_1_fu_1311_p1 = lshr_ln240_1_reg_1659[0:0];

assign trunc_ln240_fu_1243_p1 = j_2_reg_456[2:0];

assign trunc_ln246_1_fu_1394_p1 = s_output_1_fu_196[27:0];

assign trunc_ln246_fu_1362_p1 = lshr_ln243_1_fu_904_p2[7:0];

assign trunc_ln254_1_fu_1416_p1 = f_function_res_0_reg_468[30:0];

assign trunc_ln254_fu_1431_p0 = grp_fu_874_p2;

assign trunc_ln254_fu_1431_p1 = trunc_ln254_fu_1431_p0[0:0];

assign trunc_ln270_1_fu_1447_p1 = inv_init_perm_res_0_reg_501[62:0];

assign trunc_ln270_fu_1456_p1 = grp_fu_874_p2[0:0];

assign xor_ln232_1_fu_1237_p2 = (trunc_ln232_fu_1215_p1 ^ trunc_ln232_1_fu_1219_p1);

assign xor_ln232_fu_1231_p2 = (trunc_ln232_3_fu_1227_p1 ^ trunc_ln232_2_fu_1223_p1);

assign zext_ln174_1_fu_921_p1 = i_0_reg_332;

assign zext_ln174_fu_944_p1 = grp_fu_746_p2;

assign zext_ln184_1_fu_960_p1 = reg_354;

assign zext_ln184_2_fu_993_p1 = PC1_q0;

assign zext_ln184_fu_998_p1 = grp_fu_746_p2;

assign zext_ln214_fu_1138_p1 = reg_365;

assign zext_ln218_1_fu_1160_p0 = grp_fu_746_p2;

assign zext_ln218_1_fu_1160_p1 = zext_ln218_1_fu_1160_p0;

assign zext_ln218_fu_1151_p1 = reg_389;

assign zext_ln229_1_fu_1194_p0 = grp_fu_746_p2;

assign zext_ln229_1_fu_1194_p1 = zext_ln229_1_fu_1194_p0;

assign zext_ln229_fu_1184_p1 = j_1_reg_445;

assign zext_ln232_fu_1189_p0 = grp_fu_746_p2;

assign zext_ln232_fu_1189_p1 = zext_ln232_fu_1189_p0;

assign zext_ln240_1_fu_1271_p1 = shl_ln240_reg_1639;

assign zext_ln240_2_fu_1266_p1 = shl_ln240_fu_1260_p2;

assign zext_ln240_3_fu_1307_p1 = $unsigned(sext_ln240_reg_1654);

assign zext_ln240_4_fu_1291_p1 = $unsigned(sext_ln240_fu_1287_p1);

assign zext_ln240_5_fu_1282_p1 = shl_ln240_1_fu_1275_p3;

assign zext_ln240_6_fu_1302_p1 = reg_757;

assign zext_ln240_fu_1255_p1 = shl_ln_fu_1247_p3;

assign zext_ln243_fu_1342_p0 = grp_fu_746_p2;

assign zext_ln243_fu_1342_p1 = zext_ln243_fu_1342_p0;

assign zext_ln246_fu_1384_p1 = tmp_8_fu_1376_p3;

assign zext_ln254_1_fu_1426_p0 = grp_fu_746_p2;

assign zext_ln254_1_fu_1426_p1 = zext_ln254_1_fu_1426_p0;

assign zext_ln254_fu_1411_p1 = reg_479;

assign zext_ln270_1_fu_1442_p1 = reg_490;

assign zext_ln270_fu_1451_p1 = grp_fu_746_p2;

always @ (posedge ap_clk) begin
    shl_ln240_reg_1639[0] <= 1'b0;
    zext_ln240_1_reg_1644[0] <= 1'b0;
    zext_ln240_1_reg_1644[5:4] <= 2'b00;
    zext_ln240_5_reg_1649[1:0] <= 2'b00;
    zext_ln240_5_reg_1649[5] <= 1'b0;
end

endmodule //des_dec

// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="des_dec,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a35tl-cpg236-2L,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.689625,HLS_SYN_LAT=4867,HLS_SYN_TPT=none,HLS_SYN_MEM=3,HLS_SYN_DSP=0,HLS_SYN_FF=963,HLS_SYN_LUT=2036,HLS_VERSION=2019_1}" *)

module des_dec (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r,
        key,
        ap_return
);

parameter    ap_ST_fsm_state1 = 17'd1;
parameter    ap_ST_fsm_state2 = 17'd2;
parameter    ap_ST_fsm_state3 = 17'd4;
parameter    ap_ST_fsm_state4 = 17'd8;
parameter    ap_ST_fsm_state5 = 17'd16;
parameter    ap_ST_fsm_state6 = 17'd32;
parameter    ap_ST_fsm_state7 = 17'd64;
parameter    ap_ST_fsm_state8 = 17'd128;
parameter    ap_ST_fsm_state9 = 17'd256;
parameter    ap_ST_fsm_state10 = 17'd512;
parameter    ap_ST_fsm_state11 = 17'd1024;
parameter    ap_ST_fsm_state12 = 17'd2048;
parameter    ap_ST_fsm_state13 = 17'd4096;
parameter    ap_ST_fsm_state14 = 17'd8192;
parameter    ap_ST_fsm_state15 = 17'd16384;
parameter    ap_ST_fsm_state16 = 17'd32768;
parameter    ap_ST_fsm_state17 = 17'd65536;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] input_r;
input  [63:0] key;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [5:0] PC2_address0;
reg    PC2_ce0;
wire   [5:0] PC2_q0;
wire   [5:0] E_address0;
reg    E_ce0;
wire   [5:0] E_q0;
wire   [8:0] S_address0;
reg    S_ce0;
wire   [3:0] S_q0;
wire   [4:0] P_address0;
reg    P_ce0;
wire   [5:0] P_q0;
wire   [5:0] PI_address0;
reg    PI_ce0;
wire   [6:0] PI_q0;
wire   [31:0] L_fu_1038_p33;
reg   [31:0] L_reg_2434;
wire   [31:0] R_fu_1106_p33;
reg   [31:0] R_reg_2439;
wire   [4:0] i_1_fu_1758_p2;
reg   [4:0] i_1_reg_2447;
wire    ap_CS_fsm_state2;
reg   [3:0] sub_key_addr_reg_2455;
wire   [0:0] icmp_ln192_fu_1752_p2;
wire   [55:0] tmp_11_fu_1920_p3;
reg   [55:0] tmp_11_reg_2467;
wire    ap_CS_fsm_state3;
wire   [5:0] j_4_fu_1934_p2;
reg   [5:0] j_4_reg_2475;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln216_fu_1928_p2;
wire   [62:0] trunc_ln218_1_fu_1945_p1;
reg   [62:0] trunc_ln218_1_reg_2485;
wire   [63:0] or_ln_fu_1968_p3;
wire    ap_CS_fsm_state5;
wire   [4:0] i_5_fu_1981_p2;
reg   [4:0] i_5_reg_2498;
wire    ap_CS_fsm_state6;
wire   [63:0] pre_output_fu_1987_p3;
reg   [63:0] pre_output_reg_2503;
wire   [0:0] icmp_ln223_fu_1975_p2;
wire   [5:0] j_fu_2001_p2;
reg   [5:0] j_reg_2511;
wire    ap_CS_fsm_state7;
wire   [0:0] icmp_ln227_fu_1995_p2;
wire   [63:0] s_input_fu_2047_p3;
wire    ap_CS_fsm_state8;
wire   [46:0] xor_ln232_fu_2071_p2;
reg   [46:0] xor_ln232_reg_2531;
wire    ap_CS_fsm_state9;
wire   [47:0] xor_ln232_1_fu_2077_p2;
reg   [47:0] xor_ln232_1_reg_2536;
wire   [3:0] j_5_fu_2089_p2;
reg   [3:0] j_5_reg_2544;
wire    ap_CS_fsm_state10;
wire   [6:0] sub_ln240_fu_2125_p2;
reg   [6:0] sub_ln240_reg_2549;
wire   [0:0] icmp_ln235_fu_2083_p2;
wire   [5:0] sub_ln240_2_fu_2149_p2;
reg   [5:0] sub_ln240_2_reg_2554;
wire   [5:0] sub_ln243_1_fu_2161_p2;
reg   [5:0] sub_ln243_1_reg_2559;
wire   [10:0] add_ln246_1_fu_2290_p2;
reg   [10:0] add_ln246_1_reg_2564;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire   [5:0] j_6_fu_2323_p2;
reg   [5:0] j_6_reg_2577;
wire    ap_CS_fsm_state14;
wire   [0:0] icmp_ln252_fu_2317_p2;
wire   [30:0] trunc_ln254_1_fu_2334_p1;
reg   [30:0] trunc_ln254_1_reg_2587;
wire   [31:0] R_1_fu_2338_p2;
wire   [31:0] f_function_res_fu_2364_p3;
wire    ap_CS_fsm_state15;
wire   [6:0] i_fu_2377_p2;
reg   [6:0] i_reg_2605;
wire    ap_CS_fsm_state16;
wire   [0:0] icmp_ln267_fu_2371_p2;
wire   [62:0] trunc_ln270_1_fu_2388_p1;
reg   [62:0] trunc_ln270_1_reg_2615;
wire   [63:0] inv_init_perm_res_fu_2411_p3;
wire    ap_CS_fsm_state17;
reg   [3:0] sub_key_address0;
reg    sub_key_ce0;
reg    sub_key_we0;
wire   [63:0] sub_key_q0;
reg   [4:0] i_2_reg_375;
reg   [63:0] sub_key_load_1_reg_386;
reg   [5:0] j_0_reg_398;
reg   [31:0] temp_reg_409;
reg   [31:0] L_0_reg_419;
reg   [4:0] i_3_reg_430;
reg   [63:0] s_input_0_reg_442;
reg   [5:0] j_1_reg_454;
reg   [3:0] j_2_reg_465;
wire    ap_CS_fsm_state13;
reg   [31:0] f_function_res_0_reg_477;
reg   [5:0] j_3_reg_488;
reg   [6:0] i_4_reg_499;
reg   [63:0] inv_init_perm_res_0_reg_510;
wire   [63:0] zext_ln214_fu_1910_p1;
wire   [63:0] zext_ln218_fu_1940_p1;
wire   [63:0] zext_ln229_fu_2007_p1;
wire   [63:0] zext_ln232_fu_2018_p1;
wire  signed [63:0] sext_ln246_3_fu_2296_p1;
wire   [63:0] zext_ln254_fu_2329_p1;
wire   [63:0] zext_ln270_1_fu_2383_p1;
reg   [27:0] C_1_fu_264;
wire   [27:0] C_fu_1622_p29;
wire   [27:0] C_2_fu_1820_p3;
wire   [0:0] empty_13_fu_1800_p2;
wire   [27:0] C_3_fu_1872_p3;
reg   [27:0] D_1_fu_268;
wire   [27:0] D_fu_1682_p29;
wire   [27:0] D_2_fu_1842_p3;
wire   [27:0] D_3_fu_1892_p3;
reg   [31:0] s_output_1_fu_276;
wire   [31:0] s_output_fu_2304_p3;
wire   [0:0] tmp_3_fu_538_p3;
wire   [0:0] tmp_2_fu_530_p3;
wire   [0:0] tmp_4_fu_546_p3;
wire   [0:0] tmp_5_fu_554_p3;
wire   [0:0] tmp_6_fu_562_p3;
wire   [0:0] tmp_7_fu_570_p3;
wire   [0:0] tmp_8_fu_578_p3;
wire   [0:0] tmp_9_fu_586_p3;
wire   [0:0] tmp_10_fu_594_p3;
wire   [0:0] tmp_12_fu_602_p3;
wire   [0:0] tmp_13_fu_610_p3;
wire   [0:0] tmp_14_fu_618_p3;
wire   [0:0] tmp_16_fu_626_p3;
wire   [0:0] tmp_18_fu_634_p3;
wire   [0:0] tmp_19_fu_642_p3;
wire   [0:0] tmp_21_fu_650_p3;
wire   [0:0] tmp_22_fu_658_p3;
wire   [0:0] tmp_23_fu_666_p3;
wire   [0:0] tmp_26_fu_674_p3;
wire   [0:0] tmp_27_fu_682_p3;
wire   [0:0] tmp_28_fu_690_p3;
wire   [0:0] tmp_29_fu_698_p3;
wire   [0:0] tmp_30_fu_706_p3;
wire   [0:0] tmp_31_fu_714_p3;
wire   [0:0] trunc_ln174_fu_722_p1;
wire   [0:0] tmp_32_fu_726_p3;
wire   [0:0] tmp_33_fu_734_p3;
wire   [0:0] tmp_34_fu_742_p3;
wire   [0:0] tmp_35_fu_750_p3;
wire   [0:0] tmp_36_fu_758_p3;
wire   [0:0] tmp_37_fu_766_p3;
wire   [0:0] tmp_38_fu_774_p3;
wire   [0:0] tmp_39_fu_782_p3;
wire   [0:0] tmp_40_fu_790_p3;
wire   [0:0] tmp_41_fu_798_p3;
wire   [0:0] tmp_42_fu_806_p3;
wire   [0:0] tmp_43_fu_814_p3;
wire   [0:0] tmp_44_fu_822_p3;
wire   [0:0] tmp_45_fu_830_p3;
wire   [0:0] tmp_46_fu_838_p3;
wire   [0:0] tmp_47_fu_846_p3;
wire   [0:0] tmp_48_fu_854_p3;
wire   [0:0] tmp_49_fu_862_p3;
wire   [0:0] tmp_50_fu_870_p3;
wire   [0:0] tmp_51_fu_878_p3;
wire   [0:0] tmp_52_fu_886_p3;
wire   [0:0] tmp_53_fu_894_p3;
wire   [0:0] tmp_54_fu_902_p3;
wire   [0:0] tmp_55_fu_910_p3;
wire   [0:0] tmp_56_fu_918_p3;
wire   [0:0] tmp_57_fu_926_p3;
wire   [0:0] tmp_58_fu_934_p3;
wire   [0:0] tmp_59_fu_942_p3;
wire   [0:0] tmp_60_fu_950_p3;
wire   [0:0] tmp_61_fu_958_p3;
wire   [0:0] tmp_62_fu_966_p3;
wire   [0:0] tmp_63_fu_974_p3;
wire   [0:0] tmp_64_fu_982_p3;
wire   [0:0] tmp_65_fu_990_p3;
wire   [0:0] tmp_66_fu_998_p3;
wire   [0:0] tmp_67_fu_1006_p3;
wire   [0:0] tmp_68_fu_1014_p3;
wire   [0:0] tmp_69_fu_1022_p3;
wire   [0:0] tmp_70_fu_1030_p3;
wire   [0:0] tmp_73_fu_1190_p3;
wire   [0:0] tmp_72_fu_1182_p3;
wire   [0:0] tmp_74_fu_1198_p3;
wire   [0:0] tmp_75_fu_1206_p3;
wire   [0:0] tmp_76_fu_1214_p3;
wire   [0:0] tmp_77_fu_1222_p3;
wire   [0:0] tmp_78_fu_1230_p3;
wire   [0:0] tmp_79_fu_1238_p3;
wire   [0:0] tmp_71_fu_1174_p3;
wire   [0:0] tmp_80_fu_1246_p3;
wire   [0:0] tmp_81_fu_1254_p3;
wire   [0:0] tmp_82_fu_1262_p3;
wire   [0:0] tmp_83_fu_1270_p3;
wire   [0:0] tmp_84_fu_1278_p3;
wire   [0:0] tmp_85_fu_1286_p3;
wire   [0:0] tmp_86_fu_1294_p3;
wire   [0:0] tmp_87_fu_1302_p3;
wire   [0:0] tmp_88_fu_1310_p3;
wire   [0:0] tmp_89_fu_1318_p3;
wire   [0:0] tmp_90_fu_1326_p3;
wire   [0:0] tmp_91_fu_1334_p3;
wire   [0:0] tmp_92_fu_1342_p3;
wire   [0:0] tmp_93_fu_1350_p3;
wire   [0:0] tmp_94_fu_1358_p3;
wire   [0:0] tmp_95_fu_1366_p3;
wire   [0:0] tmp_96_fu_1374_p3;
wire   [0:0] tmp_97_fu_1382_p3;
wire   [0:0] tmp_98_fu_1390_p3;
wire   [0:0] tmp_99_fu_1398_p3;
wire   [0:0] tmp_100_fu_1406_p3;
wire   [0:0] tmp_101_fu_1414_p3;
wire   [0:0] tmp_102_fu_1422_p3;
wire   [0:0] tmp_103_fu_1430_p3;
wire   [0:0] tmp_104_fu_1438_p3;
wire   [0:0] tmp_105_fu_1446_p3;
wire   [0:0] tmp_106_fu_1454_p3;
wire   [0:0] tmp_107_fu_1462_p3;
wire   [0:0] tmp_108_fu_1470_p3;
wire   [0:0] tmp_109_fu_1478_p3;
wire   [0:0] tmp_110_fu_1486_p3;
wire   [0:0] tmp_111_fu_1494_p3;
wire   [0:0] tmp_112_fu_1502_p3;
wire   [0:0] tmp_113_fu_1510_p3;
wire   [0:0] tmp_114_fu_1518_p3;
wire   [0:0] tmp_115_fu_1526_p3;
wire   [0:0] tmp_116_fu_1534_p3;
wire   [0:0] tmp_117_fu_1542_p3;
wire   [0:0] tmp_118_fu_1550_p3;
wire   [0:0] tmp_119_fu_1558_p3;
wire   [0:0] tmp_120_fu_1566_p3;
wire   [0:0] tmp_121_fu_1574_p3;
wire   [0:0] tmp_122_fu_1582_p3;
wire   [0:0] tmp_123_fu_1590_p3;
wire   [0:0] tmp_124_fu_1598_p3;
wire   [0:0] tmp_125_fu_1606_p3;
wire   [0:0] tmp_126_fu_1614_p3;
wire   [0:0] empty_8_fu_1770_p2;
wire   [0:0] empty_7_fu_1764_p2;
wire   [0:0] empty_10_fu_1782_p2;
wire   [0:0] empty_9_fu_1776_p2;
wire   [0:0] empty_12_fu_1794_p2;
wire   [0:0] empty_11_fu_1788_p2;
wire   [25:0] trunc_ln203_fu_1806_p1;
wire   [1:0] tmp_s_fu_1810_p4;
wire   [25:0] trunc_ln204_fu_1828_p1;
wire   [1:0] tmp_17_fu_1832_p4;
wire   [26:0] trunc_ln197_fu_1868_p1;
wire   [0:0] tmp_127_fu_1860_p3;
wire   [26:0] trunc_ln198_fu_1888_p1;
wire   [0:0] tmp_128_fu_1880_p3;
wire   [5:0] sub_ln218_fu_1949_p2;
wire   [55:0] zext_ln218_1_fu_1955_p1;
wire   [55:0] lshr_ln218_fu_1959_p2;
wire   [0:0] trunc_ln218_fu_1964_p1;
wire   [4:0] sub_ln232_fu_2012_p2;
wire   [5:0] sub_ln229_fu_2023_p2;
wire   [31:0] zext_ln229_1_fu_2029_p1;
wire   [31:0] lshr_ln229_fu_2033_p2;
wire   [62:0] trunc_ln229_1_fu_2043_p1;
wire   [0:0] trunc_ln229_fu_2039_p1;
wire   [46:0] trunc_ln232_3_fu_2067_p1;
wire   [46:0] trunc_ln232_2_fu_2063_p1;
wire   [47:0] trunc_ln232_1_fu_2059_p1;
wire   [47:0] trunc_ln232_fu_2055_p1;
wire   [2:0] trunc_ln240_fu_2095_p1;
wire   [5:0] shl_ln_fu_2099_p3;
wire   [3:0] shl_ln240_fu_2111_p2;
wire   [6:0] zext_ln240_fu_2107_p1;
wire   [6:0] zext_ln240_2_fu_2121_p1;
wire   [4:0] shl_ln240_1_fu_2131_p3;
wire   [5:0] zext_ln240_1_fu_2117_p1;
wire   [5:0] sub_ln240_1_fu_2143_p2;
wire   [5:0] zext_ln240_5_fu_2139_p1;
wire   [5:0] sub_ln243_fu_2155_p2;
wire  signed [31:0] sext_ln240_fu_2167_p1;
wire   [47:0] zext_ln240_4_fu_2174_p1;
wire   [47:0] lshr_ln240_fu_2178_p2;
wire   [47:0] and_ln240_fu_2184_p2;
wire   [47:0] zext_ln240_6_fu_2189_p1;
wire   [47:0] lshr_ln240_1_fu_2192_p2;
wire   [0:0] tmp_129_fu_2202_p3;
wire   [0:0] trunc_ln240_1_fu_2198_p1;
wire   [46:0] zext_ln240_3_fu_2170_p1;
wire   [46:0] lshr_ln243_fu_2226_p2;
wire   [46:0] and_ln243_fu_2232_p2;
wire   [46:0] zext_ln243_fu_2237_p1;
wire   [2:0] tmp_15_fu_2216_p4;
wire   [0:0] or_ln241_fu_2210_p2;
wire   [7:0] tmp_20_fu_2246_p4;
wire   [46:0] lshr_ln243_1_fu_2240_p2;
wire   [7:0] trunc_ln246_fu_2260_p1;
wire  signed [8:0] sext_ln246_1_fu_2264_p1;
wire  signed [8:0] sext_ln246_fu_2256_p1;
wire   [8:0] add_ln246_fu_2268_p2;
wire   [9:0] tmp_24_fu_2278_p3;
wire  signed [10:0] sext_ln246_2_fu_2274_p1;
wire   [10:0] zext_ln246_fu_2286_p1;
wire   [27:0] trunc_ln246_1_fu_2300_p1;
wire   [5:0] sub_ln254_fu_2344_p2;
wire   [31:0] zext_ln254_1_fu_2350_p1;
wire   [31:0] lshr_ln254_fu_2354_p2;
wire   [0:0] trunc_ln254_fu_2360_p1;
wire   [6:0] sub_ln270_fu_2392_p2;
wire   [63:0] zext_ln270_fu_2398_p1;
wire   [63:0] lshr_ln270_fu_2402_p2;
wire   [0:0] trunc_ln270_fu_2407_p1;
reg   [16:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 17'd1;
end

des_dec_PC2 #(
    .DataWidth( 6 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
PC2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(PC2_address0),
    .ce0(PC2_ce0),
    .q0(PC2_q0)
);

des_dec_E #(
    .DataWidth( 6 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
E_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(E_address0),
    .ce0(E_ce0),
    .q0(E_q0)
);

des_dec_S #(
    .DataWidth( 4 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
S_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(S_address0),
    .ce0(S_ce0),
    .q0(S_q0)
);

des_dec_P #(
    .DataWidth( 6 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
P_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(P_address0),
    .ce0(P_ce0),
    .q0(P_q0)
);

des_dec_PI #(
    .DataWidth( 7 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
PI_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(PI_address0),
    .ce0(PI_ce0),
    .q0(PI_q0)
);

des_dec_sub_key #(
    .DataWidth( 64 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
sub_key_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sub_key_address0),
    .ce0(sub_key_ce0),
    .we0(sub_key_we0),
    .d0(sub_key_load_1_reg_386),
    .q0(sub_key_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln192_fu_1752_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (empty_13_fu_1800_p2 == 1'd1))) begin
        C_1_fu_264 <= C_3_fu_1872_p3;
    end else if (((empty_13_fu_1800_p2 == 1'd0) & (icmp_ln192_fu_1752_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        C_1_fu_264 <= C_2_fu_1820_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        C_1_fu_264 <= C_fu_1622_p29;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln192_fu_1752_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (empty_13_fu_1800_p2 == 1'd1))) begin
        D_1_fu_268 <= D_3_fu_1892_p3;
    end else if (((empty_13_fu_1800_p2 == 1'd0) & (icmp_ln192_fu_1752_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        D_1_fu_268 <= D_2_fu_1842_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        D_1_fu_268 <= D_fu_1682_p29;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln192_fu_1752_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        L_0_reg_419 <= L_reg_2434;
    end else if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln252_fu_2317_p2 == 1'd1))) begin
        L_0_reg_419 <= temp_reg_409;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln235_fu_2083_p2 == 1'd1))) begin
        f_function_res_0_reg_477 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        f_function_res_0_reg_477 <= f_function_res_fu_2364_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln216_fu_1928_p2 == 1'd1))) begin
        i_2_reg_375 <= i_1_reg_2447;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_2_reg_375 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln192_fu_1752_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_3_reg_430 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln252_fu_2317_p2 == 1'd1))) begin
        i_3_reg_430 <= i_5_reg_2498;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        i_4_reg_499 <= i_reg_2605;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln223_fu_1975_p2 == 1'd1))) begin
        i_4_reg_499 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        inv_init_perm_res_0_reg_510 <= inv_init_perm_res_fu_2411_p3;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln223_fu_1975_p2 == 1'd1))) begin
        inv_init_perm_res_0_reg_510 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        j_0_reg_398 <= j_4_reg_2475;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        j_0_reg_398 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        j_1_reg_454 <= j_reg_2511;
    end else if (((icmp_ln223_fu_1975_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        j_1_reg_454 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        j_2_reg_465 <= j_5_reg_2544;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        j_2_reg_465 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln235_fu_2083_p2 == 1'd1))) begin
        j_3_reg_488 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        j_3_reg_488 <= j_6_reg_2577;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        s_input_0_reg_442 <= s_input_fu_2047_p3;
    end else if (((icmp_ln223_fu_1975_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        s_input_0_reg_442 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        s_output_1_fu_276 <= s_output_fu_2304_p3;
    end else if (((icmp_ln192_fu_1752_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        s_output_1_fu_276 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        sub_key_load_1_reg_386 <= or_ln_fu_1968_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        sub_key_load_1_reg_386 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln192_fu_1752_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        temp_reg_409 <= R_reg_2439;
    end else if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln252_fu_2317_p2 == 1'd1))) begin
        temp_reg_409 <= R_1_fu_2338_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        L_reg_2434 <= L_fu_1038_p33;
        R_reg_2439 <= R_fu_1106_p33;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln246_1_reg_2564 <= add_ln246_1_fu_2290_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_1_reg_2447 <= i_1_fu_1758_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i_5_reg_2498 <= i_5_fu_1981_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        i_reg_2605 <= i_fu_2377_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        j_4_reg_2475 <= j_4_fu_1934_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        j_5_reg_2544 <= j_5_fu_2089_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        j_6_reg_2577 <= j_6_fu_2323_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        j_reg_2511 <= j_fu_2001_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln223_fu_1975_p2 == 1'd1))) begin
        pre_output_reg_2503 <= pre_output_fu_1987_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln192_fu_1752_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        sub_key_addr_reg_2455 <= zext_ln214_fu_1910_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln235_fu_2083_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        sub_ln240_2_reg_2554[5 : 1] <= sub_ln240_2_fu_2149_p2[5 : 1];
        sub_ln240_reg_2549[6 : 1] <= sub_ln240_fu_2125_p2[6 : 1];
        sub_ln243_1_reg_2559[5 : 1] <= sub_ln243_1_fu_2161_p2[5 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_11_reg_2467 <= tmp_11_fu_1920_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln216_fu_1928_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        trunc_ln218_1_reg_2485 <= trunc_ln218_1_fu_1945_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_2317_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        trunc_ln254_1_reg_2587 <= trunc_ln254_1_fu_2334_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln267_fu_2371_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        trunc_ln270_1_reg_2615 <= trunc_ln270_1_fu_2388_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        xor_ln232_1_reg_2536 <= xor_ln232_1_fu_2077_p2;
        xor_ln232_reg_2531 <= xor_ln232_fu_2071_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        E_ce0 = 1'b1;
    end else begin
        E_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PC2_ce0 = 1'b1;
    end else begin
        PC2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        PI_ce0 = 1'b1;
    end else begin
        PI_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        P_ce0 = 1'b1;
    end else begin
        P_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        S_ce0 = 1'b1;
    end else begin
        S_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln267_fu_2371_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln267_fu_2371_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        sub_key_address0 = zext_ln232_fu_2018_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        sub_key_address0 = sub_key_addr_reg_2455;
    end else begin
        sub_key_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state4))) begin
        sub_key_ce0 = 1'b1;
    end else begin
        sub_key_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        sub_key_we0 = 1'b1;
    end else begin
        sub_key_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln192_fu_1752_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln216_fu_1928_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln223_fu_1975_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln227_fu_1995_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (icmp_ln235_fu_2083_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln252_fu_2317_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln267_fu_2371_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign C_2_fu_1820_p3 = {{trunc_ln203_fu_1806_p1}, {tmp_s_fu_1810_p4}};

assign C_3_fu_1872_p3 = {{trunc_ln197_fu_1868_p1}, {tmp_127_fu_1860_p3}};

assign C_fu_1622_p29 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_73_fu_1190_p3}, {tmp_72_fu_1182_p3}}, {tmp_74_fu_1198_p3}}, {tmp_75_fu_1206_p3}}, {tmp_76_fu_1214_p3}}, {tmp_77_fu_1222_p3}}, {tmp_78_fu_1230_p3}}, {tmp_79_fu_1238_p3}}, {tmp_71_fu_1174_p3}}, {tmp_80_fu_1246_p3}}, {tmp_81_fu_1254_p3}}, {tmp_82_fu_1262_p3}}, {tmp_83_fu_1270_p3}}, {tmp_84_fu_1278_p3}}, {tmp_85_fu_1286_p3}}, {tmp_86_fu_1294_p3}}, {tmp_87_fu_1302_p3}}, {tmp_88_fu_1310_p3}}, {tmp_89_fu_1318_p3}}, {tmp_90_fu_1326_p3}}, {tmp_91_fu_1334_p3}}, {tmp_92_fu_1342_p3}}, {tmp_93_fu_1350_p3}}, {tmp_94_fu_1358_p3}}, {tmp_95_fu_1366_p3}}, {tmp_96_fu_1374_p3}}, {tmp_97_fu_1382_p3}}, {tmp_98_fu_1390_p3}};

assign D_2_fu_1842_p3 = {{trunc_ln204_fu_1828_p1}, {tmp_17_fu_1832_p4}};

assign D_3_fu_1892_p3 = {{trunc_ln198_fu_1888_p1}, {tmp_128_fu_1880_p3}};

assign D_fu_1682_p29 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_99_fu_1398_p3}, {tmp_100_fu_1406_p3}}, {tmp_101_fu_1414_p3}}, {tmp_102_fu_1422_p3}}, {tmp_103_fu_1430_p3}}, {tmp_104_fu_1438_p3}}, {tmp_105_fu_1446_p3}}, {tmp_106_fu_1454_p3}}, {tmp_107_fu_1462_p3}}, {tmp_108_fu_1470_p3}}, {tmp_109_fu_1478_p3}}, {tmp_110_fu_1486_p3}}, {tmp_111_fu_1494_p3}}, {tmp_112_fu_1502_p3}}, {tmp_113_fu_1510_p3}}, {tmp_114_fu_1518_p3}}, {tmp_115_fu_1526_p3}}, {tmp_116_fu_1534_p3}}, {tmp_117_fu_1542_p3}}, {tmp_118_fu_1550_p3}}, {tmp_119_fu_1558_p3}}, {tmp_120_fu_1566_p3}}, {tmp_121_fu_1574_p3}}, {tmp_122_fu_1582_p3}}, {tmp_123_fu_1590_p3}}, {tmp_124_fu_1598_p3}}, {tmp_125_fu_1606_p3}}, {tmp_126_fu_1614_p3}};

assign E_address0 = zext_ln229_fu_2007_p1;

assign L_fu_1038_p33 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_3_fu_538_p3}, {tmp_2_fu_530_p3}}, {tmp_4_fu_546_p3}}, {tmp_5_fu_554_p3}}, {tmp_6_fu_562_p3}}, {tmp_7_fu_570_p3}}, {tmp_8_fu_578_p3}}, {tmp_9_fu_586_p3}}, {tmp_10_fu_594_p3}}, {tmp_12_fu_602_p3}}, {tmp_13_fu_610_p3}}, {tmp_14_fu_618_p3}}, {tmp_16_fu_626_p3}}, {tmp_18_fu_634_p3}}, {tmp_19_fu_642_p3}}, {tmp_21_fu_650_p3}}, {tmp_22_fu_658_p3}}, {tmp_23_fu_666_p3}}, {tmp_26_fu_674_p3}}, {tmp_27_fu_682_p3}}, {tmp_28_fu_690_p3}}, {tmp_29_fu_698_p3}}, {tmp_30_fu_706_p3}}, {tmp_31_fu_714_p3}}, {trunc_ln174_fu_722_p1}}, {tmp_32_fu_726_p3}}, {tmp_33_fu_734_p3}}, {tmp_34_fu_742_p3}}, {tmp_35_fu_750_p3}}, {tmp_36_fu_758_p3}}, {tmp_37_fu_766_p3}}, {tmp_38_fu_774_p3}};

assign PC2_address0 = zext_ln218_fu_1940_p1;

assign PI_address0 = zext_ln270_1_fu_2383_p1;

assign P_address0 = zext_ln254_fu_2329_p1;

assign R_1_fu_2338_p2 = (f_function_res_0_reg_477 ^ L_0_reg_419);

assign R_fu_1106_p33 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_39_fu_782_p3}, {tmp_40_fu_790_p3}}, {tmp_41_fu_798_p3}}, {tmp_42_fu_806_p3}}, {tmp_43_fu_814_p3}}, {tmp_44_fu_822_p3}}, {tmp_45_fu_830_p3}}, {tmp_46_fu_838_p3}}, {tmp_47_fu_846_p3}}, {tmp_48_fu_854_p3}}, {tmp_49_fu_862_p3}}, {tmp_50_fu_870_p3}}, {tmp_51_fu_878_p3}}, {tmp_52_fu_886_p3}}, {tmp_53_fu_894_p3}}, {tmp_54_fu_902_p3}}, {tmp_55_fu_910_p3}}, {tmp_56_fu_918_p3}}, {tmp_57_fu_926_p3}}, {tmp_58_fu_934_p3}}, {tmp_59_fu_942_p3}}, {tmp_60_fu_950_p3}}, {tmp_61_fu_958_p3}}, {tmp_62_fu_966_p3}}, {tmp_63_fu_974_p3}}, {tmp_64_fu_982_p3}}, {tmp_65_fu_990_p3}}, {tmp_66_fu_998_p3}}, {tmp_67_fu_1006_p3}}, {tmp_68_fu_1014_p3}}, {tmp_69_fu_1022_p3}}, {tmp_70_fu_1030_p3}};

assign S_address0 = sext_ln246_3_fu_2296_p1;

assign add_ln246_1_fu_2290_p2 = ($signed(sext_ln246_2_fu_2274_p1) + $signed(zext_ln246_fu_2286_p1));

assign add_ln246_fu_2268_p2 = ($signed(sext_ln246_1_fu_2264_p1) + $signed(sext_ln246_fu_2256_p1));

assign and_ln240_fu_2184_p2 = (xor_ln232_1_reg_2536 & lshr_ln240_fu_2178_p2);

assign and_ln243_fu_2232_p2 = (xor_ln232_reg_2531 & lshr_ln243_fu_2226_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return = inv_init_perm_res_0_reg_510;

assign empty_10_fu_1782_p2 = ((i_2_reg_375 == 5'd1) ? 1'b1 : 1'b0);

assign empty_11_fu_1788_p2 = (empty_9_fu_1776_p2 | empty_10_fu_1782_p2);

assign empty_12_fu_1794_p2 = ((i_2_reg_375 == 5'd0) ? 1'b1 : 1'b0);

assign empty_13_fu_1800_p2 = (empty_12_fu_1794_p2 | empty_11_fu_1788_p2);

assign empty_7_fu_1764_p2 = ((i_2_reg_375 == 5'd15) ? 1'b1 : 1'b0);

assign empty_8_fu_1770_p2 = ((i_2_reg_375 == 5'd8) ? 1'b1 : 1'b0);

assign empty_9_fu_1776_p2 = (empty_8_fu_1770_p2 | empty_7_fu_1764_p2);

assign f_function_res_fu_2364_p3 = {{trunc_ln254_1_reg_2587}, {trunc_ln254_fu_2360_p1}};

assign i_1_fu_1758_p2 = (i_2_reg_375 + 5'd1);

assign i_5_fu_1981_p2 = (i_3_reg_430 + 5'd1);

assign i_fu_2377_p2 = (i_4_reg_499 + 7'd1);

assign icmp_ln192_fu_1752_p2 = ((i_2_reg_375 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln216_fu_1928_p2 = ((j_0_reg_398 == 6'd48) ? 1'b1 : 1'b0);

assign icmp_ln223_fu_1975_p2 = ((i_3_reg_430 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln227_fu_1995_p2 = ((j_1_reg_454 == 6'd48) ? 1'b1 : 1'b0);

assign icmp_ln235_fu_2083_p2 = ((j_2_reg_465 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln252_fu_2317_p2 = ((j_3_reg_488 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln267_fu_2371_p2 = ((i_4_reg_499 == 7'd64) ? 1'b1 : 1'b0);

assign inv_init_perm_res_fu_2411_p3 = {{trunc_ln270_1_reg_2615}, {trunc_ln270_fu_2407_p1}};

assign j_4_fu_1934_p2 = (j_0_reg_398 + 6'd1);

assign j_5_fu_2089_p2 = (j_2_reg_465 + 4'd1);

assign j_6_fu_2323_p2 = (j_3_reg_488 + 6'd1);

assign j_fu_2001_p2 = (j_1_reg_454 + 6'd1);

assign lshr_ln218_fu_1959_p2 = tmp_11_reg_2467 >> zext_ln218_1_fu_1955_p1;

assign lshr_ln229_fu_2033_p2 = temp_reg_409 >> zext_ln229_1_fu_2029_p1;

assign lshr_ln240_1_fu_2192_p2 = and_ln240_fu_2184_p2 >> zext_ln240_6_fu_2189_p1;

assign lshr_ln240_fu_2178_p2 = 48'd145135534866432 >> zext_ln240_4_fu_2174_p1;

assign lshr_ln243_1_fu_2240_p2 = and_ln243_fu_2232_p2 >> zext_ln243_fu_2237_p1;

assign lshr_ln243_fu_2226_p2 = 47'd131941395333120 >> zext_ln240_3_fu_2170_p1;

assign lshr_ln254_fu_2354_p2 = s_output_1_fu_276 >> zext_ln254_1_fu_2350_p1;

assign lshr_ln270_fu_2402_p2 = pre_output_reg_2503 >> zext_ln270_fu_2398_p1;

assign or_ln241_fu_2210_p2 = (trunc_ln240_1_fu_2198_p1 | tmp_129_fu_2202_p3);

assign or_ln_fu_1968_p3 = {{trunc_ln218_1_reg_2485}, {trunc_ln218_fu_1964_p1}};

assign pre_output_fu_1987_p3 = {{temp_reg_409}, {L_0_reg_419}};

assign s_input_fu_2047_p3 = {{trunc_ln229_1_fu_2043_p1}, {trunc_ln229_fu_2039_p1}};

assign s_output_fu_2304_p3 = {{trunc_ln246_1_fu_2300_p1}, {S_q0}};

assign sext_ln240_fu_2167_p1 = $signed(sub_ln240_reg_2549);

assign sext_ln246_1_fu_2264_p1 = $signed(trunc_ln246_fu_2260_p1);

assign sext_ln246_2_fu_2274_p1 = $signed(add_ln246_fu_2268_p2);

assign sext_ln246_3_fu_2296_p1 = $signed(add_ln246_1_reg_2564);

assign sext_ln246_fu_2256_p1 = $signed(tmp_20_fu_2246_p4);

assign shl_ln240_1_fu_2131_p3 = {{trunc_ln240_fu_2095_p1}, {2'd0}};

assign shl_ln240_fu_2111_p2 = j_2_reg_465 << 4'd1;

assign shl_ln_fu_2099_p3 = {{trunc_ln240_fu_2095_p1}, {3'd0}};

assign sub_ln218_fu_1949_p2 = ($signed(6'd56) - $signed(PC2_q0));

assign sub_ln229_fu_2023_p2 = ($signed(6'd32) - $signed(E_q0));

assign sub_ln232_fu_2012_p2 = (5'd15 - i_3_reg_430);

assign sub_ln240_1_fu_2143_p2 = ($signed(6'd42) - $signed(zext_ln240_1_fu_2117_p1));

assign sub_ln240_2_fu_2149_p2 = (sub_ln240_1_fu_2143_p2 - zext_ln240_5_fu_2139_p1);

assign sub_ln240_fu_2125_p2 = (zext_ln240_fu_2107_p1 - zext_ln240_2_fu_2121_p1);

assign sub_ln243_1_fu_2161_p2 = (sub_ln243_fu_2155_p2 - zext_ln240_5_fu_2139_p1);

assign sub_ln243_fu_2155_p2 = ($signed(6'd43) - $signed(zext_ln240_1_fu_2117_p1));

assign sub_ln254_fu_2344_p2 = ($signed(6'd32) - $signed(P_q0));

assign sub_ln270_fu_2392_p2 = ($signed(7'd64) - $signed(PI_q0));

assign tmp_100_fu_1406_p3 = key[32'd9];

assign tmp_101_fu_1414_p3 = key[32'd17];

assign tmp_102_fu_1422_p3 = key[32'd25];

assign tmp_103_fu_1430_p3 = key[32'd33];

assign tmp_104_fu_1438_p3 = key[32'd41];

assign tmp_105_fu_1446_p3 = key[32'd49];

assign tmp_106_fu_1454_p3 = key[32'd57];

assign tmp_107_fu_1462_p3 = key[32'd2];

assign tmp_108_fu_1470_p3 = key[32'd10];

assign tmp_109_fu_1478_p3 = key[32'd18];

assign tmp_10_fu_594_p3 = input_r[32'd4];

assign tmp_110_fu_1486_p3 = key[32'd26];

assign tmp_111_fu_1494_p3 = key[32'd34];

assign tmp_112_fu_1502_p3 = key[32'd42];

assign tmp_113_fu_1510_p3 = key[32'd50];

assign tmp_114_fu_1518_p3 = key[32'd58];

assign tmp_115_fu_1526_p3 = key[32'd3];

assign tmp_116_fu_1534_p3 = key[32'd11];

assign tmp_117_fu_1542_p3 = key[32'd19];

assign tmp_118_fu_1550_p3 = key[32'd27];

assign tmp_119_fu_1558_p3 = key[32'd35];

assign tmp_11_fu_1920_p3 = {{C_1_fu_264}, {D_1_fu_268}};

assign tmp_120_fu_1566_p3 = key[32'd43];

assign tmp_121_fu_1574_p3 = key[32'd51];

assign tmp_122_fu_1582_p3 = key[32'd59];

assign tmp_123_fu_1590_p3 = key[32'd36];

assign tmp_124_fu_1598_p3 = key[32'd44];

assign tmp_125_fu_1606_p3 = key[32'd52];

assign tmp_126_fu_1614_p3 = key[32'd60];

assign tmp_127_fu_1860_p3 = C_1_fu_264[32'd27];

assign tmp_128_fu_1880_p3 = D_1_fu_268[32'd27];

assign tmp_129_fu_2202_p3 = lshr_ln240_1_fu_2192_p2[32'd4];

assign tmp_12_fu_602_p3 = input_r[32'd12];

assign tmp_13_fu_610_p3 = input_r[32'd20];

assign tmp_14_fu_618_p3 = input_r[32'd28];

assign tmp_15_fu_2216_p4 = {{lshr_ln240_1_fu_2192_p2[7:5]}};

assign tmp_16_fu_626_p3 = input_r[32'd36];

assign tmp_17_fu_1832_p4 = {{D_1_fu_268[27:26]}};

assign tmp_18_fu_634_p3 = input_r[32'd44];

assign tmp_19_fu_642_p3 = input_r[32'd52];

assign tmp_20_fu_2246_p4 = {{{tmp_15_fu_2216_p4}, {or_ln241_fu_2210_p2}}, {4'd0}};

assign tmp_21_fu_650_p3 = input_r[32'd60];

assign tmp_22_fu_658_p3 = input_r[32'd2];

assign tmp_23_fu_666_p3 = input_r[32'd10];

assign tmp_24_fu_2278_p3 = {{j_2_reg_465}, {6'd0}};

assign tmp_26_fu_674_p3 = input_r[32'd18];

assign tmp_27_fu_682_p3 = input_r[32'd26];

assign tmp_28_fu_690_p3 = input_r[32'd34];

assign tmp_29_fu_698_p3 = input_r[32'd42];

assign tmp_2_fu_530_p3 = input_r[32'd14];

assign tmp_30_fu_706_p3 = input_r[32'd50];

assign tmp_31_fu_714_p3 = input_r[32'd58];

assign tmp_32_fu_726_p3 = input_r[32'd8];

assign tmp_33_fu_734_p3 = input_r[32'd16];

assign tmp_34_fu_742_p3 = input_r[32'd24];

assign tmp_35_fu_750_p3 = input_r[32'd32];

assign tmp_36_fu_758_p3 = input_r[32'd40];

assign tmp_37_fu_766_p3 = input_r[32'd48];

assign tmp_38_fu_774_p3 = input_r[32'd56];

assign tmp_39_fu_782_p3 = input_r[32'd7];

assign tmp_3_fu_538_p3 = input_r[32'd6];

assign tmp_40_fu_790_p3 = input_r[32'd15];

assign tmp_41_fu_798_p3 = input_r[32'd23];

assign tmp_42_fu_806_p3 = input_r[32'd31];

assign tmp_43_fu_814_p3 = input_r[32'd39];

assign tmp_44_fu_822_p3 = input_r[32'd47];

assign tmp_45_fu_830_p3 = input_r[32'd55];

assign tmp_46_fu_838_p3 = input_r[32'd63];

assign tmp_47_fu_846_p3 = input_r[32'd5];

assign tmp_48_fu_854_p3 = input_r[32'd13];

assign tmp_49_fu_862_p3 = input_r[32'd21];

assign tmp_4_fu_546_p3 = input_r[32'd22];

assign tmp_50_fu_870_p3 = input_r[32'd29];

assign tmp_51_fu_878_p3 = input_r[32'd37];

assign tmp_52_fu_886_p3 = input_r[32'd45];

assign tmp_53_fu_894_p3 = input_r[32'd53];

assign tmp_54_fu_902_p3 = input_r[32'd61];

assign tmp_55_fu_910_p3 = input_r[32'd3];

assign tmp_56_fu_918_p3 = input_r[32'd11];

assign tmp_57_fu_926_p3 = input_r[32'd19];

assign tmp_58_fu_934_p3 = input_r[32'd27];

assign tmp_59_fu_942_p3 = input_r[32'd35];

assign tmp_5_fu_554_p3 = input_r[32'd30];

assign tmp_60_fu_950_p3 = input_r[32'd43];

assign tmp_61_fu_958_p3 = input_r[32'd51];

assign tmp_62_fu_966_p3 = input_r[32'd59];

assign tmp_63_fu_974_p3 = input_r[32'd1];

assign tmp_64_fu_982_p3 = input_r[32'd9];

assign tmp_65_fu_990_p3 = input_r[32'd17];

assign tmp_66_fu_998_p3 = input_r[32'd25];

assign tmp_67_fu_1006_p3 = input_r[32'd33];

assign tmp_68_fu_1014_p3 = input_r[32'd41];

assign tmp_69_fu_1022_p3 = input_r[32'd49];

assign tmp_6_fu_562_p3 = input_r[32'd38];

assign tmp_70_fu_1030_p3 = input_r[32'd57];

assign tmp_71_fu_1174_p3 = key[32'd6];

assign tmp_72_fu_1182_p3 = key[32'd15];

assign tmp_73_fu_1190_p3 = key[32'd7];

assign tmp_74_fu_1198_p3 = key[32'd23];

assign tmp_75_fu_1206_p3 = key[32'd31];

assign tmp_76_fu_1214_p3 = key[32'd39];

assign tmp_77_fu_1222_p3 = key[32'd47];

assign tmp_78_fu_1230_p3 = key[32'd55];

assign tmp_79_fu_1238_p3 = key[32'd63];

assign tmp_7_fu_570_p3 = input_r[32'd46];

assign tmp_80_fu_1246_p3 = key[32'd14];

assign tmp_81_fu_1254_p3 = key[32'd22];

assign tmp_82_fu_1262_p3 = key[32'd30];

assign tmp_83_fu_1270_p3 = key[32'd38];

assign tmp_84_fu_1278_p3 = key[32'd46];

assign tmp_85_fu_1286_p3 = key[32'd54];

assign tmp_86_fu_1294_p3 = key[32'd62];

assign tmp_87_fu_1302_p3 = key[32'd5];

assign tmp_88_fu_1310_p3 = key[32'd13];

assign tmp_89_fu_1318_p3 = key[32'd21];

assign tmp_8_fu_578_p3 = input_r[32'd54];

assign tmp_90_fu_1326_p3 = key[32'd29];

assign tmp_91_fu_1334_p3 = key[32'd37];

assign tmp_92_fu_1342_p3 = key[32'd45];

assign tmp_93_fu_1350_p3 = key[32'd53];

assign tmp_94_fu_1358_p3 = key[32'd61];

assign tmp_95_fu_1366_p3 = key[32'd4];

assign tmp_96_fu_1374_p3 = key[32'd12];

assign tmp_97_fu_1382_p3 = key[32'd20];

assign tmp_98_fu_1390_p3 = key[32'd28];

assign tmp_99_fu_1398_p3 = key[32'd1];

assign tmp_9_fu_586_p3 = input_r[32'd62];

assign tmp_s_fu_1810_p4 = {{C_1_fu_264[27:26]}};

assign trunc_ln174_fu_722_p1 = input_r[0:0];

assign trunc_ln197_fu_1868_p1 = C_1_fu_264[26:0];

assign trunc_ln198_fu_1888_p1 = D_1_fu_268[26:0];

assign trunc_ln203_fu_1806_p1 = C_1_fu_264[25:0];

assign trunc_ln204_fu_1828_p1 = D_1_fu_268[25:0];

assign trunc_ln218_1_fu_1945_p1 = sub_key_load_1_reg_386[62:0];

assign trunc_ln218_fu_1964_p1 = lshr_ln218_fu_1959_p2[0:0];

assign trunc_ln229_1_fu_2043_p1 = s_input_0_reg_442[62:0];

assign trunc_ln229_fu_2039_p1 = lshr_ln229_fu_2033_p2[0:0];

assign trunc_ln232_1_fu_2059_p1 = sub_key_q0[47:0];

assign trunc_ln232_2_fu_2063_p1 = s_input_0_reg_442[46:0];

assign trunc_ln232_3_fu_2067_p1 = sub_key_q0[46:0];

assign trunc_ln232_fu_2055_p1 = s_input_0_reg_442[47:0];

assign trunc_ln240_1_fu_2198_p1 = lshr_ln240_1_fu_2192_p2[0:0];

assign trunc_ln240_fu_2095_p1 = j_2_reg_465[2:0];

assign trunc_ln246_1_fu_2300_p1 = s_output_1_fu_276[27:0];

assign trunc_ln246_fu_2260_p1 = lshr_ln243_1_fu_2240_p2[7:0];

assign trunc_ln254_1_fu_2334_p1 = f_function_res_0_reg_477[30:0];

assign trunc_ln254_fu_2360_p1 = lshr_ln254_fu_2354_p2[0:0];

assign trunc_ln270_1_fu_2388_p1 = inv_init_perm_res_0_reg_510[62:0];

assign trunc_ln270_fu_2407_p1 = lshr_ln270_fu_2402_p2[0:0];

assign xor_ln232_1_fu_2077_p2 = (trunc_ln232_fu_2055_p1 ^ trunc_ln232_1_fu_2059_p1);

assign xor_ln232_fu_2071_p2 = (trunc_ln232_3_fu_2067_p1 ^ trunc_ln232_2_fu_2063_p1);

assign zext_ln214_fu_1910_p1 = i_2_reg_375;

assign zext_ln218_1_fu_1955_p1 = sub_ln218_fu_1949_p2;

assign zext_ln218_fu_1940_p1 = j_0_reg_398;

assign zext_ln229_1_fu_2029_p1 = sub_ln229_fu_2023_p2;

assign zext_ln229_fu_2007_p1 = j_1_reg_454;

assign zext_ln232_fu_2018_p1 = sub_ln232_fu_2012_p2;

assign zext_ln240_1_fu_2117_p1 = shl_ln240_fu_2111_p2;

assign zext_ln240_2_fu_2121_p1 = shl_ln240_fu_2111_p2;

assign zext_ln240_3_fu_2170_p1 = $unsigned(sext_ln240_fu_2167_p1);

assign zext_ln240_4_fu_2174_p1 = $unsigned(sext_ln240_fu_2167_p1);

assign zext_ln240_5_fu_2139_p1 = shl_ln240_1_fu_2131_p3;

assign zext_ln240_6_fu_2189_p1 = sub_ln240_2_reg_2554;

assign zext_ln240_fu_2107_p1 = shl_ln_fu_2099_p3;

assign zext_ln243_fu_2237_p1 = sub_ln243_1_reg_2559;

assign zext_ln246_fu_2286_p1 = tmp_24_fu_2278_p3;

assign zext_ln254_1_fu_2350_p1 = sub_ln254_fu_2344_p2;

assign zext_ln254_fu_2329_p1 = j_3_reg_488;

assign zext_ln270_1_fu_2383_p1 = i_4_reg_499;

assign zext_ln270_fu_2398_p1 = sub_ln270_fu_2392_p2;

always @ (posedge ap_clk) begin
    sub_ln240_reg_2549[0] <= 1'b0;
    sub_ln240_2_reg_2554[0] <= 1'b0;
    sub_ln243_1_reg_2559[0] <= 1'b1;
end

endmodule //des_dec

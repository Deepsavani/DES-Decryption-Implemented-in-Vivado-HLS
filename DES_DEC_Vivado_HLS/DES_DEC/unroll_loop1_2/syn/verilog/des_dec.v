// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="des_dec,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a35tl-cpg236-2L,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.689625,HLS_SYN_LAT=4878,HLS_SYN_TPT=none,HLS_SYN_MEM=3,HLS_SYN_DSP=0,HLS_SYN_FF=1585,HLS_SYN_LUT=13727,HLS_VERSION=2019_1}" *)

module des_dec (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r,
        key,
        ap_return
);

parameter    ap_ST_fsm_state1 = 23'd1;
parameter    ap_ST_fsm_state2 = 23'd2;
parameter    ap_ST_fsm_state3 = 23'd4;
parameter    ap_ST_fsm_state4 = 23'd8;
parameter    ap_ST_fsm_state5 = 23'd16;
parameter    ap_ST_fsm_state6 = 23'd32;
parameter    ap_ST_fsm_state7 = 23'd64;
parameter    ap_ST_fsm_state8 = 23'd128;
parameter    ap_ST_fsm_state9 = 23'd256;
parameter    ap_ST_fsm_state10 = 23'd512;
parameter    ap_ST_fsm_state11 = 23'd1024;
parameter    ap_ST_fsm_state12 = 23'd2048;
parameter    ap_ST_fsm_state13 = 23'd4096;
parameter    ap_ST_fsm_state14 = 23'd8192;
parameter    ap_ST_fsm_state15 = 23'd16384;
parameter    ap_ST_fsm_state16 = 23'd32768;
parameter    ap_ST_fsm_state17 = 23'd65536;
parameter    ap_ST_fsm_state18 = 23'd131072;
parameter    ap_ST_fsm_state19 = 23'd262144;
parameter    ap_ST_fsm_state20 = 23'd524288;
parameter    ap_ST_fsm_state21 = 23'd1048576;
parameter    ap_ST_fsm_state22 = 23'd2097152;
parameter    ap_ST_fsm_state23 = 23'd4194304;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] input_r;
input  [63:0] key;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [22:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [5:0] IP_address0;
reg    IP_ce0;
wire   [6:0] IP_q0;
wire   [5:0] IP_address1;
reg    IP_ce1;
wire   [6:0] IP_q1;
wire   [5:0] IP_address2;
reg    IP_ce2;
wire   [6:0] IP_q2;
wire   [5:0] IP_address3;
reg    IP_ce3;
wire   [6:0] IP_q3;
wire   [5:0] IP_address4;
reg    IP_ce4;
wire   [6:0] IP_q4;
wire   [5:0] IP_address5;
reg    IP_ce5;
wire   [6:0] IP_q5;
wire   [5:0] IP_address6;
reg    IP_ce6;
wire   [6:0] IP_q6;
wire   [5:0] IP_address7;
reg    IP_ce7;
wire   [6:0] IP_q7;
wire   [5:0] IP_address8;
reg    IP_ce8;
wire   [6:0] IP_q8;
wire   [5:0] IP_address9;
reg    IP_ce9;
wire   [6:0] IP_q9;
wire   [5:0] IP_address10;
reg    IP_ce10;
wire   [6:0] IP_q10;
wire   [5:0] IP_address11;
reg    IP_ce11;
wire   [6:0] IP_q11;
wire   [5:0] IP_address12;
reg    IP_ce12;
wire   [6:0] IP_q12;
wire   [5:0] IP_address13;
reg    IP_ce13;
wire   [6:0] IP_q13;
wire   [5:0] IP_address14;
reg    IP_ce14;
wire   [6:0] IP_q14;
wire   [5:0] IP_address15;
reg    IP_ce15;
wire   [6:0] IP_q15;
wire   [5:0] IP_address16;
reg    IP_ce16;
wire   [6:0] IP_q16;
wire   [5:0] IP_address17;
reg    IP_ce17;
wire   [6:0] IP_q17;
wire   [5:0] IP_address18;
reg    IP_ce18;
wire   [6:0] IP_q18;
wire   [5:0] IP_address19;
reg    IP_ce19;
wire   [6:0] IP_q19;
wire   [5:0] IP_address20;
reg    IP_ce20;
wire   [6:0] IP_q20;
wire   [5:0] IP_address21;
reg    IP_ce21;
wire   [6:0] IP_q21;
wire   [5:0] IP_address22;
reg    IP_ce22;
wire   [6:0] IP_q22;
wire   [5:0] IP_address23;
reg    IP_ce23;
wire   [6:0] IP_q23;
wire   [5:0] IP_address24;
reg    IP_ce24;
wire   [6:0] IP_q24;
wire   [5:0] IP_address25;
reg    IP_ce25;
wire   [6:0] IP_q25;
wire   [5:0] IP_address26;
reg    IP_ce26;
wire   [6:0] IP_q26;
wire   [5:0] IP_address27;
reg    IP_ce27;
wire   [6:0] IP_q27;
wire   [5:0] IP_address28;
reg    IP_ce28;
wire   [6:0] IP_q28;
wire   [5:0] IP_address29;
reg    IP_ce29;
wire   [6:0] IP_q29;
wire   [5:0] IP_address30;
reg    IP_ce30;
wire   [6:0] IP_q30;
wire   [5:0] IP_address31;
reg    IP_ce31;
wire   [6:0] IP_q31;
reg   [5:0] PC1_address0;
reg    PC1_ce0;
wire   [5:0] PC1_q0;
wire   [5:0] PC1_address1;
reg    PC1_ce1;
wire   [5:0] PC1_q1;
wire   [5:0] PC1_address2;
reg    PC1_ce2;
wire   [5:0] PC1_q2;
wire   [5:0] PC1_address3;
reg    PC1_ce3;
wire   [5:0] PC1_q3;
wire   [5:0] PC1_address4;
reg    PC1_ce4;
wire   [5:0] PC1_q4;
wire   [5:0] PC1_address5;
reg    PC1_ce5;
wire   [5:0] PC1_q5;
wire   [5:0] PC1_address6;
reg    PC1_ce6;
wire   [5:0] PC1_q6;
wire   [5:0] PC1_address7;
reg    PC1_ce7;
wire   [5:0] PC1_q7;
wire   [5:0] PC1_address8;
reg    PC1_ce8;
wire   [5:0] PC1_q8;
wire   [5:0] PC1_address9;
reg    PC1_ce9;
wire   [5:0] PC1_q9;
wire   [5:0] PC1_address10;
reg    PC1_ce10;
wire   [5:0] PC1_q10;
wire   [5:0] PC1_address11;
reg    PC1_ce11;
wire   [5:0] PC1_q11;
wire   [5:0] PC1_address12;
reg    PC1_ce12;
wire   [5:0] PC1_q12;
wire   [5:0] PC1_address13;
reg    PC1_ce13;
wire   [5:0] PC1_q13;
wire   [5:0] PC1_address14;
reg    PC1_ce14;
wire   [5:0] PC1_q14;
wire   [5:0] PC1_address15;
reg    PC1_ce15;
wire   [5:0] PC1_q15;
wire   [5:0] PC1_address16;
reg    PC1_ce16;
wire   [5:0] PC1_q16;
wire   [5:0] PC1_address17;
reg    PC1_ce17;
wire   [5:0] PC1_q17;
wire   [5:0] PC1_address18;
reg    PC1_ce18;
wire   [5:0] PC1_q18;
wire   [5:0] PC1_address19;
reg    PC1_ce19;
wire   [5:0] PC1_q19;
wire   [5:0] PC1_address20;
reg    PC1_ce20;
wire   [5:0] PC1_q20;
wire   [5:0] PC1_address21;
reg    PC1_ce21;
wire   [5:0] PC1_q21;
wire   [5:0] PC1_address22;
reg    PC1_ce22;
wire   [5:0] PC1_q22;
wire   [5:0] PC1_address23;
reg    PC1_ce23;
wire   [5:0] PC1_q23;
wire   [5:0] PC2_address0;
reg    PC2_ce0;
wire   [5:0] PC2_q0;
wire   [5:0] E_address0;
reg    E_ce0;
wire   [5:0] E_q0;
wire   [8:0] S_address0;
reg    S_ce0;
wire   [3:0] S_q0;
wire   [4:0] P_address0;
reg    P_ce0;
wire   [5:0] P_q0;
wire   [5:0] PI_address0;
reg    PI_ce0;
wire   [6:0] PI_q0;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln171_fu_1237_p2;
wire   [31:0] trunc_ln173_fu_1555_p1;
reg   [31:0] trunc_ln173_reg_4193;
wire   [6:0] add_ln171_fu_1597_p2;
reg   [6:0] add_ln171_reg_4218;
reg   [31:0] L_reg_4223;
wire   [31:0] R_fu_1613_p1;
reg   [31:0] R_reg_4228;
reg   [0:0] tmp_1_reg_4233;
reg   [0:0] tmp_5_reg_4238;
reg   [0:0] tmp_6_reg_4243;
reg   [0:0] tmp_7_reg_4248;
reg   [0:0] tmp_8_reg_4253;
reg   [0:0] tmp_10_reg_4258;
reg   [0:0] tmp_11_reg_4263;
wire   [63:0] or_ln_fu_2274_p34;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire   [0:0] trunc_ln184_fu_2620_p1;
reg   [0:0] trunc_ln184_reg_4393;
wire    ap_CS_fsm_state5;
wire   [0:0] trunc_ln184_1_fu_2643_p1;
reg   [0:0] trunc_ln184_1_reg_4399;
wire   [0:0] trunc_ln184_2_fu_2666_p1;
reg   [0:0] trunc_ln184_2_reg_4405;
wire   [0:0] trunc_ln184_3_fu_2689_p1;
reg   [0:0] trunc_ln184_3_reg_4411;
wire   [0:0] trunc_ln184_4_fu_2712_p1;
reg   [0:0] trunc_ln184_4_reg_4417;
wire   [0:0] trunc_ln184_5_fu_2735_p1;
reg   [0:0] trunc_ln184_5_reg_4423;
wire   [0:0] trunc_ln182_fu_2758_p1;
reg   [0:0] trunc_ln182_reg_4429;
wire   [0:0] trunc_ln184_6_fu_2781_p1;
reg   [0:0] trunc_ln184_6_reg_4435;
wire   [0:0] trunc_ln184_7_fu_2804_p1;
reg   [0:0] trunc_ln184_7_reg_4441;
wire   [0:0] trunc_ln184_8_fu_2827_p1;
reg   [0:0] trunc_ln184_8_reg_4447;
wire   [0:0] trunc_ln184_9_fu_2850_p1;
reg   [0:0] trunc_ln184_9_reg_4453;
wire   [0:0] trunc_ln184_10_fu_2873_p1;
reg   [0:0] trunc_ln184_10_reg_4459;
wire   [0:0] trunc_ln184_11_fu_2896_p1;
reg   [0:0] trunc_ln184_11_reg_4465;
wire   [0:0] trunc_ln184_12_fu_2919_p1;
reg   [0:0] trunc_ln184_12_reg_4471;
wire   [0:0] trunc_ln182_1_fu_2942_p1;
reg   [0:0] trunc_ln182_1_reg_4477;
wire   [0:0] trunc_ln182_2_fu_2965_p1;
reg   [0:0] trunc_ln182_2_reg_4483;
wire   [0:0] trunc_ln184_13_fu_2988_p1;
reg   [0:0] trunc_ln184_13_reg_4489;
wire   [0:0] trunc_ln184_14_fu_3011_p1;
reg   [0:0] trunc_ln184_14_reg_4495;
wire   [0:0] trunc_ln184_15_fu_3034_p1;
reg   [0:0] trunc_ln184_15_reg_4501;
wire   [0:0] trunc_ln184_16_fu_3057_p1;
reg   [0:0] trunc_ln184_16_reg_4507;
wire   [0:0] trunc_ln184_17_fu_3080_p1;
reg   [0:0] trunc_ln184_17_reg_4513;
wire   [0:0] trunc_ln182_3_fu_3103_p1;
reg   [0:0] trunc_ln182_3_reg_4519;
wire   [0:0] trunc_ln184_18_fu_3126_p1;
reg   [0:0] trunc_ln184_18_reg_4525;
wire   [0:0] trunc_ln184_20_fu_3161_p1;
reg   [0:0] trunc_ln184_20_reg_4534;
wire   [0:0] icmp_ln182_fu_3155_p2;
reg   [28:0] tmp_4_reg_4544;
wire   [5:0] xor_ln182_fu_3180_p2;
reg   [5:0] xor_ln182_reg_4549;
wire   [0:0] trunc_ln184_19_fu_3186_p1;
reg   [0:0] trunc_ln184_19_reg_4570;
reg   [3:0] tmp_3_reg_4575;
wire   [61:0] shl_ln_fu_3238_p35;
wire    ap_CS_fsm_state6;
wire   [4:0] i_1_fu_3318_p2;
reg   [4:0] i_1_reg_4588;
wire    ap_CS_fsm_state8;
reg   [3:0] sub_key_addr_reg_4596;
wire   [0:0] icmp_ln192_fu_3312_p2;
wire   [55:0] tmp_9_fu_3480_p3;
reg   [55:0] tmp_9_reg_4608;
wire    ap_CS_fsm_state9;
wire   [5:0] j_4_fu_3494_p2;
reg   [5:0] j_4_reg_4616;
wire    ap_CS_fsm_state10;
wire   [0:0] icmp_ln216_fu_3488_p2;
wire   [62:0] trunc_ln218_1_fu_3505_p1;
reg   [62:0] trunc_ln218_1_reg_4626;
wire   [63:0] or_ln1_fu_3528_p3;
wire    ap_CS_fsm_state11;
wire   [4:0] i_5_fu_3541_p2;
reg   [4:0] i_5_reg_4639;
wire    ap_CS_fsm_state12;
wire   [63:0] pre_output_fu_3547_p3;
reg   [63:0] pre_output_reg_4644;
wire   [0:0] icmp_ln223_fu_3535_p2;
wire   [5:0] j_fu_3561_p2;
reg   [5:0] j_reg_4652;
wire    ap_CS_fsm_state13;
wire   [0:0] icmp_ln227_fu_3555_p2;
wire   [63:0] s_input_fu_3607_p3;
wire    ap_CS_fsm_state14;
wire   [46:0] xor_ln232_fu_3631_p2;
reg   [46:0] xor_ln232_reg_4672;
wire    ap_CS_fsm_state15;
wire   [47:0] xor_ln232_1_fu_3637_p2;
reg   [47:0] xor_ln232_1_reg_4677;
wire   [3:0] j_5_fu_3649_p2;
reg   [3:0] j_5_reg_4685;
wire    ap_CS_fsm_state16;
wire   [6:0] sub_ln240_fu_3685_p2;
reg   [6:0] sub_ln240_reg_4690;
wire   [0:0] icmp_ln235_fu_3643_p2;
wire   [5:0] sub_ln240_2_fu_3709_p2;
reg   [5:0] sub_ln240_2_reg_4695;
wire   [5:0] sub_ln243_1_fu_3721_p2;
reg   [5:0] sub_ln243_1_reg_4700;
wire   [10:0] add_ln246_1_fu_3850_p2;
reg   [10:0] add_ln246_1_reg_4705;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire   [5:0] j_6_fu_3883_p2;
reg   [5:0] j_6_reg_4718;
wire    ap_CS_fsm_state20;
wire   [0:0] icmp_ln252_fu_3877_p2;
wire   [30:0] trunc_ln254_1_fu_3894_p1;
reg   [30:0] trunc_ln254_1_reg_4728;
wire   [31:0] R_1_fu_3898_p2;
wire   [31:0] f_function_res_fu_3924_p3;
wire    ap_CS_fsm_state21;
wire   [6:0] i_fu_3937_p2;
reg   [6:0] i_reg_4746;
wire    ap_CS_fsm_state22;
wire   [0:0] icmp_ln267_fu_3931_p2;
wire   [62:0] trunc_ln270_1_fu_3948_p1;
reg   [62:0] trunc_ln270_1_reg_4756;
wire   [63:0] inv_init_perm_res_fu_3971_p3;
wire    ap_CS_fsm_state23;
reg   [3:0] sub_key_address0;
reg    sub_key_ce0;
reg    sub_key_we0;
wire   [63:0] sub_key_q0;
reg   [63:0] init_perm_res_0_0_reg_1037;
reg   [6:0] i_0_0_reg_1048;
reg   [5:0] i_1_0_reg_1059;
reg   [61:0] phi_ln183_reg_1071;
reg   [4:0] i_2_reg_1082;
wire    ap_CS_fsm_state7;
reg   [63:0] sub_key_load_1_reg_1093;
reg   [5:0] j_0_reg_1105;
reg   [31:0] temp_reg_1116;
reg   [31:0] L_0_reg_1126;
reg   [4:0] i_3_reg_1137;
reg   [63:0] s_input_0_reg_1149;
reg   [5:0] j_1_reg_1161;
reg   [3:0] j_2_reg_1172;
wire    ap_CS_fsm_state19;
reg   [31:0] f_function_res_0_reg_1184;
reg   [5:0] j_3_reg_1195;
reg   [6:0] i_4_reg_1206;
reg   [63:0] inv_init_perm_res_0_reg_1217;
wire   [63:0] zext_ln174_fu_1243_p1;
wire   [63:0] zext_ln174_33_fu_1258_p1;
wire   [63:0] zext_ln174_34_fu_1269_p1;
wire   [63:0] zext_ln174_35_fu_1280_p1;
wire   [63:0] zext_ln174_36_fu_1291_p1;
wire   [63:0] zext_ln174_37_fu_1302_p1;
wire   [63:0] zext_ln174_38_fu_1313_p1;
wire   [63:0] zext_ln174_39_fu_1324_p1;
wire   [63:0] zext_ln174_40_fu_1335_p1;
wire   [63:0] zext_ln174_41_fu_1346_p1;
wire   [63:0] zext_ln174_42_fu_1357_p1;
wire   [63:0] zext_ln174_43_fu_1368_p1;
wire   [63:0] zext_ln174_44_fu_1379_p1;
wire   [63:0] zext_ln174_45_fu_1390_p1;
wire   [63:0] zext_ln174_46_fu_1401_p1;
wire   [63:0] zext_ln174_47_fu_1412_p1;
wire   [63:0] zext_ln174_48_fu_1423_p1;
wire   [63:0] zext_ln174_49_fu_1434_p1;
wire   [63:0] zext_ln174_50_fu_1445_p1;
wire   [63:0] zext_ln174_51_fu_1456_p1;
wire   [63:0] zext_ln174_52_fu_1467_p1;
wire   [63:0] zext_ln174_53_fu_1478_p1;
wire   [63:0] zext_ln174_54_fu_1489_p1;
wire   [63:0] zext_ln174_55_fu_1500_p1;
wire   [63:0] zext_ln174_56_fu_1511_p1;
wire   [63:0] zext_ln174_57_fu_1522_p1;
wire   [63:0] zext_ln174_58_fu_1533_p1;
wire   [63:0] zext_ln174_59_fu_1544_p1;
wire   [63:0] zext_ln174_60_fu_1559_p1;
wire   [63:0] zext_ln174_61_fu_1570_p1;
wire   [63:0] zext_ln174_62_fu_1581_p1;
wire   [63:0] zext_ln174_63_fu_1592_p1;
wire   [63:0] zext_ln184_fu_2343_p1;
wire   [63:0] zext_ln184_27_fu_2354_p1;
wire   [63:0] zext_ln184_29_fu_2365_p1;
wire   [63:0] zext_ln184_31_fu_2376_p1;
wire   [63:0] zext_ln184_33_fu_2387_p1;
wire   [63:0] zext_ln184_35_fu_2398_p1;
wire   [63:0] zext_ln184_37_fu_2409_p1;
wire   [63:0] zext_ln184_39_fu_2420_p1;
wire   [63:0] zext_ln184_41_fu_2431_p1;
wire   [63:0] zext_ln184_43_fu_2442_p1;
wire   [63:0] zext_ln184_45_fu_2453_p1;
wire   [63:0] zext_ln184_47_fu_2464_p1;
wire   [63:0] zext_ln184_49_fu_2475_p1;
wire   [63:0] zext_ln184_51_fu_2486_p1;
wire   [63:0] zext_ln184_53_fu_2497_p1;
wire   [63:0] zext_ln184_55_fu_2508_p1;
wire   [63:0] zext_ln184_57_fu_2519_p1;
wire   [63:0] zext_ln184_59_fu_2530_p1;
wire   [63:0] zext_ln184_61_fu_2541_p1;
wire   [63:0] zext_ln184_63_fu_2552_p1;
wire   [63:0] zext_ln184_65_fu_2563_p1;
wire   [63:0] zext_ln184_67_fu_2574_p1;
wire   [63:0] zext_ln184_69_fu_2585_p1;
wire   [63:0] zext_ln184_71_fu_2596_p1;
wire   [63:0] zext_ln184_73_fu_3165_p1;
wire   [63:0] zext_ln214_fu_3470_p1;
wire   [63:0] zext_ln218_fu_3500_p1;
wire   [63:0] zext_ln229_fu_3567_p1;
wire   [63:0] zext_ln232_fu_3578_p1;
wire  signed [63:0] sext_ln246_3_fu_3856_p1;
wire   [63:0] zext_ln254_fu_3889_p1;
wire   [63:0] zext_ln270_1_fu_3943_p1;
reg   [27:0] C_1_fu_248;
wire   [27:0] C_2_fu_3380_p3;
wire   [0:0] empty_20_fu_3360_p2;
wire   [27:0] C_3_fu_3432_p3;
reg   [27:0] D_1_fu_252;
wire   [27:0] D_fu_3278_p26;
wire   [27:0] D_2_fu_3402_p3;
wire   [27:0] D_3_fu_3452_p3;
reg   [31:0] s_output_1_fu_256;
wire   [31:0] s_output_fu_3864_p3;
wire   [5:0] empty_11_fu_1248_p1;
wire   [5:0] or_ln171_fu_1252_p2;
wire   [5:0] or_ln171_1_fu_1263_p2;
wire   [5:0] or_ln171_2_fu_1274_p2;
wire   [5:0] or_ln171_3_fu_1285_p2;
wire   [5:0] or_ln171_4_fu_1296_p2;
wire   [5:0] or_ln171_5_fu_1307_p2;
wire   [5:0] or_ln171_6_fu_1318_p2;
wire   [5:0] or_ln171_7_fu_1329_p2;
wire   [5:0] or_ln171_8_fu_1340_p2;
wire   [5:0] or_ln171_9_fu_1351_p2;
wire   [5:0] or_ln171_10_fu_1362_p2;
wire   [5:0] or_ln171_11_fu_1373_p2;
wire   [5:0] or_ln171_12_fu_1384_p2;
wire   [5:0] or_ln171_13_fu_1395_p2;
wire   [5:0] or_ln171_14_fu_1406_p2;
wire   [5:0] or_ln171_15_fu_1417_p2;
wire   [5:0] or_ln171_16_fu_1428_p2;
wire   [5:0] or_ln171_17_fu_1439_p2;
wire   [5:0] or_ln171_18_fu_1450_p2;
wire   [5:0] or_ln171_19_fu_1461_p2;
wire   [5:0] or_ln171_20_fu_1472_p2;
wire   [5:0] or_ln171_21_fu_1483_p2;
wire   [5:0] or_ln171_22_fu_1494_p2;
wire   [5:0] or_ln171_23_fu_1505_p2;
wire   [5:0] or_ln171_24_fu_1516_p2;
wire   [5:0] or_ln171_25_fu_1527_p2;
wire   [5:0] or_ln171_26_fu_1538_p2;
wire   [5:0] or_ln171_27_fu_1549_p2;
wire   [5:0] or_ln171_28_fu_1564_p2;
wire   [5:0] or_ln171_29_fu_1575_p2;
wire   [5:0] or_ln171_30_fu_1586_p2;
wire   [6:0] sub_ln174_fu_1666_p2;
wire   [63:0] zext_ln174_32_fu_1672_p1;
wire   [63:0] lshr_ln174_fu_1676_p2;
wire   [6:0] sub_ln174_1_fu_1685_p2;
wire   [63:0] zext_ln174_1_fu_1691_p1;
wire   [63:0] lshr_ln174_1_fu_1695_p2;
wire   [6:0] sub_ln174_2_fu_1704_p2;
wire   [63:0] zext_ln174_2_fu_1710_p1;
wire   [63:0] lshr_ln174_2_fu_1714_p2;
wire   [6:0] sub_ln174_3_fu_1723_p2;
wire   [63:0] zext_ln174_3_fu_1729_p1;
wire   [63:0] lshr_ln174_3_fu_1733_p2;
wire   [6:0] sub_ln174_4_fu_1742_p2;
wire   [63:0] zext_ln174_4_fu_1748_p1;
wire   [63:0] lshr_ln174_4_fu_1752_p2;
wire   [6:0] sub_ln174_5_fu_1761_p2;
wire   [63:0] zext_ln174_5_fu_1767_p1;
wire   [63:0] lshr_ln174_5_fu_1771_p2;
wire   [6:0] sub_ln174_6_fu_1780_p2;
wire   [63:0] zext_ln174_6_fu_1786_p1;
wire   [63:0] lshr_ln174_6_fu_1790_p2;
wire   [6:0] sub_ln174_7_fu_1799_p2;
wire   [63:0] zext_ln174_7_fu_1805_p1;
wire   [63:0] lshr_ln174_7_fu_1809_p2;
wire   [6:0] sub_ln174_8_fu_1818_p2;
wire   [63:0] zext_ln174_8_fu_1824_p1;
wire   [63:0] lshr_ln174_8_fu_1828_p2;
wire   [6:0] sub_ln174_9_fu_1837_p2;
wire   [63:0] zext_ln174_9_fu_1843_p1;
wire   [63:0] lshr_ln174_9_fu_1847_p2;
wire   [6:0] sub_ln174_10_fu_1856_p2;
wire   [63:0] zext_ln174_10_fu_1862_p1;
wire   [63:0] lshr_ln174_10_fu_1866_p2;
wire   [6:0] sub_ln174_11_fu_1875_p2;
wire   [63:0] zext_ln174_11_fu_1881_p1;
wire   [63:0] lshr_ln174_11_fu_1885_p2;
wire   [6:0] sub_ln174_12_fu_1894_p2;
wire   [63:0] zext_ln174_12_fu_1900_p1;
wire   [63:0] lshr_ln174_12_fu_1904_p2;
wire   [6:0] sub_ln174_13_fu_1913_p2;
wire   [63:0] zext_ln174_13_fu_1919_p1;
wire   [63:0] lshr_ln174_13_fu_1923_p2;
wire   [6:0] sub_ln174_14_fu_1932_p2;
wire   [63:0] zext_ln174_14_fu_1938_p1;
wire   [63:0] lshr_ln174_14_fu_1942_p2;
wire   [6:0] sub_ln174_15_fu_1951_p2;
wire   [63:0] zext_ln174_15_fu_1957_p1;
wire   [63:0] lshr_ln174_15_fu_1961_p2;
wire   [6:0] sub_ln174_16_fu_1970_p2;
wire   [63:0] zext_ln174_16_fu_1976_p1;
wire   [63:0] lshr_ln174_16_fu_1980_p2;
wire   [6:0] sub_ln174_17_fu_1989_p2;
wire   [63:0] zext_ln174_17_fu_1995_p1;
wire   [63:0] lshr_ln174_17_fu_1999_p2;
wire   [6:0] sub_ln174_18_fu_2008_p2;
wire   [63:0] zext_ln174_18_fu_2014_p1;
wire   [63:0] lshr_ln174_18_fu_2018_p2;
wire   [6:0] sub_ln174_19_fu_2027_p2;
wire   [63:0] zext_ln174_19_fu_2033_p1;
wire   [63:0] lshr_ln174_19_fu_2037_p2;
wire   [6:0] sub_ln174_20_fu_2046_p2;
wire   [63:0] zext_ln174_20_fu_2052_p1;
wire   [63:0] lshr_ln174_20_fu_2056_p2;
wire   [6:0] sub_ln174_21_fu_2065_p2;
wire   [63:0] zext_ln174_21_fu_2071_p1;
wire   [63:0] lshr_ln174_21_fu_2075_p2;
wire   [6:0] sub_ln174_22_fu_2084_p2;
wire   [63:0] zext_ln174_22_fu_2090_p1;
wire   [63:0] lshr_ln174_22_fu_2094_p2;
wire   [6:0] sub_ln174_23_fu_2103_p2;
wire   [63:0] zext_ln174_23_fu_2109_p1;
wire   [63:0] lshr_ln174_23_fu_2113_p2;
wire   [6:0] sub_ln174_24_fu_2122_p2;
wire   [63:0] zext_ln174_24_fu_2128_p1;
wire   [63:0] lshr_ln174_24_fu_2132_p2;
wire   [6:0] sub_ln174_25_fu_2141_p2;
wire   [63:0] zext_ln174_25_fu_2147_p1;
wire   [63:0] lshr_ln174_25_fu_2151_p2;
wire   [6:0] sub_ln174_26_fu_2160_p2;
wire   [63:0] zext_ln174_26_fu_2166_p1;
wire   [63:0] lshr_ln174_26_fu_2170_p2;
wire   [6:0] sub_ln174_27_fu_2179_p2;
wire   [63:0] zext_ln174_27_fu_2185_p1;
wire   [63:0] lshr_ln174_27_fu_2189_p2;
wire   [6:0] sub_ln174_28_fu_2198_p2;
wire   [63:0] zext_ln174_28_fu_2204_p1;
wire   [63:0] lshr_ln174_28_fu_2208_p2;
wire   [6:0] sub_ln174_29_fu_2217_p2;
wire   [63:0] zext_ln174_29_fu_2223_p1;
wire   [63:0] lshr_ln174_29_fu_2227_p2;
wire   [6:0] sub_ln174_30_fu_2236_p2;
wire   [63:0] zext_ln174_30_fu_2242_p1;
wire   [63:0] lshr_ln174_30_fu_2246_p2;
wire   [6:0] sub_ln174_31_fu_2255_p2;
wire   [63:0] zext_ln174_31_fu_2261_p1;
wire   [63:0] lshr_ln174_31_fu_2265_p2;
wire   [0:0] trunc_ln174_fu_1681_p1;
wire   [0:0] trunc_ln174_1_fu_1700_p1;
wire   [0:0] trunc_ln174_2_fu_1719_p1;
wire   [0:0] trunc_ln174_3_fu_1738_p1;
wire   [0:0] trunc_ln174_4_fu_1757_p1;
wire   [0:0] trunc_ln174_5_fu_1776_p1;
wire   [0:0] trunc_ln174_6_fu_1795_p1;
wire   [0:0] trunc_ln174_7_fu_1814_p1;
wire   [0:0] trunc_ln174_8_fu_1833_p1;
wire   [0:0] trunc_ln174_9_fu_1852_p1;
wire   [0:0] trunc_ln174_10_fu_1871_p1;
wire   [0:0] trunc_ln174_11_fu_1890_p1;
wire   [0:0] trunc_ln174_12_fu_1909_p1;
wire   [0:0] trunc_ln174_13_fu_1928_p1;
wire   [0:0] trunc_ln174_14_fu_1947_p1;
wire   [0:0] trunc_ln174_15_fu_1966_p1;
wire   [0:0] trunc_ln174_16_fu_1985_p1;
wire   [0:0] trunc_ln174_17_fu_2004_p1;
wire   [0:0] trunc_ln174_18_fu_2023_p1;
wire   [0:0] trunc_ln174_19_fu_2042_p1;
wire   [0:0] trunc_ln174_20_fu_2061_p1;
wire   [0:0] trunc_ln174_21_fu_2080_p1;
wire   [0:0] trunc_ln174_22_fu_2099_p1;
wire   [0:0] trunc_ln174_23_fu_2118_p1;
wire   [0:0] trunc_ln174_24_fu_2137_p1;
wire   [0:0] trunc_ln174_25_fu_2156_p1;
wire   [0:0] trunc_ln174_26_fu_2175_p1;
wire   [0:0] trunc_ln174_27_fu_2194_p1;
wire   [0:0] trunc_ln174_28_fu_2213_p1;
wire   [0:0] trunc_ln171_fu_2232_p1;
wire   [0:0] trunc_ln174_29_fu_2251_p1;
wire   [0:0] trunc_ln174_30_fu_2270_p1;
wire   [5:0] or_ln182_fu_2348_p2;
wire   [5:0] or_ln182_1_fu_2359_p2;
wire   [5:0] or_ln182_2_fu_2370_p2;
wire   [5:0] or_ln182_3_fu_2381_p2;
wire   [5:0] or_ln182_4_fu_2392_p2;
wire   [5:0] or_ln182_5_fu_2403_p2;
wire   [5:0] or_ln182_6_fu_2414_p2;
wire   [5:0] or_ln182_7_fu_2425_p2;
wire   [5:0] or_ln182_8_fu_2436_p2;
wire   [5:0] or_ln182_9_fu_2447_p2;
wire   [5:0] or_ln182_10_fu_2458_p2;
wire   [5:0] or_ln182_11_fu_2469_p2;
wire   [5:0] or_ln182_12_fu_2480_p2;
wire   [5:0] or_ln182_13_fu_2491_p2;
wire   [5:0] or_ln182_14_fu_2502_p2;
wire   [5:0] or_ln182_15_fu_2513_p2;
wire   [5:0] or_ln182_16_fu_2524_p2;
wire   [5:0] or_ln182_17_fu_2535_p2;
wire   [5:0] or_ln182_18_fu_2546_p2;
wire   [5:0] or_ln182_19_fu_2557_p2;
wire   [5:0] or_ln182_20_fu_2568_p2;
wire   [5:0] or_ln182_21_fu_2579_p2;
wire   [5:0] or_ln182_22_fu_2590_p2;
wire   [6:0] zext_ln184_25_fu_2601_p1;
wire   [6:0] sub_ln184_fu_2605_p2;
wire   [63:0] zext_ln184_26_fu_2611_p1;
wire   [63:0] lshr_ln184_fu_2615_p2;
wire   [6:0] zext_ln184_28_fu_2624_p1;
wire   [6:0] sub_ln184_1_fu_2628_p2;
wire   [63:0] zext_ln184_1_fu_2634_p1;
wire   [63:0] lshr_ln184_1_fu_2638_p2;
wire   [6:0] zext_ln184_30_fu_2647_p1;
wire   [6:0] sub_ln184_2_fu_2651_p2;
wire   [63:0] zext_ln184_2_fu_2657_p1;
wire   [63:0] lshr_ln184_2_fu_2661_p2;
wire   [6:0] zext_ln184_32_fu_2670_p1;
wire   [6:0] sub_ln184_3_fu_2674_p2;
wire   [63:0] zext_ln184_3_fu_2680_p1;
wire   [63:0] lshr_ln184_3_fu_2684_p2;
wire   [6:0] zext_ln184_34_fu_2693_p1;
wire   [6:0] sub_ln184_4_fu_2697_p2;
wire   [63:0] zext_ln184_4_fu_2703_p1;
wire   [63:0] lshr_ln184_4_fu_2707_p2;
wire   [6:0] zext_ln184_36_fu_2716_p1;
wire   [6:0] sub_ln184_5_fu_2720_p2;
wire   [63:0] zext_ln184_5_fu_2726_p1;
wire   [63:0] lshr_ln184_5_fu_2730_p2;
wire   [6:0] zext_ln184_38_fu_2739_p1;
wire   [6:0] sub_ln184_6_fu_2743_p2;
wire   [63:0] zext_ln184_6_fu_2749_p1;
wire   [63:0] lshr_ln184_6_fu_2753_p2;
wire   [6:0] zext_ln184_40_fu_2762_p1;
wire   [6:0] sub_ln184_7_fu_2766_p2;
wire   [63:0] zext_ln184_7_fu_2772_p1;
wire   [63:0] lshr_ln184_7_fu_2776_p2;
wire   [6:0] zext_ln184_42_fu_2785_p1;
wire   [6:0] sub_ln184_8_fu_2789_p2;
wire   [63:0] zext_ln184_8_fu_2795_p1;
wire   [63:0] lshr_ln184_8_fu_2799_p2;
wire   [6:0] zext_ln184_44_fu_2808_p1;
wire   [6:0] sub_ln184_9_fu_2812_p2;
wire   [63:0] zext_ln184_9_fu_2818_p1;
wire   [63:0] lshr_ln184_9_fu_2822_p2;
wire   [6:0] zext_ln184_46_fu_2831_p1;
wire   [6:0] sub_ln184_10_fu_2835_p2;
wire   [63:0] zext_ln184_10_fu_2841_p1;
wire   [63:0] lshr_ln184_10_fu_2845_p2;
wire   [6:0] zext_ln184_48_fu_2854_p1;
wire   [6:0] sub_ln184_11_fu_2858_p2;
wire   [63:0] zext_ln184_11_fu_2864_p1;
wire   [63:0] lshr_ln184_11_fu_2868_p2;
wire   [6:0] zext_ln184_50_fu_2877_p1;
wire   [6:0] sub_ln184_12_fu_2881_p2;
wire   [63:0] zext_ln184_12_fu_2887_p1;
wire   [63:0] lshr_ln184_12_fu_2891_p2;
wire   [6:0] zext_ln184_52_fu_2900_p1;
wire   [6:0] sub_ln184_13_fu_2904_p2;
wire   [63:0] zext_ln184_13_fu_2910_p1;
wire   [63:0] lshr_ln184_13_fu_2914_p2;
wire   [6:0] zext_ln184_54_fu_2923_p1;
wire   [6:0] sub_ln184_14_fu_2927_p2;
wire   [63:0] zext_ln184_14_fu_2933_p1;
wire   [63:0] lshr_ln184_14_fu_2937_p2;
wire   [6:0] zext_ln184_56_fu_2946_p1;
wire   [6:0] sub_ln184_15_fu_2950_p2;
wire   [63:0] zext_ln184_15_fu_2956_p1;
wire   [63:0] lshr_ln184_15_fu_2960_p2;
wire   [6:0] zext_ln184_58_fu_2969_p1;
wire   [6:0] sub_ln184_16_fu_2973_p2;
wire   [63:0] zext_ln184_16_fu_2979_p1;
wire   [63:0] lshr_ln184_16_fu_2983_p2;
wire   [6:0] zext_ln184_60_fu_2992_p1;
wire   [6:0] sub_ln184_17_fu_2996_p2;
wire   [63:0] zext_ln184_17_fu_3002_p1;
wire   [63:0] lshr_ln184_17_fu_3006_p2;
wire   [6:0] zext_ln184_62_fu_3015_p1;
wire   [6:0] sub_ln184_18_fu_3019_p2;
wire   [63:0] zext_ln184_18_fu_3025_p1;
wire   [63:0] lshr_ln184_18_fu_3029_p2;
wire   [6:0] zext_ln184_64_fu_3038_p1;
wire   [6:0] sub_ln184_19_fu_3042_p2;
wire   [63:0] zext_ln184_19_fu_3048_p1;
wire   [63:0] lshr_ln184_19_fu_3052_p2;
wire   [6:0] zext_ln184_66_fu_3061_p1;
wire   [6:0] sub_ln184_20_fu_3065_p2;
wire   [63:0] zext_ln184_20_fu_3071_p1;
wire   [63:0] lshr_ln184_20_fu_3075_p2;
wire   [6:0] zext_ln184_68_fu_3084_p1;
wire   [6:0] sub_ln184_21_fu_3088_p2;
wire   [63:0] zext_ln184_21_fu_3094_p1;
wire   [63:0] lshr_ln184_21_fu_3098_p2;
wire   [6:0] zext_ln184_70_fu_3107_p1;
wire   [6:0] sub_ln184_22_fu_3111_p2;
wire   [63:0] zext_ln184_22_fu_3117_p1;
wire   [63:0] lshr_ln184_22_fu_3121_p2;
wire   [6:0] zext_ln184_72_fu_3130_p1;
wire   [6:0] sub_ln184_23_fu_3134_p2;
wire   [63:0] zext_ln184_23_fu_3140_p1;
wire   [5:0] or_ln182_23_fu_3149_p2;
wire   [63:0] lshr_ln184_23_fu_3144_p2;
wire   [6:0] zext_ln184_74_fu_3215_p1;
wire   [6:0] sub_ln184_24_fu_3219_p2;
wire   [63:0] zext_ln184_24_fu_3225_p1;
wire   [63:0] lshr_ln184_24_fu_3229_p2;
wire   [0:0] trunc_ln184_21_fu_3234_p1;
wire   [0:0] empty_15_fu_3330_p2;
wire   [0:0] empty_14_fu_3324_p2;
wire   [0:0] empty_17_fu_3342_p2;
wire   [0:0] empty_16_fu_3336_p2;
wire   [0:0] empty_19_fu_3354_p2;
wire   [0:0] empty_18_fu_3348_p2;
wire   [25:0] trunc_ln203_fu_3366_p1;
wire   [1:0] tmp_2_fu_3370_p4;
wire   [25:0] trunc_ln204_fu_3388_p1;
wire   [1:0] tmp_s_fu_3392_p4;
wire   [26:0] trunc_ln197_fu_3428_p1;
wire   [0:0] tmp_13_fu_3420_p3;
wire   [26:0] trunc_ln198_fu_3448_p1;
wire   [0:0] tmp_15_fu_3440_p3;
wire   [5:0] sub_ln218_fu_3509_p2;
wire   [55:0] zext_ln218_1_fu_3515_p1;
wire   [55:0] lshr_ln218_fu_3519_p2;
wire   [0:0] trunc_ln218_fu_3524_p1;
wire   [4:0] sub_ln232_fu_3572_p2;
wire   [5:0] sub_ln229_fu_3583_p2;
wire   [31:0] zext_ln229_1_fu_3589_p1;
wire   [31:0] lshr_ln229_fu_3593_p2;
wire   [62:0] trunc_ln229_1_fu_3603_p1;
wire   [0:0] trunc_ln229_fu_3599_p1;
wire   [46:0] trunc_ln232_3_fu_3627_p1;
wire   [46:0] trunc_ln232_2_fu_3623_p1;
wire   [47:0] trunc_ln232_1_fu_3619_p1;
wire   [47:0] trunc_ln232_fu_3615_p1;
wire   [2:0] trunc_ln240_fu_3655_p1;
wire   [5:0] shl_ln1_fu_3659_p3;
wire   [3:0] shl_ln240_fu_3671_p2;
wire   [6:0] zext_ln240_fu_3667_p1;
wire   [6:0] zext_ln240_2_fu_3681_p1;
wire   [4:0] shl_ln240_1_fu_3691_p3;
wire   [5:0] zext_ln240_1_fu_3677_p1;
wire   [5:0] sub_ln240_1_fu_3703_p2;
wire   [5:0] zext_ln240_5_fu_3699_p1;
wire   [5:0] sub_ln243_fu_3715_p2;
wire  signed [31:0] sext_ln240_fu_3727_p1;
wire   [47:0] zext_ln240_4_fu_3734_p1;
wire   [47:0] lshr_ln240_fu_3738_p2;
wire   [47:0] and_ln240_fu_3744_p2;
wire   [47:0] zext_ln240_6_fu_3749_p1;
wire   [47:0] lshr_ln240_1_fu_3752_p2;
wire   [0:0] tmp_16_fu_3762_p3;
wire   [0:0] trunc_ln240_1_fu_3758_p1;
wire   [46:0] zext_ln240_3_fu_3730_p1;
wire   [46:0] lshr_ln243_fu_3786_p2;
wire   [46:0] and_ln243_fu_3792_p2;
wire   [46:0] zext_ln243_fu_3797_p1;
wire   [2:0] tmp_12_fu_3776_p4;
wire   [0:0] or_ln241_fu_3770_p2;
wire   [7:0] tmp_14_fu_3806_p4;
wire   [46:0] lshr_ln243_1_fu_3800_p2;
wire   [7:0] trunc_ln246_fu_3820_p1;
wire  signed [8:0] sext_ln246_1_fu_3824_p1;
wire  signed [8:0] sext_ln246_fu_3816_p1;
wire   [8:0] add_ln246_fu_3828_p2;
wire   [9:0] tmp_17_fu_3838_p3;
wire  signed [10:0] sext_ln246_2_fu_3834_p1;
wire   [10:0] zext_ln246_fu_3846_p1;
wire   [27:0] trunc_ln246_1_fu_3860_p1;
wire   [5:0] sub_ln254_fu_3904_p2;
wire   [31:0] zext_ln254_1_fu_3910_p1;
wire   [31:0] lshr_ln254_fu_3914_p2;
wire   [0:0] trunc_ln254_fu_3920_p1;
wire   [6:0] sub_ln270_fu_3952_p2;
wire   [63:0] zext_ln270_fu_3958_p1;
wire   [63:0] lshr_ln270_fu_3962_p2;
wire   [0:0] trunc_ln270_fu_3967_p1;
reg   [22:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 23'd1;
end

des_dec_IP #(
    .DataWidth( 7 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
IP_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(IP_address0),
    .ce0(IP_ce0),
    .q0(IP_q0),
    .address1(IP_address1),
    .ce1(IP_ce1),
    .q1(IP_q1),
    .address2(IP_address2),
    .ce2(IP_ce2),
    .q2(IP_q2),
    .address3(IP_address3),
    .ce3(IP_ce3),
    .q3(IP_q3),
    .address4(IP_address4),
    .ce4(IP_ce4),
    .q4(IP_q4),
    .address5(IP_address5),
    .ce5(IP_ce5),
    .q5(IP_q5),
    .address6(IP_address6),
    .ce6(IP_ce6),
    .q6(IP_q6),
    .address7(IP_address7),
    .ce7(IP_ce7),
    .q7(IP_q7),
    .address8(IP_address8),
    .ce8(IP_ce8),
    .q8(IP_q8),
    .address9(IP_address9),
    .ce9(IP_ce9),
    .q9(IP_q9),
    .address10(IP_address10),
    .ce10(IP_ce10),
    .q10(IP_q10),
    .address11(IP_address11),
    .ce11(IP_ce11),
    .q11(IP_q11),
    .address12(IP_address12),
    .ce12(IP_ce12),
    .q12(IP_q12),
    .address13(IP_address13),
    .ce13(IP_ce13),
    .q13(IP_q13),
    .address14(IP_address14),
    .ce14(IP_ce14),
    .q14(IP_q14),
    .address15(IP_address15),
    .ce15(IP_ce15),
    .q15(IP_q15),
    .address16(IP_address16),
    .ce16(IP_ce16),
    .q16(IP_q16),
    .address17(IP_address17),
    .ce17(IP_ce17),
    .q17(IP_q17),
    .address18(IP_address18),
    .ce18(IP_ce18),
    .q18(IP_q18),
    .address19(IP_address19),
    .ce19(IP_ce19),
    .q19(IP_q19),
    .address20(IP_address20),
    .ce20(IP_ce20),
    .q20(IP_q20),
    .address21(IP_address21),
    .ce21(IP_ce21),
    .q21(IP_q21),
    .address22(IP_address22),
    .ce22(IP_ce22),
    .q22(IP_q22),
    .address23(IP_address23),
    .ce23(IP_ce23),
    .q23(IP_q23),
    .address24(IP_address24),
    .ce24(IP_ce24),
    .q24(IP_q24),
    .address25(IP_address25),
    .ce25(IP_ce25),
    .q25(IP_q25),
    .address26(IP_address26),
    .ce26(IP_ce26),
    .q26(IP_q26),
    .address27(IP_address27),
    .ce27(IP_ce27),
    .q27(IP_q27),
    .address28(IP_address28),
    .ce28(IP_ce28),
    .q28(IP_q28),
    .address29(IP_address29),
    .ce29(IP_ce29),
    .q29(IP_q29),
    .address30(IP_address30),
    .ce30(IP_ce30),
    .q30(IP_q30),
    .address31(IP_address31),
    .ce31(IP_ce31),
    .q31(IP_q31)
);

des_dec_PC1 #(
    .DataWidth( 6 ),
    .AddressRange( 56 ),
    .AddressWidth( 6 ))
PC1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(PC1_address0),
    .ce0(PC1_ce0),
    .q0(PC1_q0),
    .address1(PC1_address1),
    .ce1(PC1_ce1),
    .q1(PC1_q1),
    .address2(PC1_address2),
    .ce2(PC1_ce2),
    .q2(PC1_q2),
    .address3(PC1_address3),
    .ce3(PC1_ce3),
    .q3(PC1_q3),
    .address4(PC1_address4),
    .ce4(PC1_ce4),
    .q4(PC1_q4),
    .address5(PC1_address5),
    .ce5(PC1_ce5),
    .q5(PC1_q5),
    .address6(PC1_address6),
    .ce6(PC1_ce6),
    .q6(PC1_q6),
    .address7(PC1_address7),
    .ce7(PC1_ce7),
    .q7(PC1_q7),
    .address8(PC1_address8),
    .ce8(PC1_ce8),
    .q8(PC1_q8),
    .address9(PC1_address9),
    .ce9(PC1_ce9),
    .q9(PC1_q9),
    .address10(PC1_address10),
    .ce10(PC1_ce10),
    .q10(PC1_q10),
    .address11(PC1_address11),
    .ce11(PC1_ce11),
    .q11(PC1_q11),
    .address12(PC1_address12),
    .ce12(PC1_ce12),
    .q12(PC1_q12),
    .address13(PC1_address13),
    .ce13(PC1_ce13),
    .q13(PC1_q13),
    .address14(PC1_address14),
    .ce14(PC1_ce14),
    .q14(PC1_q14),
    .address15(PC1_address15),
    .ce15(PC1_ce15),
    .q15(PC1_q15),
    .address16(PC1_address16),
    .ce16(PC1_ce16),
    .q16(PC1_q16),
    .address17(PC1_address17),
    .ce17(PC1_ce17),
    .q17(PC1_q17),
    .address18(PC1_address18),
    .ce18(PC1_ce18),
    .q18(PC1_q18),
    .address19(PC1_address19),
    .ce19(PC1_ce19),
    .q19(PC1_q19),
    .address20(PC1_address20),
    .ce20(PC1_ce20),
    .q20(PC1_q20),
    .address21(PC1_address21),
    .ce21(PC1_ce21),
    .q21(PC1_q21),
    .address22(PC1_address22),
    .ce22(PC1_ce22),
    .q22(PC1_q22),
    .address23(PC1_address23),
    .ce23(PC1_ce23),
    .q23(PC1_q23)
);

des_dec_PC2 #(
    .DataWidth( 6 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
PC2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(PC2_address0),
    .ce0(PC2_ce0),
    .q0(PC2_q0)
);

des_dec_E #(
    .DataWidth( 6 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
E_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(E_address0),
    .ce0(E_ce0),
    .q0(E_q0)
);

des_dec_S #(
    .DataWidth( 4 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
S_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(S_address0),
    .ce0(S_ce0),
    .q0(S_q0)
);

des_dec_P #(
    .DataWidth( 6 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
P_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(P_address0),
    .ce0(P_ce0),
    .q0(P_q0)
);

des_dec_PI #(
    .DataWidth( 7 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
PI_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(PI_address0),
    .ce0(PI_ce0),
    .q0(PI_q0)
);

des_dec_sub_key #(
    .DataWidth( 64 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
sub_key_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sub_key_address0),
    .ce0(sub_key_ce0),
    .we0(sub_key_we0),
    .d0(sub_key_load_1_reg_1093),
    .q0(sub_key_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((empty_20_fu_3360_p2 == 1'd1) & (icmp_ln192_fu_3312_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        C_1_fu_248 <= C_3_fu_3432_p3;
    end else if (((empty_20_fu_3360_p2 == 1'd0) & (icmp_ln192_fu_3312_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        C_1_fu_248 <= C_2_fu_3380_p3;
    end else if (((icmp_ln182_fu_3155_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        C_1_fu_248 <= {{phi_ln183_reg_1071[32:5]}};
    end
end

always @ (posedge ap_clk) begin
    if (((empty_20_fu_3360_p2 == 1'd1) & (icmp_ln192_fu_3312_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        D_1_fu_252 <= D_3_fu_3452_p3;
    end else if (((empty_20_fu_3360_p2 == 1'd0) & (icmp_ln192_fu_3312_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        D_1_fu_252 <= D_2_fu_3402_p3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        D_1_fu_252 <= D_fu_3278_p26;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln192_fu_3312_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        L_0_reg_1126 <= L_reg_4223;
    end else if (((icmp_ln252_fu_3877_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        L_0_reg_1126 <= temp_reg_1116;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln235_fu_3643_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        f_function_res_0_reg_1184 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        f_function_res_0_reg_1184 <= f_function_res_fu_3924_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_0_0_reg_1048 <= add_ln171_reg_4218;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_0_reg_1048 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i_1_0_reg_1059 <= xor_ln182_reg_4549;
    end else if (((icmp_ln171_fu_1237_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_1_0_reg_1059 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln216_fu_3488_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        i_2_reg_1082 <= i_1_reg_4588;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        i_2_reg_1082 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln192_fu_3312_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        i_3_reg_1137 <= 5'd0;
    end else if (((icmp_ln252_fu_3877_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        i_3_reg_1137 <= i_5_reg_4639;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        i_4_reg_1206 <= i_reg_4746;
    end else if (((icmp_ln223_fu_3535_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        i_4_reg_1206 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        init_perm_res_0_0_reg_1037 <= or_ln_fu_2274_p34;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        init_perm_res_0_0_reg_1037 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        inv_init_perm_res_0_reg_1217 <= inv_init_perm_res_fu_3971_p3;
    end else if (((icmp_ln223_fu_3535_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        inv_init_perm_res_0_reg_1217 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        j_0_reg_1105 <= j_4_reg_4616;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        j_0_reg_1105 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        j_1_reg_1161 <= j_reg_4652;
    end else if (((icmp_ln223_fu_3535_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        j_1_reg_1161 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        j_2_reg_1172 <= j_5_reg_4685;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        j_2_reg_1172 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln235_fu_3643_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        j_3_reg_1195 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        j_3_reg_1195 <= j_6_reg_4718;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
                phi_ln183_reg_1071[61 : 1] <= shl_ln_fu_3238_p35[61 : 1];
    end else if (((icmp_ln171_fu_1237_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                phi_ln183_reg_1071[1] <= 1'b0;
        phi_ln183_reg_1071[2] <= 1'b0;
        phi_ln183_reg_1071[3] <= 1'b0;
        phi_ln183_reg_1071[4] <= 1'b0;
        phi_ln183_reg_1071[5] <= 1'b0;
        phi_ln183_reg_1071[6] <= 1'b0;
        phi_ln183_reg_1071[7] <= 1'b0;
        phi_ln183_reg_1071[8] <= 1'b0;
        phi_ln183_reg_1071[9] <= 1'b0;
        phi_ln183_reg_1071[10] <= 1'b0;
        phi_ln183_reg_1071[11] <= 1'b0;
        phi_ln183_reg_1071[12] <= 1'b0;
        phi_ln183_reg_1071[13] <= 1'b0;
        phi_ln183_reg_1071[14] <= 1'b0;
        phi_ln183_reg_1071[15] <= 1'b0;
        phi_ln183_reg_1071[16] <= 1'b0;
        phi_ln183_reg_1071[17] <= 1'b0;
        phi_ln183_reg_1071[18] <= 1'b0;
        phi_ln183_reg_1071[19] <= 1'b0;
        phi_ln183_reg_1071[20] <= 1'b0;
        phi_ln183_reg_1071[21] <= 1'b0;
        phi_ln183_reg_1071[22] <= 1'b0;
        phi_ln183_reg_1071[23] <= 1'b0;
        phi_ln183_reg_1071[24] <= 1'b0;
        phi_ln183_reg_1071[25] <= 1'b0;
        phi_ln183_reg_1071[26] <= 1'b0;
        phi_ln183_reg_1071[27] <= 1'b0;
        phi_ln183_reg_1071[28] <= 1'b0;
        phi_ln183_reg_1071[29] <= 1'b0;
        phi_ln183_reg_1071[30] <= 1'b0;
        phi_ln183_reg_1071[31] <= 1'b0;
        phi_ln183_reg_1071[32] <= 1'b0;
        phi_ln183_reg_1071[33] <= 1'b0;
        phi_ln183_reg_1071[34] <= 1'b0;
        phi_ln183_reg_1071[35] <= 1'b0;
        phi_ln183_reg_1071[36] <= 1'b0;
        phi_ln183_reg_1071[37] <= 1'b0;
        phi_ln183_reg_1071[38] <= 1'b0;
        phi_ln183_reg_1071[39] <= 1'b0;
        phi_ln183_reg_1071[40] <= 1'b0;
        phi_ln183_reg_1071[41] <= 1'b0;
        phi_ln183_reg_1071[42] <= 1'b0;
        phi_ln183_reg_1071[43] <= 1'b0;
        phi_ln183_reg_1071[44] <= 1'b0;
        phi_ln183_reg_1071[45] <= 1'b0;
        phi_ln183_reg_1071[46] <= 1'b0;
        phi_ln183_reg_1071[47] <= 1'b0;
        phi_ln183_reg_1071[48] <= 1'b0;
        phi_ln183_reg_1071[49] <= 1'b0;
        phi_ln183_reg_1071[50] <= 1'b0;
        phi_ln183_reg_1071[51] <= 1'b0;
        phi_ln183_reg_1071[52] <= 1'b0;
        phi_ln183_reg_1071[53] <= 1'b0;
        phi_ln183_reg_1071[54] <= 1'b0;
        phi_ln183_reg_1071[55] <= 1'b0;
        phi_ln183_reg_1071[56] <= 1'b0;
        phi_ln183_reg_1071[57] <= 1'b0;
        phi_ln183_reg_1071[58] <= 1'b0;
        phi_ln183_reg_1071[59] <= 1'b0;
        phi_ln183_reg_1071[60] <= 1'b0;
        phi_ln183_reg_1071[61] <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        s_input_0_reg_1149 <= s_input_fu_3607_p3;
    end else if (((icmp_ln223_fu_3535_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        s_input_0_reg_1149 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        s_output_1_fu_256 <= s_output_fu_3864_p3;
    end else if (((icmp_ln192_fu_3312_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        s_output_1_fu_256 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        sub_key_load_1_reg_1093 <= or_ln1_fu_3528_p3;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        sub_key_load_1_reg_1093 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln192_fu_3312_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        temp_reg_1116 <= R_reg_4228;
    end else if (((icmp_ln252_fu_3877_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        temp_reg_1116 <= R_1_fu_3898_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln171_fu_1237_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        L_reg_4223 <= {{init_perm_res_0_0_reg_1037[63:32]}};
        R_reg_4228 <= R_fu_1613_p1;
        tmp_10_reg_4258 <= key[32'd17];
        tmp_11_reg_4263 <= key[32'd25];
        tmp_1_reg_4233 <= key[32'd12];
        tmp_5_reg_4238 <= key[32'd20];
        tmp_6_reg_4243 <= key[32'd28];
        tmp_7_reg_4248 <= key[32'd1];
        tmp_8_reg_4253 <= key[32'd9];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln171_fu_1237_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        add_ln171_reg_4218 <= add_ln171_fu_1597_p2;
        trunc_ln173_reg_4193 <= trunc_ln173_fu_1555_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        add_ln246_1_reg_4705 <= add_ln246_1_fu_3850_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i_1_reg_4588 <= i_1_fu_3318_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i_5_reg_4639 <= i_5_fu_3541_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        i_reg_4746 <= i_fu_3937_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        j_4_reg_4616 <= j_4_fu_3494_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        j_5_reg_4685 <= j_5_fu_3649_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        j_6_reg_4718 <= j_6_fu_3883_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        j_reg_4652 <= j_fu_3561_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln223_fu_3535_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        pre_output_reg_4644 <= pre_output_fu_3547_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln192_fu_3312_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        sub_key_addr_reg_4596 <= zext_ln214_fu_3470_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln235_fu_3643_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        sub_ln240_2_reg_4695[5 : 1] <= sub_ln240_2_fu_3709_p2[5 : 1];
        sub_ln240_reg_4690[6 : 1] <= sub_ln240_fu_3685_p2[6 : 1];
        sub_ln243_1_reg_4700[5 : 1] <= sub_ln243_1_fu_3721_p2[5 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln182_fu_3155_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        tmp_3_reg_4575 <= {{phi_ln183_reg_1071[4:1]}};
        trunc_ln184_19_reg_4570 <= trunc_ln184_19_fu_3186_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln182_fu_3155_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        tmp_4_reg_4544 <= {{phi_ln183_reg_1071[29:1]}};
        trunc_ln184_20_reg_4534 <= trunc_ln184_20_fu_3161_p1;
        xor_ln182_reg_4549 <= xor_ln182_fu_3180_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_9_reg_4608 <= tmp_9_fu_3480_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        trunc_ln182_1_reg_4477 <= trunc_ln182_1_fu_2942_p1;
        trunc_ln182_2_reg_4483 <= trunc_ln182_2_fu_2965_p1;
        trunc_ln182_3_reg_4519 <= trunc_ln182_3_fu_3103_p1;
        trunc_ln182_reg_4429 <= trunc_ln182_fu_2758_p1;
        trunc_ln184_10_reg_4459 <= trunc_ln184_10_fu_2873_p1;
        trunc_ln184_11_reg_4465 <= trunc_ln184_11_fu_2896_p1;
        trunc_ln184_12_reg_4471 <= trunc_ln184_12_fu_2919_p1;
        trunc_ln184_13_reg_4489 <= trunc_ln184_13_fu_2988_p1;
        trunc_ln184_14_reg_4495 <= trunc_ln184_14_fu_3011_p1;
        trunc_ln184_15_reg_4501 <= trunc_ln184_15_fu_3034_p1;
        trunc_ln184_16_reg_4507 <= trunc_ln184_16_fu_3057_p1;
        trunc_ln184_17_reg_4513 <= trunc_ln184_17_fu_3080_p1;
        trunc_ln184_18_reg_4525 <= trunc_ln184_18_fu_3126_p1;
        trunc_ln184_1_reg_4399 <= trunc_ln184_1_fu_2643_p1;
        trunc_ln184_2_reg_4405 <= trunc_ln184_2_fu_2666_p1;
        trunc_ln184_3_reg_4411 <= trunc_ln184_3_fu_2689_p1;
        trunc_ln184_4_reg_4417 <= trunc_ln184_4_fu_2712_p1;
        trunc_ln184_5_reg_4423 <= trunc_ln184_5_fu_2735_p1;
        trunc_ln184_6_reg_4435 <= trunc_ln184_6_fu_2781_p1;
        trunc_ln184_7_reg_4441 <= trunc_ln184_7_fu_2804_p1;
        trunc_ln184_8_reg_4447 <= trunc_ln184_8_fu_2827_p1;
        trunc_ln184_9_reg_4453 <= trunc_ln184_9_fu_2850_p1;
        trunc_ln184_reg_4393 <= trunc_ln184_fu_2620_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln216_fu_3488_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        trunc_ln218_1_reg_4626 <= trunc_ln218_1_fu_3505_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln252_fu_3877_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        trunc_ln254_1_reg_4728 <= trunc_ln254_1_fu_3894_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln267_fu_3931_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        trunc_ln270_1_reg_4756 <= trunc_ln270_1_fu_3948_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        xor_ln232_1_reg_4677 <= xor_ln232_1_fu_3637_p2;
        xor_ln232_reg_4672 <= xor_ln232_fu_3631_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        E_ce0 = 1'b1;
    end else begin
        E_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IP_ce0 = 1'b1;
    end else begin
        IP_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IP_ce1 = 1'b1;
    end else begin
        IP_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IP_ce10 = 1'b1;
    end else begin
        IP_ce10 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IP_ce11 = 1'b1;
    end else begin
        IP_ce11 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IP_ce12 = 1'b1;
    end else begin
        IP_ce12 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IP_ce13 = 1'b1;
    end else begin
        IP_ce13 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IP_ce14 = 1'b1;
    end else begin
        IP_ce14 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IP_ce15 = 1'b1;
    end else begin
        IP_ce15 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IP_ce16 = 1'b1;
    end else begin
        IP_ce16 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IP_ce17 = 1'b1;
    end else begin
        IP_ce17 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IP_ce18 = 1'b1;
    end else begin
        IP_ce18 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IP_ce19 = 1'b1;
    end else begin
        IP_ce19 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IP_ce2 = 1'b1;
    end else begin
        IP_ce2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IP_ce20 = 1'b1;
    end else begin
        IP_ce20 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IP_ce21 = 1'b1;
    end else begin
        IP_ce21 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IP_ce22 = 1'b1;
    end else begin
        IP_ce22 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IP_ce23 = 1'b1;
    end else begin
        IP_ce23 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IP_ce24 = 1'b1;
    end else begin
        IP_ce24 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IP_ce25 = 1'b1;
    end else begin
        IP_ce25 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IP_ce26 = 1'b1;
    end else begin
        IP_ce26 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IP_ce27 = 1'b1;
    end else begin
        IP_ce27 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IP_ce28 = 1'b1;
    end else begin
        IP_ce28 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IP_ce29 = 1'b1;
    end else begin
        IP_ce29 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IP_ce3 = 1'b1;
    end else begin
        IP_ce3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IP_ce30 = 1'b1;
    end else begin
        IP_ce30 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IP_ce31 = 1'b1;
    end else begin
        IP_ce31 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IP_ce4 = 1'b1;
    end else begin
        IP_ce4 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IP_ce5 = 1'b1;
    end else begin
        IP_ce5 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IP_ce6 = 1'b1;
    end else begin
        IP_ce6 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IP_ce7 = 1'b1;
    end else begin
        IP_ce7 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IP_ce8 = 1'b1;
    end else begin
        IP_ce8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        IP_ce9 = 1'b1;
    end else begin
        IP_ce9 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        PC1_address0 = zext_ln184_73_fu_3165_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        PC1_address0 = zext_ln184_fu_2343_p1;
    end else begin
        PC1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4))) begin
        PC1_ce0 = 1'b1;
    end else begin
        PC1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PC1_ce1 = 1'b1;
    end else begin
        PC1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PC1_ce10 = 1'b1;
    end else begin
        PC1_ce10 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PC1_ce11 = 1'b1;
    end else begin
        PC1_ce11 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PC1_ce12 = 1'b1;
    end else begin
        PC1_ce12 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PC1_ce13 = 1'b1;
    end else begin
        PC1_ce13 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PC1_ce14 = 1'b1;
    end else begin
        PC1_ce14 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PC1_ce15 = 1'b1;
    end else begin
        PC1_ce15 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PC1_ce16 = 1'b1;
    end else begin
        PC1_ce16 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PC1_ce17 = 1'b1;
    end else begin
        PC1_ce17 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PC1_ce18 = 1'b1;
    end else begin
        PC1_ce18 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PC1_ce19 = 1'b1;
    end else begin
        PC1_ce19 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PC1_ce2 = 1'b1;
    end else begin
        PC1_ce2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PC1_ce20 = 1'b1;
    end else begin
        PC1_ce20 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PC1_ce21 = 1'b1;
    end else begin
        PC1_ce21 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PC1_ce22 = 1'b1;
    end else begin
        PC1_ce22 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PC1_ce23 = 1'b1;
    end else begin
        PC1_ce23 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PC1_ce3 = 1'b1;
    end else begin
        PC1_ce3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PC1_ce4 = 1'b1;
    end else begin
        PC1_ce4 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PC1_ce5 = 1'b1;
    end else begin
        PC1_ce5 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PC1_ce6 = 1'b1;
    end else begin
        PC1_ce6 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PC1_ce7 = 1'b1;
    end else begin
        PC1_ce7 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PC1_ce8 = 1'b1;
    end else begin
        PC1_ce8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PC1_ce9 = 1'b1;
    end else begin
        PC1_ce9 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        PC2_ce0 = 1'b1;
    end else begin
        PC2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        PI_ce0 = 1'b1;
    end else begin
        PI_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        P_ce0 = 1'b1;
    end else begin
        P_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        S_ce0 = 1'b1;
    end else begin
        S_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln267_fu_3931_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln267_fu_3931_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        sub_key_address0 = zext_ln232_fu_3578_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sub_key_address0 = sub_key_addr_reg_4596;
    end else begin
        sub_key_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state10))) begin
        sub_key_ce0 = 1'b1;
    end else begin
        sub_key_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        sub_key_we0 = 1'b1;
    end else begin
        sub_key_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln171_fu_1237_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln182_fu_3155_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((icmp_ln192_fu_3312_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln216_fu_3488_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state12 : begin
            if (((icmp_ln223_fu_3535_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((icmp_ln227_fu_3555_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((icmp_ln235_fu_3643_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state20 : begin
            if (((icmp_ln252_fu_3877_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state22 : begin
            if (((icmp_ln267_fu_3931_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign C_2_fu_3380_p3 = {{trunc_ln203_fu_3366_p1}, {tmp_2_fu_3370_p4}};

assign C_3_fu_3432_p3 = {{trunc_ln197_fu_3428_p1}, {tmp_13_fu_3420_p3}};

assign D_2_fu_3402_p3 = {{trunc_ln204_fu_3388_p1}, {tmp_s_fu_3392_p4}};

assign D_3_fu_3452_p3 = {{trunc_ln198_fu_3448_p1}, {tmp_15_fu_3440_p3}};

assign D_fu_3278_p26 = {{{{{{{{{{{{{{{{{{{{{{{{{tmp_3_reg_4575}, {trunc_ln184_reg_4393}}, {trunc_ln184_1_reg_4399}}, {trunc_ln184_2_reg_4405}}, {trunc_ln184_3_reg_4411}}, {trunc_ln184_4_reg_4417}}, {trunc_ln184_5_reg_4423}}, {trunc_ln182_reg_4429}}, {trunc_ln184_6_reg_4435}}, {trunc_ln184_7_reg_4441}}, {trunc_ln184_8_reg_4447}}, {trunc_ln184_9_reg_4453}}, {trunc_ln184_10_reg_4459}}, {trunc_ln184_11_reg_4465}}, {trunc_ln184_12_reg_4471}}, {trunc_ln182_1_reg_4477}}, {trunc_ln182_2_reg_4483}}, {trunc_ln184_13_reg_4489}}, {trunc_ln184_14_reg_4495}}, {trunc_ln184_15_reg_4501}}, {trunc_ln184_16_reg_4507}}, {trunc_ln184_17_reg_4513}}, {trunc_ln182_3_reg_4519}}, {trunc_ln184_18_reg_4525}}, {trunc_ln184_19_reg_4570}};

assign E_address0 = zext_ln229_fu_3567_p1;

assign IP_address0 = zext_ln174_fu_1243_p1;

assign IP_address1 = zext_ln174_33_fu_1258_p1;

assign IP_address10 = zext_ln174_42_fu_1357_p1;

assign IP_address11 = zext_ln174_43_fu_1368_p1;

assign IP_address12 = zext_ln174_44_fu_1379_p1;

assign IP_address13 = zext_ln174_45_fu_1390_p1;

assign IP_address14 = zext_ln174_46_fu_1401_p1;

assign IP_address15 = zext_ln174_47_fu_1412_p1;

assign IP_address16 = zext_ln174_48_fu_1423_p1;

assign IP_address17 = zext_ln174_49_fu_1434_p1;

assign IP_address18 = zext_ln174_50_fu_1445_p1;

assign IP_address19 = zext_ln174_51_fu_1456_p1;

assign IP_address2 = zext_ln174_34_fu_1269_p1;

assign IP_address20 = zext_ln174_52_fu_1467_p1;

assign IP_address21 = zext_ln174_53_fu_1478_p1;

assign IP_address22 = zext_ln174_54_fu_1489_p1;

assign IP_address23 = zext_ln174_55_fu_1500_p1;

assign IP_address24 = zext_ln174_56_fu_1511_p1;

assign IP_address25 = zext_ln174_57_fu_1522_p1;

assign IP_address26 = zext_ln174_58_fu_1533_p1;

assign IP_address27 = zext_ln174_59_fu_1544_p1;

assign IP_address28 = zext_ln174_60_fu_1559_p1;

assign IP_address29 = zext_ln174_61_fu_1570_p1;

assign IP_address3 = zext_ln174_35_fu_1280_p1;

assign IP_address30 = zext_ln174_62_fu_1581_p1;

assign IP_address31 = zext_ln174_63_fu_1592_p1;

assign IP_address4 = zext_ln174_36_fu_1291_p1;

assign IP_address5 = zext_ln174_37_fu_1302_p1;

assign IP_address6 = zext_ln174_38_fu_1313_p1;

assign IP_address7 = zext_ln174_39_fu_1324_p1;

assign IP_address8 = zext_ln174_40_fu_1335_p1;

assign IP_address9 = zext_ln174_41_fu_1346_p1;

assign PC1_address1 = zext_ln184_27_fu_2354_p1;

assign PC1_address10 = zext_ln184_45_fu_2453_p1;

assign PC1_address11 = zext_ln184_47_fu_2464_p1;

assign PC1_address12 = zext_ln184_49_fu_2475_p1;

assign PC1_address13 = zext_ln184_51_fu_2486_p1;

assign PC1_address14 = zext_ln184_53_fu_2497_p1;

assign PC1_address15 = zext_ln184_55_fu_2508_p1;

assign PC1_address16 = zext_ln184_57_fu_2519_p1;

assign PC1_address17 = zext_ln184_59_fu_2530_p1;

assign PC1_address18 = zext_ln184_61_fu_2541_p1;

assign PC1_address19 = zext_ln184_63_fu_2552_p1;

assign PC1_address2 = zext_ln184_29_fu_2365_p1;

assign PC1_address20 = zext_ln184_65_fu_2563_p1;

assign PC1_address21 = zext_ln184_67_fu_2574_p1;

assign PC1_address22 = zext_ln184_69_fu_2585_p1;

assign PC1_address23 = zext_ln184_71_fu_2596_p1;

assign PC1_address3 = zext_ln184_31_fu_2376_p1;

assign PC1_address4 = zext_ln184_33_fu_2387_p1;

assign PC1_address5 = zext_ln184_35_fu_2398_p1;

assign PC1_address6 = zext_ln184_37_fu_2409_p1;

assign PC1_address7 = zext_ln184_39_fu_2420_p1;

assign PC1_address8 = zext_ln184_41_fu_2431_p1;

assign PC1_address9 = zext_ln184_43_fu_2442_p1;

assign PC2_address0 = zext_ln218_fu_3500_p1;

assign PI_address0 = zext_ln270_1_fu_3943_p1;

assign P_address0 = zext_ln254_fu_3889_p1;

assign R_1_fu_3898_p2 = (f_function_res_0_reg_1184 ^ L_0_reg_1126);

assign R_fu_1613_p1 = init_perm_res_0_0_reg_1037[31:0];

assign S_address0 = sext_ln246_3_fu_3856_p1;

assign add_ln171_fu_1597_p2 = (7'd32 + i_0_0_reg_1048);

assign add_ln246_1_fu_3850_p2 = ($signed(sext_ln246_2_fu_3834_p1) + $signed(zext_ln246_fu_3846_p1));

assign add_ln246_fu_3828_p2 = ($signed(sext_ln246_1_fu_3824_p1) + $signed(sext_ln246_fu_3816_p1));

assign and_ln240_fu_3744_p2 = (xor_ln232_1_reg_4677 & lshr_ln240_fu_3738_p2);

assign and_ln243_fu_3792_p2 = (xor_ln232_reg_4672 & lshr_ln243_fu_3786_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return = inv_init_perm_res_0_reg_1217;

assign empty_11_fu_1248_p1 = i_0_0_reg_1048[5:0];

assign empty_14_fu_3324_p2 = ((i_2_reg_1082 == 5'd15) ? 1'b1 : 1'b0);

assign empty_15_fu_3330_p2 = ((i_2_reg_1082 == 5'd8) ? 1'b1 : 1'b0);

assign empty_16_fu_3336_p2 = (empty_15_fu_3330_p2 | empty_14_fu_3324_p2);

assign empty_17_fu_3342_p2 = ((i_2_reg_1082 == 5'd1) ? 1'b1 : 1'b0);

assign empty_18_fu_3348_p2 = (empty_17_fu_3342_p2 | empty_16_fu_3336_p2);

assign empty_19_fu_3354_p2 = ((i_2_reg_1082 == 5'd0) ? 1'b1 : 1'b0);

assign empty_20_fu_3360_p2 = (empty_19_fu_3354_p2 | empty_18_fu_3348_p2);

assign f_function_res_fu_3924_p3 = {{trunc_ln254_1_reg_4728}, {trunc_ln254_fu_3920_p1}};

assign i_1_fu_3318_p2 = (i_2_reg_1082 + 5'd1);

assign i_5_fu_3541_p2 = (i_3_reg_1137 + 5'd1);

assign i_fu_3937_p2 = (i_4_reg_1206 + 7'd1);

assign icmp_ln171_fu_1237_p2 = ((i_0_0_reg_1048 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln182_fu_3155_p2 = ((or_ln182_23_fu_3149_p2 == 6'd56) ? 1'b1 : 1'b0);

assign icmp_ln192_fu_3312_p2 = ((i_2_reg_1082 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln216_fu_3488_p2 = ((j_0_reg_1105 == 6'd48) ? 1'b1 : 1'b0);

assign icmp_ln223_fu_3535_p2 = ((i_3_reg_1137 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln227_fu_3555_p2 = ((j_1_reg_1161 == 6'd48) ? 1'b1 : 1'b0);

assign icmp_ln235_fu_3643_p2 = ((j_2_reg_1172 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln252_fu_3877_p2 = ((j_3_reg_1195 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln267_fu_3931_p2 = ((i_4_reg_1206 == 7'd64) ? 1'b1 : 1'b0);

assign inv_init_perm_res_fu_3971_p3 = {{trunc_ln270_1_reg_4756}, {trunc_ln270_fu_3967_p1}};

assign j_4_fu_3494_p2 = (j_0_reg_1105 + 6'd1);

assign j_5_fu_3649_p2 = (j_2_reg_1172 + 4'd1);

assign j_6_fu_3883_p2 = (j_3_reg_1195 + 6'd1);

assign j_fu_3561_p2 = (j_1_reg_1161 + 6'd1);

assign lshr_ln174_10_fu_1866_p2 = input_r >> zext_ln174_10_fu_1862_p1;

assign lshr_ln174_11_fu_1885_p2 = input_r >> zext_ln174_11_fu_1881_p1;

assign lshr_ln174_12_fu_1904_p2 = input_r >> zext_ln174_12_fu_1900_p1;

assign lshr_ln174_13_fu_1923_p2 = input_r >> zext_ln174_13_fu_1919_p1;

assign lshr_ln174_14_fu_1942_p2 = input_r >> zext_ln174_14_fu_1938_p1;

assign lshr_ln174_15_fu_1961_p2 = input_r >> zext_ln174_15_fu_1957_p1;

assign lshr_ln174_16_fu_1980_p2 = input_r >> zext_ln174_16_fu_1976_p1;

assign lshr_ln174_17_fu_1999_p2 = input_r >> zext_ln174_17_fu_1995_p1;

assign lshr_ln174_18_fu_2018_p2 = input_r >> zext_ln174_18_fu_2014_p1;

assign lshr_ln174_19_fu_2037_p2 = input_r >> zext_ln174_19_fu_2033_p1;

assign lshr_ln174_1_fu_1695_p2 = input_r >> zext_ln174_1_fu_1691_p1;

assign lshr_ln174_20_fu_2056_p2 = input_r >> zext_ln174_20_fu_2052_p1;

assign lshr_ln174_21_fu_2075_p2 = input_r >> zext_ln174_21_fu_2071_p1;

assign lshr_ln174_22_fu_2094_p2 = input_r >> zext_ln174_22_fu_2090_p1;

assign lshr_ln174_23_fu_2113_p2 = input_r >> zext_ln174_23_fu_2109_p1;

assign lshr_ln174_24_fu_2132_p2 = input_r >> zext_ln174_24_fu_2128_p1;

assign lshr_ln174_25_fu_2151_p2 = input_r >> zext_ln174_25_fu_2147_p1;

assign lshr_ln174_26_fu_2170_p2 = input_r >> zext_ln174_26_fu_2166_p1;

assign lshr_ln174_27_fu_2189_p2 = input_r >> zext_ln174_27_fu_2185_p1;

assign lshr_ln174_28_fu_2208_p2 = input_r >> zext_ln174_28_fu_2204_p1;

assign lshr_ln174_29_fu_2227_p2 = input_r >> zext_ln174_29_fu_2223_p1;

assign lshr_ln174_2_fu_1714_p2 = input_r >> zext_ln174_2_fu_1710_p1;

assign lshr_ln174_30_fu_2246_p2 = input_r >> zext_ln174_30_fu_2242_p1;

assign lshr_ln174_31_fu_2265_p2 = input_r >> zext_ln174_31_fu_2261_p1;

assign lshr_ln174_3_fu_1733_p2 = input_r >> zext_ln174_3_fu_1729_p1;

assign lshr_ln174_4_fu_1752_p2 = input_r >> zext_ln174_4_fu_1748_p1;

assign lshr_ln174_5_fu_1771_p2 = input_r >> zext_ln174_5_fu_1767_p1;

assign lshr_ln174_6_fu_1790_p2 = input_r >> zext_ln174_6_fu_1786_p1;

assign lshr_ln174_7_fu_1809_p2 = input_r >> zext_ln174_7_fu_1805_p1;

assign lshr_ln174_8_fu_1828_p2 = input_r >> zext_ln174_8_fu_1824_p1;

assign lshr_ln174_9_fu_1847_p2 = input_r >> zext_ln174_9_fu_1843_p1;

assign lshr_ln174_fu_1676_p2 = input_r >> zext_ln174_32_fu_1672_p1;

assign lshr_ln184_10_fu_2845_p2 = key >> zext_ln184_10_fu_2841_p1;

assign lshr_ln184_11_fu_2868_p2 = key >> zext_ln184_11_fu_2864_p1;

assign lshr_ln184_12_fu_2891_p2 = key >> zext_ln184_12_fu_2887_p1;

assign lshr_ln184_13_fu_2914_p2 = key >> zext_ln184_13_fu_2910_p1;

assign lshr_ln184_14_fu_2937_p2 = key >> zext_ln184_14_fu_2933_p1;

assign lshr_ln184_15_fu_2960_p2 = key >> zext_ln184_15_fu_2956_p1;

assign lshr_ln184_16_fu_2983_p2 = key >> zext_ln184_16_fu_2979_p1;

assign lshr_ln184_17_fu_3006_p2 = key >> zext_ln184_17_fu_3002_p1;

assign lshr_ln184_18_fu_3029_p2 = key >> zext_ln184_18_fu_3025_p1;

assign lshr_ln184_19_fu_3052_p2 = key >> zext_ln184_19_fu_3048_p1;

assign lshr_ln184_1_fu_2638_p2 = key >> zext_ln184_1_fu_2634_p1;

assign lshr_ln184_20_fu_3075_p2 = key >> zext_ln184_20_fu_3071_p1;

assign lshr_ln184_21_fu_3098_p2 = key >> zext_ln184_21_fu_3094_p1;

assign lshr_ln184_22_fu_3121_p2 = key >> zext_ln184_22_fu_3117_p1;

assign lshr_ln184_23_fu_3144_p2 = key >> zext_ln184_23_fu_3140_p1;

assign lshr_ln184_24_fu_3229_p2 = key >> zext_ln184_24_fu_3225_p1;

assign lshr_ln184_2_fu_2661_p2 = key >> zext_ln184_2_fu_2657_p1;

assign lshr_ln184_3_fu_2684_p2 = key >> zext_ln184_3_fu_2680_p1;

assign lshr_ln184_4_fu_2707_p2 = key >> zext_ln184_4_fu_2703_p1;

assign lshr_ln184_5_fu_2730_p2 = key >> zext_ln184_5_fu_2726_p1;

assign lshr_ln184_6_fu_2753_p2 = key >> zext_ln184_6_fu_2749_p1;

assign lshr_ln184_7_fu_2776_p2 = key >> zext_ln184_7_fu_2772_p1;

assign lshr_ln184_8_fu_2799_p2 = key >> zext_ln184_8_fu_2795_p1;

assign lshr_ln184_9_fu_2822_p2 = key >> zext_ln184_9_fu_2818_p1;

assign lshr_ln184_fu_2615_p2 = key >> zext_ln184_26_fu_2611_p1;

assign lshr_ln218_fu_3519_p2 = tmp_9_reg_4608 >> zext_ln218_1_fu_3515_p1;

assign lshr_ln229_fu_3593_p2 = temp_reg_1116 >> zext_ln229_1_fu_3589_p1;

assign lshr_ln240_1_fu_3752_p2 = and_ln240_fu_3744_p2 >> zext_ln240_6_fu_3749_p1;

assign lshr_ln240_fu_3738_p2 = 48'd145135534866432 >> zext_ln240_4_fu_3734_p1;

assign lshr_ln243_1_fu_3800_p2 = and_ln243_fu_3792_p2 >> zext_ln243_fu_3797_p1;

assign lshr_ln243_fu_3786_p2 = 47'd131941395333120 >> zext_ln240_3_fu_3730_p1;

assign lshr_ln254_fu_3914_p2 = s_output_1_fu_256 >> zext_ln254_1_fu_3910_p1;

assign lshr_ln270_fu_3962_p2 = pre_output_reg_4644 >> zext_ln270_fu_3958_p1;

assign or_ln171_10_fu_1362_p2 = (empty_11_fu_1248_p1 | 6'd11);

assign or_ln171_11_fu_1373_p2 = (empty_11_fu_1248_p1 | 6'd12);

assign or_ln171_12_fu_1384_p2 = (empty_11_fu_1248_p1 | 6'd13);

assign or_ln171_13_fu_1395_p2 = (empty_11_fu_1248_p1 | 6'd14);

assign or_ln171_14_fu_1406_p2 = (empty_11_fu_1248_p1 | 6'd15);

assign or_ln171_15_fu_1417_p2 = (empty_11_fu_1248_p1 | 6'd16);

assign or_ln171_16_fu_1428_p2 = (empty_11_fu_1248_p1 | 6'd17);

assign or_ln171_17_fu_1439_p2 = (empty_11_fu_1248_p1 | 6'd18);

assign or_ln171_18_fu_1450_p2 = (empty_11_fu_1248_p1 | 6'd19);

assign or_ln171_19_fu_1461_p2 = (empty_11_fu_1248_p1 | 6'd20);

assign or_ln171_1_fu_1263_p2 = (empty_11_fu_1248_p1 | 6'd2);

assign or_ln171_20_fu_1472_p2 = (empty_11_fu_1248_p1 | 6'd21);

assign or_ln171_21_fu_1483_p2 = (empty_11_fu_1248_p1 | 6'd22);

assign or_ln171_22_fu_1494_p2 = (empty_11_fu_1248_p1 | 6'd23);

assign or_ln171_23_fu_1505_p2 = (empty_11_fu_1248_p1 | 6'd24);

assign or_ln171_24_fu_1516_p2 = (empty_11_fu_1248_p1 | 6'd25);

assign or_ln171_25_fu_1527_p2 = (empty_11_fu_1248_p1 | 6'd26);

assign or_ln171_26_fu_1538_p2 = (empty_11_fu_1248_p1 | 6'd27);

assign or_ln171_27_fu_1549_p2 = (empty_11_fu_1248_p1 | 6'd28);

assign or_ln171_28_fu_1564_p2 = (empty_11_fu_1248_p1 | 6'd29);

assign or_ln171_29_fu_1575_p2 = (empty_11_fu_1248_p1 | 6'd30);

assign or_ln171_2_fu_1274_p2 = (empty_11_fu_1248_p1 | 6'd3);

assign or_ln171_30_fu_1586_p2 = (empty_11_fu_1248_p1 | 6'd31);

assign or_ln171_3_fu_1285_p2 = (empty_11_fu_1248_p1 | 6'd4);

assign or_ln171_4_fu_1296_p2 = (empty_11_fu_1248_p1 | 6'd5);

assign or_ln171_5_fu_1307_p2 = (empty_11_fu_1248_p1 | 6'd6);

assign or_ln171_6_fu_1318_p2 = (empty_11_fu_1248_p1 | 6'd7);

assign or_ln171_7_fu_1329_p2 = (empty_11_fu_1248_p1 | 6'd8);

assign or_ln171_8_fu_1340_p2 = (empty_11_fu_1248_p1 | 6'd9);

assign or_ln171_9_fu_1351_p2 = (empty_11_fu_1248_p1 | 6'd10);

assign or_ln171_fu_1252_p2 = (empty_11_fu_1248_p1 | 6'd1);

assign or_ln182_10_fu_2458_p2 = (i_1_0_reg_1059 | 6'd11);

assign or_ln182_11_fu_2469_p2 = (i_1_0_reg_1059 | 6'd12);

assign or_ln182_12_fu_2480_p2 = (i_1_0_reg_1059 | 6'd13);

assign or_ln182_13_fu_2491_p2 = (i_1_0_reg_1059 | 6'd14);

assign or_ln182_14_fu_2502_p2 = (i_1_0_reg_1059 | 6'd15);

assign or_ln182_15_fu_2513_p2 = (i_1_0_reg_1059 | 6'd16);

assign or_ln182_16_fu_2524_p2 = (i_1_0_reg_1059 | 6'd17);

assign or_ln182_17_fu_2535_p2 = (i_1_0_reg_1059 | 6'd18);

assign or_ln182_18_fu_2546_p2 = (i_1_0_reg_1059 | 6'd19);

assign or_ln182_19_fu_2557_p2 = (i_1_0_reg_1059 | 6'd20);

assign or_ln182_1_fu_2359_p2 = (i_1_0_reg_1059 | 6'd2);

assign or_ln182_20_fu_2568_p2 = (i_1_0_reg_1059 | 6'd21);

assign or_ln182_21_fu_2579_p2 = (i_1_0_reg_1059 | 6'd22);

assign or_ln182_22_fu_2590_p2 = (i_1_0_reg_1059 | 6'd23);

assign or_ln182_23_fu_3149_p2 = (i_1_0_reg_1059 | 6'd24);

assign or_ln182_2_fu_2370_p2 = (i_1_0_reg_1059 | 6'd3);

assign or_ln182_3_fu_2381_p2 = (i_1_0_reg_1059 | 6'd4);

assign or_ln182_4_fu_2392_p2 = (i_1_0_reg_1059 | 6'd5);

assign or_ln182_5_fu_2403_p2 = (i_1_0_reg_1059 | 6'd6);

assign or_ln182_6_fu_2414_p2 = (i_1_0_reg_1059 | 6'd7);

assign or_ln182_7_fu_2425_p2 = (i_1_0_reg_1059 | 6'd8);

assign or_ln182_8_fu_2436_p2 = (i_1_0_reg_1059 | 6'd9);

assign or_ln182_9_fu_2447_p2 = (i_1_0_reg_1059 | 6'd10);

assign or_ln182_fu_2348_p2 = (i_1_0_reg_1059 | 6'd1);

assign or_ln1_fu_3528_p3 = {{trunc_ln218_1_reg_4626}, {trunc_ln218_fu_3524_p1}};

assign or_ln241_fu_3770_p2 = (trunc_ln240_1_fu_3758_p1 | tmp_16_fu_3762_p3);

assign or_ln_fu_2274_p34 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{trunc_ln173_reg_4193}, {trunc_ln174_fu_1681_p1}}, {trunc_ln174_1_fu_1700_p1}}, {trunc_ln174_2_fu_1719_p1}}, {trunc_ln174_3_fu_1738_p1}}, {trunc_ln174_4_fu_1757_p1}}, {trunc_ln174_5_fu_1776_p1}}, {trunc_ln174_6_fu_1795_p1}}, {trunc_ln174_7_fu_1814_p1}}, {trunc_ln174_8_fu_1833_p1}}, {trunc_ln174_9_fu_1852_p1}}, {trunc_ln174_10_fu_1871_p1}}, {trunc_ln174_11_fu_1890_p1}}, {trunc_ln174_12_fu_1909_p1}}, {trunc_ln174_13_fu_1928_p1}}, {trunc_ln174_14_fu_1947_p1}}, {trunc_ln174_15_fu_1966_p1}}, {trunc_ln174_16_fu_1985_p1}}, {trunc_ln174_17_fu_2004_p1}}, {trunc_ln174_18_fu_2023_p1}}, {trunc_ln174_19_fu_2042_p1}}, {trunc_ln174_20_fu_2061_p1}}, {trunc_ln174_21_fu_2080_p1}}, {trunc_ln174_22_fu_2099_p1}}, {trunc_ln174_23_fu_2118_p1}}, {trunc_ln174_24_fu_2137_p1}}, {trunc_ln174_25_fu_2156_p1}}, {trunc_ln174_26_fu_2175_p1}}, {trunc_ln174_27_fu_2194_p1}}, {trunc_ln174_28_fu_2213_p1}}, {trunc_ln171_fu_2232_p1}}, {trunc_ln174_29_fu_2251_p1}}, {trunc_ln174_30_fu_2270_p1}};

assign pre_output_fu_3547_p3 = {{temp_reg_1116}, {L_0_reg_1126}};

assign s_input_fu_3607_p3 = {{trunc_ln229_1_fu_3603_p1}, {trunc_ln229_fu_3599_p1}};

assign s_output_fu_3864_p3 = {{trunc_ln246_1_fu_3860_p1}, {S_q0}};

assign sext_ln240_fu_3727_p1 = $signed(sub_ln240_reg_4690);

assign sext_ln246_1_fu_3824_p1 = $signed(trunc_ln246_fu_3820_p1);

assign sext_ln246_2_fu_3834_p1 = $signed(add_ln246_fu_3828_p2);

assign sext_ln246_3_fu_3856_p1 = $signed(add_ln246_1_reg_4705);

assign sext_ln246_fu_3816_p1 = $signed(tmp_14_fu_3806_p4);

assign shl_ln1_fu_3659_p3 = {{trunc_ln240_fu_3655_p1}, {3'd0}};

assign shl_ln240_1_fu_3691_p3 = {{trunc_ln240_fu_3655_p1}, {2'd0}};

assign shl_ln240_fu_3671_p2 = j_2_reg_1172 << 4'd1;

assign shl_ln_fu_3238_p35 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_4_reg_4544}, {trunc_ln184_reg_4393}}, {trunc_ln184_1_reg_4399}}, {trunc_ln184_2_reg_4405}}, {trunc_ln184_3_reg_4411}}, {trunc_ln184_4_reg_4417}}, {trunc_ln184_5_reg_4423}}, {trunc_ln182_reg_4429}}, {trunc_ln184_6_reg_4435}}, {trunc_ln184_7_reg_4441}}, {trunc_ln184_8_reg_4447}}, {trunc_ln184_9_reg_4453}}, {trunc_ln184_10_reg_4459}}, {trunc_ln184_11_reg_4465}}, {trunc_ln184_12_reg_4471}}, {trunc_ln182_1_reg_4477}}, {trunc_ln182_2_reg_4483}}, {trunc_ln184_13_reg_4489}}, {trunc_ln184_14_reg_4495}}, {trunc_ln184_15_reg_4501}}, {trunc_ln184_16_reg_4507}}, {trunc_ln184_17_reg_4513}}, {trunc_ln182_3_reg_4519}}, {trunc_ln184_18_reg_4525}}, {trunc_ln184_20_reg_4534}}, {trunc_ln184_21_fu_3234_p1}}, {tmp_1_reg_4233}}, {tmp_5_reg_4238}}, {tmp_6_reg_4243}}, {tmp_7_reg_4248}}, {tmp_8_reg_4253}}, {tmp_10_reg_4258}}, {tmp_11_reg_4263}}, {1'd0}};

assign sub_ln174_10_fu_1856_p2 = ($signed(7'd64) - $signed(IP_q10));

assign sub_ln174_11_fu_1875_p2 = ($signed(7'd64) - $signed(IP_q11));

assign sub_ln174_12_fu_1894_p2 = ($signed(7'd64) - $signed(IP_q12));

assign sub_ln174_13_fu_1913_p2 = ($signed(7'd64) - $signed(IP_q13));

assign sub_ln174_14_fu_1932_p2 = ($signed(7'd64) - $signed(IP_q14));

assign sub_ln174_15_fu_1951_p2 = ($signed(7'd64) - $signed(IP_q15));

assign sub_ln174_16_fu_1970_p2 = ($signed(7'd64) - $signed(IP_q16));

assign sub_ln174_17_fu_1989_p2 = ($signed(7'd64) - $signed(IP_q17));

assign sub_ln174_18_fu_2008_p2 = ($signed(7'd64) - $signed(IP_q18));

assign sub_ln174_19_fu_2027_p2 = ($signed(7'd64) - $signed(IP_q19));

assign sub_ln174_1_fu_1685_p2 = ($signed(7'd64) - $signed(IP_q1));

assign sub_ln174_20_fu_2046_p2 = ($signed(7'd64) - $signed(IP_q20));

assign sub_ln174_21_fu_2065_p2 = ($signed(7'd64) - $signed(IP_q21));

assign sub_ln174_22_fu_2084_p2 = ($signed(7'd64) - $signed(IP_q22));

assign sub_ln174_23_fu_2103_p2 = ($signed(7'd64) - $signed(IP_q23));

assign sub_ln174_24_fu_2122_p2 = ($signed(7'd64) - $signed(IP_q24));

assign sub_ln174_25_fu_2141_p2 = ($signed(7'd64) - $signed(IP_q25));

assign sub_ln174_26_fu_2160_p2 = ($signed(7'd64) - $signed(IP_q26));

assign sub_ln174_27_fu_2179_p2 = ($signed(7'd64) - $signed(IP_q27));

assign sub_ln174_28_fu_2198_p2 = ($signed(7'd64) - $signed(IP_q28));

assign sub_ln174_29_fu_2217_p2 = ($signed(7'd64) - $signed(IP_q29));

assign sub_ln174_2_fu_1704_p2 = ($signed(7'd64) - $signed(IP_q2));

assign sub_ln174_30_fu_2236_p2 = ($signed(7'd64) - $signed(IP_q30));

assign sub_ln174_31_fu_2255_p2 = ($signed(7'd64) - $signed(IP_q31));

assign sub_ln174_3_fu_1723_p2 = ($signed(7'd64) - $signed(IP_q3));

assign sub_ln174_4_fu_1742_p2 = ($signed(7'd64) - $signed(IP_q4));

assign sub_ln174_5_fu_1761_p2 = ($signed(7'd64) - $signed(IP_q5));

assign sub_ln174_6_fu_1780_p2 = ($signed(7'd64) - $signed(IP_q6));

assign sub_ln174_7_fu_1799_p2 = ($signed(7'd64) - $signed(IP_q7));

assign sub_ln174_8_fu_1818_p2 = ($signed(7'd64) - $signed(IP_q8));

assign sub_ln174_9_fu_1837_p2 = ($signed(7'd64) - $signed(IP_q9));

assign sub_ln174_fu_1666_p2 = ($signed(7'd64) - $signed(IP_q0));

assign sub_ln184_10_fu_2835_p2 = ($signed(7'd64) - $signed(zext_ln184_46_fu_2831_p1));

assign sub_ln184_11_fu_2858_p2 = ($signed(7'd64) - $signed(zext_ln184_48_fu_2854_p1));

assign sub_ln184_12_fu_2881_p2 = ($signed(7'd64) - $signed(zext_ln184_50_fu_2877_p1));

assign sub_ln184_13_fu_2904_p2 = ($signed(7'd64) - $signed(zext_ln184_52_fu_2900_p1));

assign sub_ln184_14_fu_2927_p2 = ($signed(7'd64) - $signed(zext_ln184_54_fu_2923_p1));

assign sub_ln184_15_fu_2950_p2 = ($signed(7'd64) - $signed(zext_ln184_56_fu_2946_p1));

assign sub_ln184_16_fu_2973_p2 = ($signed(7'd64) - $signed(zext_ln184_58_fu_2969_p1));

assign sub_ln184_17_fu_2996_p2 = ($signed(7'd64) - $signed(zext_ln184_60_fu_2992_p1));

assign sub_ln184_18_fu_3019_p2 = ($signed(7'd64) - $signed(zext_ln184_62_fu_3015_p1));

assign sub_ln184_19_fu_3042_p2 = ($signed(7'd64) - $signed(zext_ln184_64_fu_3038_p1));

assign sub_ln184_1_fu_2628_p2 = ($signed(7'd64) - $signed(zext_ln184_28_fu_2624_p1));

assign sub_ln184_20_fu_3065_p2 = ($signed(7'd64) - $signed(zext_ln184_66_fu_3061_p1));

assign sub_ln184_21_fu_3088_p2 = ($signed(7'd64) - $signed(zext_ln184_68_fu_3084_p1));

assign sub_ln184_22_fu_3111_p2 = ($signed(7'd64) - $signed(zext_ln184_70_fu_3107_p1));

assign sub_ln184_23_fu_3134_p2 = ($signed(7'd64) - $signed(zext_ln184_72_fu_3130_p1));

assign sub_ln184_24_fu_3219_p2 = ($signed(7'd64) - $signed(zext_ln184_74_fu_3215_p1));

assign sub_ln184_2_fu_2651_p2 = ($signed(7'd64) - $signed(zext_ln184_30_fu_2647_p1));

assign sub_ln184_3_fu_2674_p2 = ($signed(7'd64) - $signed(zext_ln184_32_fu_2670_p1));

assign sub_ln184_4_fu_2697_p2 = ($signed(7'd64) - $signed(zext_ln184_34_fu_2693_p1));

assign sub_ln184_5_fu_2720_p2 = ($signed(7'd64) - $signed(zext_ln184_36_fu_2716_p1));

assign sub_ln184_6_fu_2743_p2 = ($signed(7'd64) - $signed(zext_ln184_38_fu_2739_p1));

assign sub_ln184_7_fu_2766_p2 = ($signed(7'd64) - $signed(zext_ln184_40_fu_2762_p1));

assign sub_ln184_8_fu_2789_p2 = ($signed(7'd64) - $signed(zext_ln184_42_fu_2785_p1));

assign sub_ln184_9_fu_2812_p2 = ($signed(7'd64) - $signed(zext_ln184_44_fu_2808_p1));

assign sub_ln184_fu_2605_p2 = ($signed(7'd64) - $signed(zext_ln184_25_fu_2601_p1));

assign sub_ln218_fu_3509_p2 = ($signed(6'd56) - $signed(PC2_q0));

assign sub_ln229_fu_3583_p2 = ($signed(6'd32) - $signed(E_q0));

assign sub_ln232_fu_3572_p2 = (5'd15 - i_3_reg_1137);

assign sub_ln240_1_fu_3703_p2 = ($signed(6'd42) - $signed(zext_ln240_1_fu_3677_p1));

assign sub_ln240_2_fu_3709_p2 = (sub_ln240_1_fu_3703_p2 - zext_ln240_5_fu_3699_p1);

assign sub_ln240_fu_3685_p2 = (zext_ln240_fu_3667_p1 - zext_ln240_2_fu_3681_p1);

assign sub_ln243_1_fu_3721_p2 = (sub_ln243_fu_3715_p2 - zext_ln240_5_fu_3699_p1);

assign sub_ln243_fu_3715_p2 = ($signed(6'd43) - $signed(zext_ln240_1_fu_3677_p1));

assign sub_ln254_fu_3904_p2 = ($signed(6'd32) - $signed(P_q0));

assign sub_ln270_fu_3952_p2 = ($signed(7'd64) - $signed(PI_q0));

assign tmp_12_fu_3776_p4 = {{lshr_ln240_1_fu_3752_p2[7:5]}};

assign tmp_13_fu_3420_p3 = C_1_fu_248[32'd27];

assign tmp_14_fu_3806_p4 = {{{tmp_12_fu_3776_p4}, {or_ln241_fu_3770_p2}}, {4'd0}};

assign tmp_15_fu_3440_p3 = D_1_fu_252[32'd27];

assign tmp_16_fu_3762_p3 = lshr_ln240_1_fu_3752_p2[32'd4];

assign tmp_17_fu_3838_p3 = {{j_2_reg_1172}, {6'd0}};

assign tmp_2_fu_3370_p4 = {{C_1_fu_248[27:26]}};

assign tmp_9_fu_3480_p3 = {{C_1_fu_248}, {D_1_fu_252}};

assign tmp_s_fu_3392_p4 = {{D_1_fu_252[27:26]}};

assign trunc_ln171_fu_2232_p1 = lshr_ln174_29_fu_2227_p2[0:0];

assign trunc_ln173_fu_1555_p1 = init_perm_res_0_0_reg_1037[31:0];

assign trunc_ln174_10_fu_1871_p1 = lshr_ln174_10_fu_1866_p2[0:0];

assign trunc_ln174_11_fu_1890_p1 = lshr_ln174_11_fu_1885_p2[0:0];

assign trunc_ln174_12_fu_1909_p1 = lshr_ln174_12_fu_1904_p2[0:0];

assign trunc_ln174_13_fu_1928_p1 = lshr_ln174_13_fu_1923_p2[0:0];

assign trunc_ln174_14_fu_1947_p1 = lshr_ln174_14_fu_1942_p2[0:0];

assign trunc_ln174_15_fu_1966_p1 = lshr_ln174_15_fu_1961_p2[0:0];

assign trunc_ln174_16_fu_1985_p1 = lshr_ln174_16_fu_1980_p2[0:0];

assign trunc_ln174_17_fu_2004_p1 = lshr_ln174_17_fu_1999_p2[0:0];

assign trunc_ln174_18_fu_2023_p1 = lshr_ln174_18_fu_2018_p2[0:0];

assign trunc_ln174_19_fu_2042_p1 = lshr_ln174_19_fu_2037_p2[0:0];

assign trunc_ln174_1_fu_1700_p1 = lshr_ln174_1_fu_1695_p2[0:0];

assign trunc_ln174_20_fu_2061_p1 = lshr_ln174_20_fu_2056_p2[0:0];

assign trunc_ln174_21_fu_2080_p1 = lshr_ln174_21_fu_2075_p2[0:0];

assign trunc_ln174_22_fu_2099_p1 = lshr_ln174_22_fu_2094_p2[0:0];

assign trunc_ln174_23_fu_2118_p1 = lshr_ln174_23_fu_2113_p2[0:0];

assign trunc_ln174_24_fu_2137_p1 = lshr_ln174_24_fu_2132_p2[0:0];

assign trunc_ln174_25_fu_2156_p1 = lshr_ln174_25_fu_2151_p2[0:0];

assign trunc_ln174_26_fu_2175_p1 = lshr_ln174_26_fu_2170_p2[0:0];

assign trunc_ln174_27_fu_2194_p1 = lshr_ln174_27_fu_2189_p2[0:0];

assign trunc_ln174_28_fu_2213_p1 = lshr_ln174_28_fu_2208_p2[0:0];

assign trunc_ln174_29_fu_2251_p1 = lshr_ln174_30_fu_2246_p2[0:0];

assign trunc_ln174_2_fu_1719_p1 = lshr_ln174_2_fu_1714_p2[0:0];

assign trunc_ln174_30_fu_2270_p1 = lshr_ln174_31_fu_2265_p2[0:0];

assign trunc_ln174_3_fu_1738_p1 = lshr_ln174_3_fu_1733_p2[0:0];

assign trunc_ln174_4_fu_1757_p1 = lshr_ln174_4_fu_1752_p2[0:0];

assign trunc_ln174_5_fu_1776_p1 = lshr_ln174_5_fu_1771_p2[0:0];

assign trunc_ln174_6_fu_1795_p1 = lshr_ln174_6_fu_1790_p2[0:0];

assign trunc_ln174_7_fu_1814_p1 = lshr_ln174_7_fu_1809_p2[0:0];

assign trunc_ln174_8_fu_1833_p1 = lshr_ln174_8_fu_1828_p2[0:0];

assign trunc_ln174_9_fu_1852_p1 = lshr_ln174_9_fu_1847_p2[0:0];

assign trunc_ln174_fu_1681_p1 = lshr_ln174_fu_1676_p2[0:0];

assign trunc_ln182_1_fu_2942_p1 = lshr_ln184_14_fu_2937_p2[0:0];

assign trunc_ln182_2_fu_2965_p1 = lshr_ln184_15_fu_2960_p2[0:0];

assign trunc_ln182_3_fu_3103_p1 = lshr_ln184_21_fu_3098_p2[0:0];

assign trunc_ln182_fu_2758_p1 = lshr_ln184_6_fu_2753_p2[0:0];

assign trunc_ln184_10_fu_2873_p1 = lshr_ln184_11_fu_2868_p2[0:0];

assign trunc_ln184_11_fu_2896_p1 = lshr_ln184_12_fu_2891_p2[0:0];

assign trunc_ln184_12_fu_2919_p1 = lshr_ln184_13_fu_2914_p2[0:0];

assign trunc_ln184_13_fu_2988_p1 = lshr_ln184_16_fu_2983_p2[0:0];

assign trunc_ln184_14_fu_3011_p1 = lshr_ln184_17_fu_3006_p2[0:0];

assign trunc_ln184_15_fu_3034_p1 = lshr_ln184_18_fu_3029_p2[0:0];

assign trunc_ln184_16_fu_3057_p1 = lshr_ln184_19_fu_3052_p2[0:0];

assign trunc_ln184_17_fu_3080_p1 = lshr_ln184_20_fu_3075_p2[0:0];

assign trunc_ln184_18_fu_3126_p1 = lshr_ln184_22_fu_3121_p2[0:0];

assign trunc_ln184_19_fu_3186_p1 = lshr_ln184_23_fu_3144_p2[0:0];

assign trunc_ln184_1_fu_2643_p1 = lshr_ln184_1_fu_2638_p2[0:0];

assign trunc_ln184_20_fu_3161_p1 = lshr_ln184_23_fu_3144_p2[0:0];

assign trunc_ln184_21_fu_3234_p1 = lshr_ln184_24_fu_3229_p2[0:0];

assign trunc_ln184_2_fu_2666_p1 = lshr_ln184_2_fu_2661_p2[0:0];

assign trunc_ln184_3_fu_2689_p1 = lshr_ln184_3_fu_2684_p2[0:0];

assign trunc_ln184_4_fu_2712_p1 = lshr_ln184_4_fu_2707_p2[0:0];

assign trunc_ln184_5_fu_2735_p1 = lshr_ln184_5_fu_2730_p2[0:0];

assign trunc_ln184_6_fu_2781_p1 = lshr_ln184_7_fu_2776_p2[0:0];

assign trunc_ln184_7_fu_2804_p1 = lshr_ln184_8_fu_2799_p2[0:0];

assign trunc_ln184_8_fu_2827_p1 = lshr_ln184_9_fu_2822_p2[0:0];

assign trunc_ln184_9_fu_2850_p1 = lshr_ln184_10_fu_2845_p2[0:0];

assign trunc_ln184_fu_2620_p1 = lshr_ln184_fu_2615_p2[0:0];

assign trunc_ln197_fu_3428_p1 = C_1_fu_248[26:0];

assign trunc_ln198_fu_3448_p1 = D_1_fu_252[26:0];

assign trunc_ln203_fu_3366_p1 = C_1_fu_248[25:0];

assign trunc_ln204_fu_3388_p1 = D_1_fu_252[25:0];

assign trunc_ln218_1_fu_3505_p1 = sub_key_load_1_reg_1093[62:0];

assign trunc_ln218_fu_3524_p1 = lshr_ln218_fu_3519_p2[0:0];

assign trunc_ln229_1_fu_3603_p1 = s_input_0_reg_1149[62:0];

assign trunc_ln229_fu_3599_p1 = lshr_ln229_fu_3593_p2[0:0];

assign trunc_ln232_1_fu_3619_p1 = sub_key_q0[47:0];

assign trunc_ln232_2_fu_3623_p1 = s_input_0_reg_1149[46:0];

assign trunc_ln232_3_fu_3627_p1 = sub_key_q0[46:0];

assign trunc_ln232_fu_3615_p1 = s_input_0_reg_1149[47:0];

assign trunc_ln240_1_fu_3758_p1 = lshr_ln240_1_fu_3752_p2[0:0];

assign trunc_ln240_fu_3655_p1 = j_2_reg_1172[2:0];

assign trunc_ln246_1_fu_3860_p1 = s_output_1_fu_256[27:0];

assign trunc_ln246_fu_3820_p1 = lshr_ln243_1_fu_3800_p2[7:0];

assign trunc_ln254_1_fu_3894_p1 = f_function_res_0_reg_1184[30:0];

assign trunc_ln254_fu_3920_p1 = lshr_ln254_fu_3914_p2[0:0];

assign trunc_ln270_1_fu_3948_p1 = inv_init_perm_res_0_reg_1217[62:0];

assign trunc_ln270_fu_3967_p1 = lshr_ln270_fu_3962_p2[0:0];

assign xor_ln182_fu_3180_p2 = (i_1_0_reg_1059 ^ 6'd32);

assign xor_ln232_1_fu_3637_p2 = (trunc_ln232_fu_3615_p1 ^ trunc_ln232_1_fu_3619_p1);

assign xor_ln232_fu_3631_p2 = (trunc_ln232_3_fu_3627_p1 ^ trunc_ln232_2_fu_3623_p1);

assign zext_ln174_10_fu_1862_p1 = sub_ln174_10_fu_1856_p2;

assign zext_ln174_11_fu_1881_p1 = sub_ln174_11_fu_1875_p2;

assign zext_ln174_12_fu_1900_p1 = sub_ln174_12_fu_1894_p2;

assign zext_ln174_13_fu_1919_p1 = sub_ln174_13_fu_1913_p2;

assign zext_ln174_14_fu_1938_p1 = sub_ln174_14_fu_1932_p2;

assign zext_ln174_15_fu_1957_p1 = sub_ln174_15_fu_1951_p2;

assign zext_ln174_16_fu_1976_p1 = sub_ln174_16_fu_1970_p2;

assign zext_ln174_17_fu_1995_p1 = sub_ln174_17_fu_1989_p2;

assign zext_ln174_18_fu_2014_p1 = sub_ln174_18_fu_2008_p2;

assign zext_ln174_19_fu_2033_p1 = sub_ln174_19_fu_2027_p2;

assign zext_ln174_1_fu_1691_p1 = sub_ln174_1_fu_1685_p2;

assign zext_ln174_20_fu_2052_p1 = sub_ln174_20_fu_2046_p2;

assign zext_ln174_21_fu_2071_p1 = sub_ln174_21_fu_2065_p2;

assign zext_ln174_22_fu_2090_p1 = sub_ln174_22_fu_2084_p2;

assign zext_ln174_23_fu_2109_p1 = sub_ln174_23_fu_2103_p2;

assign zext_ln174_24_fu_2128_p1 = sub_ln174_24_fu_2122_p2;

assign zext_ln174_25_fu_2147_p1 = sub_ln174_25_fu_2141_p2;

assign zext_ln174_26_fu_2166_p1 = sub_ln174_26_fu_2160_p2;

assign zext_ln174_27_fu_2185_p1 = sub_ln174_27_fu_2179_p2;

assign zext_ln174_28_fu_2204_p1 = sub_ln174_28_fu_2198_p2;

assign zext_ln174_29_fu_2223_p1 = sub_ln174_29_fu_2217_p2;

assign zext_ln174_2_fu_1710_p1 = sub_ln174_2_fu_1704_p2;

assign zext_ln174_30_fu_2242_p1 = sub_ln174_30_fu_2236_p2;

assign zext_ln174_31_fu_2261_p1 = sub_ln174_31_fu_2255_p2;

assign zext_ln174_32_fu_1672_p1 = sub_ln174_fu_1666_p2;

assign zext_ln174_33_fu_1258_p1 = or_ln171_fu_1252_p2;

assign zext_ln174_34_fu_1269_p1 = or_ln171_1_fu_1263_p2;

assign zext_ln174_35_fu_1280_p1 = or_ln171_2_fu_1274_p2;

assign zext_ln174_36_fu_1291_p1 = or_ln171_3_fu_1285_p2;

assign zext_ln174_37_fu_1302_p1 = or_ln171_4_fu_1296_p2;

assign zext_ln174_38_fu_1313_p1 = or_ln171_5_fu_1307_p2;

assign zext_ln174_39_fu_1324_p1 = or_ln171_6_fu_1318_p2;

assign zext_ln174_3_fu_1729_p1 = sub_ln174_3_fu_1723_p2;

assign zext_ln174_40_fu_1335_p1 = or_ln171_7_fu_1329_p2;

assign zext_ln174_41_fu_1346_p1 = or_ln171_8_fu_1340_p2;

assign zext_ln174_42_fu_1357_p1 = or_ln171_9_fu_1351_p2;

assign zext_ln174_43_fu_1368_p1 = or_ln171_10_fu_1362_p2;

assign zext_ln174_44_fu_1379_p1 = or_ln171_11_fu_1373_p2;

assign zext_ln174_45_fu_1390_p1 = or_ln171_12_fu_1384_p2;

assign zext_ln174_46_fu_1401_p1 = or_ln171_13_fu_1395_p2;

assign zext_ln174_47_fu_1412_p1 = or_ln171_14_fu_1406_p2;

assign zext_ln174_48_fu_1423_p1 = or_ln171_15_fu_1417_p2;

assign zext_ln174_49_fu_1434_p1 = or_ln171_16_fu_1428_p2;

assign zext_ln174_4_fu_1748_p1 = sub_ln174_4_fu_1742_p2;

assign zext_ln174_50_fu_1445_p1 = or_ln171_17_fu_1439_p2;

assign zext_ln174_51_fu_1456_p1 = or_ln171_18_fu_1450_p2;

assign zext_ln174_52_fu_1467_p1 = or_ln171_19_fu_1461_p2;

assign zext_ln174_53_fu_1478_p1 = or_ln171_20_fu_1472_p2;

assign zext_ln174_54_fu_1489_p1 = or_ln171_21_fu_1483_p2;

assign zext_ln174_55_fu_1500_p1 = or_ln171_22_fu_1494_p2;

assign zext_ln174_56_fu_1511_p1 = or_ln171_23_fu_1505_p2;

assign zext_ln174_57_fu_1522_p1 = or_ln171_24_fu_1516_p2;

assign zext_ln174_58_fu_1533_p1 = or_ln171_25_fu_1527_p2;

assign zext_ln174_59_fu_1544_p1 = or_ln171_26_fu_1538_p2;

assign zext_ln174_5_fu_1767_p1 = sub_ln174_5_fu_1761_p2;

assign zext_ln174_60_fu_1559_p1 = or_ln171_27_fu_1549_p2;

assign zext_ln174_61_fu_1570_p1 = or_ln171_28_fu_1564_p2;

assign zext_ln174_62_fu_1581_p1 = or_ln171_29_fu_1575_p2;

assign zext_ln174_63_fu_1592_p1 = or_ln171_30_fu_1586_p2;

assign zext_ln174_6_fu_1786_p1 = sub_ln174_6_fu_1780_p2;

assign zext_ln174_7_fu_1805_p1 = sub_ln174_7_fu_1799_p2;

assign zext_ln174_8_fu_1824_p1 = sub_ln174_8_fu_1818_p2;

assign zext_ln174_9_fu_1843_p1 = sub_ln174_9_fu_1837_p2;

assign zext_ln174_fu_1243_p1 = i_0_0_reg_1048;

assign zext_ln184_10_fu_2841_p1 = sub_ln184_10_fu_2835_p2;

assign zext_ln184_11_fu_2864_p1 = sub_ln184_11_fu_2858_p2;

assign zext_ln184_12_fu_2887_p1 = sub_ln184_12_fu_2881_p2;

assign zext_ln184_13_fu_2910_p1 = sub_ln184_13_fu_2904_p2;

assign zext_ln184_14_fu_2933_p1 = sub_ln184_14_fu_2927_p2;

assign zext_ln184_15_fu_2956_p1 = sub_ln184_15_fu_2950_p2;

assign zext_ln184_16_fu_2979_p1 = sub_ln184_16_fu_2973_p2;

assign zext_ln184_17_fu_3002_p1 = sub_ln184_17_fu_2996_p2;

assign zext_ln184_18_fu_3025_p1 = sub_ln184_18_fu_3019_p2;

assign zext_ln184_19_fu_3048_p1 = sub_ln184_19_fu_3042_p2;

assign zext_ln184_1_fu_2634_p1 = sub_ln184_1_fu_2628_p2;

assign zext_ln184_20_fu_3071_p1 = sub_ln184_20_fu_3065_p2;

assign zext_ln184_21_fu_3094_p1 = sub_ln184_21_fu_3088_p2;

assign zext_ln184_22_fu_3117_p1 = sub_ln184_22_fu_3111_p2;

assign zext_ln184_23_fu_3140_p1 = sub_ln184_23_fu_3134_p2;

assign zext_ln184_24_fu_3225_p1 = sub_ln184_24_fu_3219_p2;

assign zext_ln184_25_fu_2601_p1 = PC1_q0;

assign zext_ln184_26_fu_2611_p1 = sub_ln184_fu_2605_p2;

assign zext_ln184_27_fu_2354_p1 = or_ln182_fu_2348_p2;

assign zext_ln184_28_fu_2624_p1 = PC1_q1;

assign zext_ln184_29_fu_2365_p1 = or_ln182_1_fu_2359_p2;

assign zext_ln184_2_fu_2657_p1 = sub_ln184_2_fu_2651_p2;

assign zext_ln184_30_fu_2647_p1 = PC1_q2;

assign zext_ln184_31_fu_2376_p1 = or_ln182_2_fu_2370_p2;

assign zext_ln184_32_fu_2670_p1 = PC1_q3;

assign zext_ln184_33_fu_2387_p1 = or_ln182_3_fu_2381_p2;

assign zext_ln184_34_fu_2693_p1 = PC1_q4;

assign zext_ln184_35_fu_2398_p1 = or_ln182_4_fu_2392_p2;

assign zext_ln184_36_fu_2716_p1 = PC1_q5;

assign zext_ln184_37_fu_2409_p1 = or_ln182_5_fu_2403_p2;

assign zext_ln184_38_fu_2739_p1 = PC1_q6;

assign zext_ln184_39_fu_2420_p1 = or_ln182_6_fu_2414_p2;

assign zext_ln184_3_fu_2680_p1 = sub_ln184_3_fu_2674_p2;

assign zext_ln184_40_fu_2762_p1 = PC1_q7;

assign zext_ln184_41_fu_2431_p1 = or_ln182_7_fu_2425_p2;

assign zext_ln184_42_fu_2785_p1 = PC1_q8;

assign zext_ln184_43_fu_2442_p1 = or_ln182_8_fu_2436_p2;

assign zext_ln184_44_fu_2808_p1 = PC1_q9;

assign zext_ln184_45_fu_2453_p1 = or_ln182_9_fu_2447_p2;

assign zext_ln184_46_fu_2831_p1 = PC1_q10;

assign zext_ln184_47_fu_2464_p1 = or_ln182_10_fu_2458_p2;

assign zext_ln184_48_fu_2854_p1 = PC1_q11;

assign zext_ln184_49_fu_2475_p1 = or_ln182_11_fu_2469_p2;

assign zext_ln184_4_fu_2703_p1 = sub_ln184_4_fu_2697_p2;

assign zext_ln184_50_fu_2877_p1 = PC1_q12;

assign zext_ln184_51_fu_2486_p1 = or_ln182_12_fu_2480_p2;

assign zext_ln184_52_fu_2900_p1 = PC1_q13;

assign zext_ln184_53_fu_2497_p1 = or_ln182_13_fu_2491_p2;

assign zext_ln184_54_fu_2923_p1 = PC1_q14;

assign zext_ln184_55_fu_2508_p1 = or_ln182_14_fu_2502_p2;

assign zext_ln184_56_fu_2946_p1 = PC1_q15;

assign zext_ln184_57_fu_2519_p1 = or_ln182_15_fu_2513_p2;

assign zext_ln184_58_fu_2969_p1 = PC1_q16;

assign zext_ln184_59_fu_2530_p1 = or_ln182_16_fu_2524_p2;

assign zext_ln184_5_fu_2726_p1 = sub_ln184_5_fu_2720_p2;

assign zext_ln184_60_fu_2992_p1 = PC1_q17;

assign zext_ln184_61_fu_2541_p1 = or_ln182_17_fu_2535_p2;

assign zext_ln184_62_fu_3015_p1 = PC1_q18;

assign zext_ln184_63_fu_2552_p1 = or_ln182_18_fu_2546_p2;

assign zext_ln184_64_fu_3038_p1 = PC1_q19;

assign zext_ln184_65_fu_2563_p1 = or_ln182_19_fu_2557_p2;

assign zext_ln184_66_fu_3061_p1 = PC1_q20;

assign zext_ln184_67_fu_2574_p1 = or_ln182_20_fu_2568_p2;

assign zext_ln184_68_fu_3084_p1 = PC1_q21;

assign zext_ln184_69_fu_2585_p1 = or_ln182_21_fu_2579_p2;

assign zext_ln184_6_fu_2749_p1 = sub_ln184_6_fu_2743_p2;

assign zext_ln184_70_fu_3107_p1 = PC1_q22;

assign zext_ln184_71_fu_2596_p1 = or_ln182_22_fu_2590_p2;

assign zext_ln184_72_fu_3130_p1 = PC1_q23;

assign zext_ln184_73_fu_3165_p1 = or_ln182_23_fu_3149_p2;

assign zext_ln184_74_fu_3215_p1 = PC1_q0;

assign zext_ln184_7_fu_2772_p1 = sub_ln184_7_fu_2766_p2;

assign zext_ln184_8_fu_2795_p1 = sub_ln184_8_fu_2789_p2;

assign zext_ln184_9_fu_2818_p1 = sub_ln184_9_fu_2812_p2;

assign zext_ln184_fu_2343_p1 = i_1_0_reg_1059;

assign zext_ln214_fu_3470_p1 = i_2_reg_1082;

assign zext_ln218_1_fu_3515_p1 = sub_ln218_fu_3509_p2;

assign zext_ln218_fu_3500_p1 = j_0_reg_1105;

assign zext_ln229_1_fu_3589_p1 = sub_ln229_fu_3583_p2;

assign zext_ln229_fu_3567_p1 = j_1_reg_1161;

assign zext_ln232_fu_3578_p1 = sub_ln232_fu_3572_p2;

assign zext_ln240_1_fu_3677_p1 = shl_ln240_fu_3671_p2;

assign zext_ln240_2_fu_3681_p1 = shl_ln240_fu_3671_p2;

assign zext_ln240_3_fu_3730_p1 = $unsigned(sext_ln240_fu_3727_p1);

assign zext_ln240_4_fu_3734_p1 = $unsigned(sext_ln240_fu_3727_p1);

assign zext_ln240_5_fu_3699_p1 = shl_ln240_1_fu_3691_p3;

assign zext_ln240_6_fu_3749_p1 = sub_ln240_2_reg_4695;

assign zext_ln240_fu_3667_p1 = shl_ln1_fu_3659_p3;

assign zext_ln243_fu_3797_p1 = sub_ln243_1_reg_4700;

assign zext_ln246_fu_3846_p1 = tmp_17_fu_3838_p3;

assign zext_ln254_1_fu_3910_p1 = sub_ln254_fu_3904_p2;

assign zext_ln254_fu_3889_p1 = j_3_reg_1195;

assign zext_ln270_1_fu_3943_p1 = i_4_reg_1206;

assign zext_ln270_fu_3958_p1 = sub_ln270_fu_3952_p2;

always @ (posedge ap_clk) begin
    sub_ln240_reg_4690[0] <= 1'b0;
    sub_ln240_2_reg_4695[0] <= 1'b0;
    sub_ln243_1_reg_4700[0] <= 1'b1;
    phi_ln183_reg_1071[0] <= 1'b0;
end

endmodule //des_dec

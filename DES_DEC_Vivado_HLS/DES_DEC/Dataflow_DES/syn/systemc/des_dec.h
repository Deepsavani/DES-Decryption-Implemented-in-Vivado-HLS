// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _des_dec_HH_
#define _des_dec_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "des_dec_entry7.h"
#include "Loop_unroll1_proc.h"
#include "Block_des_dec_exit2.h"
#include "Loop_unroll2_proc.h"
#include "Loop_3_proc.h"
#include "Loop_Pipeline_loop4_s.h"
#include "Loop_5_proc.h"
#include "p_desDecrypt_c_line2.h"
#include "des_dec_sub_key.h"
#include "fifo_w64_d2_A.h"
#include "fifo_w32_d2_A.h"
#include "fifo_w60_d2_A.h"
#include "start_for_Loop_ung8j.h"
#include "start_for_Loop_unhbi.h"

namespace ap_rtl {

struct des_dec : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<64> > input_r;
    sc_in< sc_lv<64> > key;
    sc_in< sc_logic > ap_start;
    sc_out< sc_lv<64> > ap_return;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > ap_idle;
    sc_signal< sc_logic > ap_var_for_const2;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<64> > ap_var_for_const1;


    // Module declarations
    des_dec(sc_module_name name);
    SC_HAS_PROCESS(des_dec);

    ~des_dec();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    des_dec_sub_key* sub_key_U;
    des_dec_entry7* des_dec_entry7_U0;
    Loop_unroll1_proc* Loop_unroll1_proc_U0;
    Block_des_dec_exit2* Block_des_dec_exit2_U0;
    Loop_unroll2_proc* Loop_unroll2_proc_U0;
    Loop_3_proc* Loop_3_proc_U0;
    Loop_Pipeline_loop4_s* Loop_Pipeline_loop4_U0;
    Loop_5_proc* Loop_5_proc_U0;
    p_desDecrypt_c_line2* p_desDecrypt_c_line2_U0;
    fifo_w64_d2_A* input_c_U;
    fifo_w64_d2_A* key_c_U;
    fifo_w64_d2_A* init_perm_res_0_loc_s_U;
    fifo_w32_d2_A* L_loc_channel_U;
    fifo_w32_d2_A* R_loc_channel_U;
    fifo_w64_d2_A* permuted_choice_1_0_s_U;
    fifo_w60_d2_A* permuted_choice_1_0_1_U;
    fifo_w32_d2_A* temp_loc_channel_U;
    fifo_w32_d2_A* L_0_loc_channel_U;
    fifo_w64_d2_A* inv_init_perm_res_0_s_U;
    start_for_Loop_ung8j* start_for_Loop_ung8j_U;
    start_for_Loop_unhbi* start_for_Loop_unhbi_U;
    sc_signal< sc_lv<64> > sub_key_i_q0;
    sc_signal< sc_lv<64> > sub_key_t_q0;
    sc_signal< sc_logic > des_dec_entry7_U0_ap_start;
    sc_signal< sc_logic > des_dec_entry7_U0_start_full_n;
    sc_signal< sc_logic > des_dec_entry7_U0_ap_done;
    sc_signal< sc_logic > des_dec_entry7_U0_ap_continue;
    sc_signal< sc_logic > des_dec_entry7_U0_ap_idle;
    sc_signal< sc_logic > des_dec_entry7_U0_ap_ready;
    sc_signal< sc_logic > des_dec_entry7_U0_start_out;
    sc_signal< sc_logic > des_dec_entry7_U0_start_write;
    sc_signal< sc_lv<64> > des_dec_entry7_U0_input_out_din;
    sc_signal< sc_logic > des_dec_entry7_U0_input_out_write;
    sc_signal< sc_lv<64> > des_dec_entry7_U0_key_out_din;
    sc_signal< sc_logic > des_dec_entry7_U0_key_out_write;
    sc_signal< sc_logic > Loop_unroll1_proc_U0_ap_start;
    sc_signal< sc_logic > Loop_unroll1_proc_U0_ap_done;
    sc_signal< sc_logic > Loop_unroll1_proc_U0_ap_continue;
    sc_signal< sc_logic > Loop_unroll1_proc_U0_ap_idle;
    sc_signal< sc_logic > Loop_unroll1_proc_U0_ap_ready;
    sc_signal< sc_logic > Loop_unroll1_proc_U0_input_r_read;
    sc_signal< sc_lv<64> > Loop_unroll1_proc_U0_ap_return;
    sc_signal< sc_logic > ap_channel_done_init_perm_res_0_loc_s;
    sc_signal< sc_logic > init_perm_res_0_loc_s_full_n;
    sc_signal< sc_logic > Block_des_dec_exit2_U0_ap_start;
    sc_signal< sc_logic > Block_des_dec_exit2_U0_ap_done;
    sc_signal< sc_logic > Block_des_dec_exit2_U0_ap_continue;
    sc_signal< sc_logic > Block_des_dec_exit2_U0_ap_idle;
    sc_signal< sc_logic > Block_des_dec_exit2_U0_ap_ready;
    sc_signal< sc_lv<32> > Block_des_dec_exit2_U0_ap_return_0;
    sc_signal< sc_lv<32> > Block_des_dec_exit2_U0_ap_return_1;
    sc_signal< sc_logic > ap_channel_done_R_loc_channel;
    sc_signal< sc_logic > R_loc_channel_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_R_loc_channel;
    sc_signal< sc_logic > ap_sync_channel_write_R_loc_channel;
    sc_signal< sc_logic > ap_channel_done_L_loc_channel;
    sc_signal< sc_logic > L_loc_channel_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_L_loc_channel;
    sc_signal< sc_logic > ap_sync_channel_write_L_loc_channel;
    sc_signal< sc_logic > Loop_unroll2_proc_U0_ap_start;
    sc_signal< sc_logic > Loop_unroll2_proc_U0_ap_done;
    sc_signal< sc_logic > Loop_unroll2_proc_U0_ap_continue;
    sc_signal< sc_logic > Loop_unroll2_proc_U0_ap_idle;
    sc_signal< sc_logic > Loop_unroll2_proc_U0_ap_ready;
    sc_signal< sc_logic > Loop_unroll2_proc_U0_key_read;
    sc_signal< sc_lv<64> > Loop_unroll2_proc_U0_ap_return_0;
    sc_signal< sc_lv<60> > Loop_unroll2_proc_U0_ap_return_1;
    sc_signal< sc_logic > ap_channel_done_permuted_choice_1_0_1;
    sc_signal< sc_logic > permuted_choice_1_0_1_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_permuted_choice_1_0_1;
    sc_signal< sc_logic > ap_sync_channel_write_permuted_choice_1_0_1;
    sc_signal< sc_logic > ap_channel_done_permuted_choice_1_0_s;
    sc_signal< sc_logic > permuted_choice_1_0_s_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_permuted_choice_1_0_s;
    sc_signal< sc_logic > ap_sync_channel_write_permuted_choice_1_0_s;
    sc_signal< sc_logic > Loop_3_proc_U0_ap_start;
    sc_signal< sc_logic > Loop_3_proc_U0_ap_done;
    sc_signal< sc_logic > Loop_3_proc_U0_ap_continue;
    sc_signal< sc_logic > Loop_3_proc_U0_ap_idle;
    sc_signal< sc_logic > Loop_3_proc_U0_ap_ready;
    sc_signal< sc_lv<4> > Loop_3_proc_U0_sub_key_address0;
    sc_signal< sc_logic > Loop_3_proc_U0_sub_key_ce0;
    sc_signal< sc_logic > Loop_3_proc_U0_sub_key_we0;
    sc_signal< sc_lv<64> > Loop_3_proc_U0_sub_key_d0;
    sc_signal< sc_logic > ap_channel_done_sub_key;
    sc_signal< sc_logic > Loop_3_proc_U0_sub_key_full_n;
    sc_signal< sc_logic > Loop_Pipeline_loop4_U0_ap_start;
    sc_signal< sc_logic > Loop_Pipeline_loop4_U0_ap_done;
    sc_signal< sc_logic > Loop_Pipeline_loop4_U0_ap_continue;
    sc_signal< sc_logic > Loop_Pipeline_loop4_U0_ap_idle;
    sc_signal< sc_logic > Loop_Pipeline_loop4_U0_ap_ready;
    sc_signal< sc_lv<4> > Loop_Pipeline_loop4_U0_sub_key_address0;
    sc_signal< sc_logic > Loop_Pipeline_loop4_U0_sub_key_ce0;
    sc_signal< sc_lv<32> > Loop_Pipeline_loop4_U0_ap_return_0;
    sc_signal< sc_lv<32> > Loop_Pipeline_loop4_U0_ap_return_1;
    sc_signal< sc_logic > ap_channel_done_L_0_loc_channel;
    sc_signal< sc_logic > L_0_loc_channel_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_L_0_loc_channel;
    sc_signal< sc_logic > ap_sync_channel_write_L_0_loc_channel;
    sc_signal< sc_logic > ap_channel_done_temp_loc_channel;
    sc_signal< sc_logic > temp_loc_channel_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_temp_loc_channel;
    sc_signal< sc_logic > ap_sync_channel_write_temp_loc_channel;
    sc_signal< sc_logic > Loop_5_proc_U0_ap_start;
    sc_signal< sc_logic > Loop_5_proc_U0_ap_done;
    sc_signal< sc_logic > Loop_5_proc_U0_ap_continue;
    sc_signal< sc_logic > Loop_5_proc_U0_ap_idle;
    sc_signal< sc_logic > Loop_5_proc_U0_ap_ready;
    sc_signal< sc_lv<64> > Loop_5_proc_U0_ap_return;
    sc_signal< sc_logic > ap_channel_done_inv_init_perm_res_0_s;
    sc_signal< sc_logic > inv_init_perm_res_0_s_full_n;
    sc_signal< sc_logic > p_desDecrypt_c_line2_U0_ap_start;
    sc_signal< sc_logic > p_desDecrypt_c_line2_U0_ap_done;
    sc_signal< sc_logic > p_desDecrypt_c_line2_U0_ap_continue;
    sc_signal< sc_logic > p_desDecrypt_c_line2_U0_ap_idle;
    sc_signal< sc_logic > p_desDecrypt_c_line2_U0_ap_ready;
    sc_signal< sc_lv<64> > p_desDecrypt_c_line2_U0_ap_return;
    sc_signal< sc_lv<64> > tmp_p_desDecrypt_c_line2_fu_153_ap_return;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > sub_key_i_full_n;
    sc_signal< sc_logic > sub_key_t_empty_n;
    sc_signal< sc_logic > input_c_full_n;
    sc_signal< sc_lv<64> > input_c_dout;
    sc_signal< sc_logic > input_c_empty_n;
    sc_signal< sc_logic > key_c_full_n;
    sc_signal< sc_lv<64> > key_c_dout;
    sc_signal< sc_logic > key_c_empty_n;
    sc_signal< sc_lv<64> > init_perm_res_0_loc_s_dout;
    sc_signal< sc_logic > init_perm_res_0_loc_s_empty_n;
    sc_signal< sc_lv<32> > L_loc_channel_dout;
    sc_signal< sc_logic > L_loc_channel_empty_n;
    sc_signal< sc_lv<32> > R_loc_channel_dout;
    sc_signal< sc_logic > R_loc_channel_empty_n;
    sc_signal< sc_lv<64> > permuted_choice_1_0_s_dout;
    sc_signal< sc_logic > permuted_choice_1_0_s_empty_n;
    sc_signal< sc_lv<60> > permuted_choice_1_0_1_dout;
    sc_signal< sc_logic > permuted_choice_1_0_1_empty_n;
    sc_signal< sc_lv<32> > temp_loc_channel_dout;
    sc_signal< sc_logic > temp_loc_channel_empty_n;
    sc_signal< sc_lv<32> > L_0_loc_channel_dout;
    sc_signal< sc_logic > L_0_loc_channel_empty_n;
    sc_signal< sc_lv<64> > inv_init_perm_res_0_s_dout;
    sc_signal< sc_logic > inv_init_perm_res_0_s_empty_n;
    sc_signal< sc_logic > ap_sync_done;
    sc_signal< sc_logic > ap_sync_ready;
    sc_signal< sc_lv<1> > start_for_Loop_unroll1_proc_U0_din;
    sc_signal< sc_logic > start_for_Loop_unroll1_proc_U0_full_n;
    sc_signal< sc_lv<1> > start_for_Loop_unroll1_proc_U0_dout;
    sc_signal< sc_logic > start_for_Loop_unroll1_proc_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_Loop_unroll2_proc_U0_din;
    sc_signal< sc_logic > start_for_Loop_unroll2_proc_U0_full_n;
    sc_signal< sc_lv<1> > start_for_Loop_unroll2_proc_U0_dout;
    sc_signal< sc_logic > start_for_Loop_unroll2_proc_U0_empty_n;
    sc_signal< sc_logic > Loop_unroll1_proc_U0_start_full_n;
    sc_signal< sc_logic > Loop_unroll1_proc_U0_start_write;
    sc_signal< sc_logic > Block_des_dec_exit2_U0_start_full_n;
    sc_signal< sc_logic > Block_des_dec_exit2_U0_start_write;
    sc_signal< sc_logic > Loop_unroll2_proc_U0_start_full_n;
    sc_signal< sc_logic > Loop_unroll2_proc_U0_start_write;
    sc_signal< sc_logic > Loop_3_proc_U0_start_full_n;
    sc_signal< sc_logic > Loop_3_proc_U0_start_write;
    sc_signal< sc_logic > Loop_Pipeline_loop4_U0_start_full_n;
    sc_signal< sc_logic > Loop_Pipeline_loop4_U0_start_write;
    sc_signal< sc_logic > Loop_5_proc_U0_start_full_n;
    sc_signal< sc_logic > Loop_5_proc_U0_start_write;
    sc_signal< sc_logic > p_desDecrypt_c_line2_U0_start_full_n;
    sc_signal< sc_logic > p_desDecrypt_c_line2_U0_start_write;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const2();
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_Block_des_dec_exit2_U0_ap_continue();
    void thread_Block_des_dec_exit2_U0_ap_start();
    void thread_Block_des_dec_exit2_U0_start_full_n();
    void thread_Block_des_dec_exit2_U0_start_write();
    void thread_Loop_3_proc_U0_ap_continue();
    void thread_Loop_3_proc_U0_ap_start();
    void thread_Loop_3_proc_U0_start_full_n();
    void thread_Loop_3_proc_U0_start_write();
    void thread_Loop_3_proc_U0_sub_key_full_n();
    void thread_Loop_5_proc_U0_ap_continue();
    void thread_Loop_5_proc_U0_ap_start();
    void thread_Loop_5_proc_U0_start_full_n();
    void thread_Loop_5_proc_U0_start_write();
    void thread_Loop_Pipeline_loop4_U0_ap_continue();
    void thread_Loop_Pipeline_loop4_U0_ap_start();
    void thread_Loop_Pipeline_loop4_U0_start_full_n();
    void thread_Loop_Pipeline_loop4_U0_start_write();
    void thread_Loop_unroll1_proc_U0_ap_continue();
    void thread_Loop_unroll1_proc_U0_ap_start();
    void thread_Loop_unroll1_proc_U0_start_full_n();
    void thread_Loop_unroll1_proc_U0_start_write();
    void thread_Loop_unroll2_proc_U0_ap_continue();
    void thread_Loop_unroll2_proc_U0_ap_start();
    void thread_Loop_unroll2_proc_U0_start_full_n();
    void thread_Loop_unroll2_proc_U0_start_write();
    void thread_ap_channel_done_L_0_loc_channel();
    void thread_ap_channel_done_L_loc_channel();
    void thread_ap_channel_done_R_loc_channel();
    void thread_ap_channel_done_init_perm_res_0_loc_s();
    void thread_ap_channel_done_inv_init_perm_res_0_s();
    void thread_ap_channel_done_permuted_choice_1_0_1();
    void thread_ap_channel_done_permuted_choice_1_0_s();
    void thread_ap_channel_done_sub_key();
    void thread_ap_channel_done_temp_loc_channel();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_ap_sync_channel_write_L_0_loc_channel();
    void thread_ap_sync_channel_write_L_loc_channel();
    void thread_ap_sync_channel_write_R_loc_channel();
    void thread_ap_sync_channel_write_permuted_choice_1_0_1();
    void thread_ap_sync_channel_write_permuted_choice_1_0_s();
    void thread_ap_sync_channel_write_temp_loc_channel();
    void thread_ap_sync_continue();
    void thread_ap_sync_done();
    void thread_ap_sync_ready();
    void thread_des_dec_entry7_U0_ap_continue();
    void thread_des_dec_entry7_U0_ap_start();
    void thread_des_dec_entry7_U0_start_full_n();
    void thread_p_desDecrypt_c_line2_U0_ap_continue();
    void thread_p_desDecrypt_c_line2_U0_ap_start();
    void thread_p_desDecrypt_c_line2_U0_start_full_n();
    void thread_p_desDecrypt_c_line2_U0_start_write();
    void thread_start_for_Loop_unroll1_proc_U0_din();
    void thread_start_for_Loop_unroll2_proc_U0_din();
    void thread_tmp_p_desDecrypt_c_line2_fu_153_ap_return();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif

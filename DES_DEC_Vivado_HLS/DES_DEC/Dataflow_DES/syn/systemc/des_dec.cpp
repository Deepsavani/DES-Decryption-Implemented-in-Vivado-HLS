// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "des_dec.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic des_dec::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic des_dec::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<64> des_dec::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> des_dec::ap_const_lv64_1 = "1";
const bool des_dec::ap_const_boolean_1 = true;

des_dec::des_dec(sc_module_name name) : sc_module(name), mVcdFile(0) {
    sub_key_U = new des_dec_sub_key("sub_key_U");
    sub_key_U->clk(ap_clk);
    sub_key_U->reset(ap_rst);
    sub_key_U->i_address0(Loop_3_proc_U0_sub_key_address0);
    sub_key_U->i_ce0(Loop_3_proc_U0_sub_key_ce0);
    sub_key_U->i_we0(Loop_3_proc_U0_sub_key_we0);
    sub_key_U->i_d0(Loop_3_proc_U0_sub_key_d0);
    sub_key_U->i_q0(sub_key_i_q0);
    sub_key_U->t_address0(Loop_Pipeline_loop4_U0_sub_key_address0);
    sub_key_U->t_ce0(Loop_Pipeline_loop4_U0_sub_key_ce0);
    sub_key_U->t_we0(ap_var_for_const0);
    sub_key_U->t_d0(ap_var_for_const1);
    sub_key_U->t_q0(sub_key_t_q0);
    sub_key_U->i_ce(ap_var_for_const2);
    sub_key_U->t_ce(ap_var_for_const2);
    sub_key_U->i_full_n(sub_key_i_full_n);
    sub_key_U->i_write(Loop_3_proc_U0_ap_done);
    sub_key_U->t_empty_n(sub_key_t_empty_n);
    sub_key_U->t_read(Loop_Pipeline_loop4_U0_ap_ready);
    des_dec_entry7_U0 = new des_dec_entry7("des_dec_entry7_U0");
    des_dec_entry7_U0->ap_clk(ap_clk);
    des_dec_entry7_U0->ap_rst(ap_rst);
    des_dec_entry7_U0->ap_start(des_dec_entry7_U0_ap_start);
    des_dec_entry7_U0->start_full_n(des_dec_entry7_U0_start_full_n);
    des_dec_entry7_U0->ap_done(des_dec_entry7_U0_ap_done);
    des_dec_entry7_U0->ap_continue(des_dec_entry7_U0_ap_continue);
    des_dec_entry7_U0->ap_idle(des_dec_entry7_U0_ap_idle);
    des_dec_entry7_U0->ap_ready(des_dec_entry7_U0_ap_ready);
    des_dec_entry7_U0->start_out(des_dec_entry7_U0_start_out);
    des_dec_entry7_U0->start_write(des_dec_entry7_U0_start_write);
    des_dec_entry7_U0->input_r(input_r);
    des_dec_entry7_U0->key(key);
    des_dec_entry7_U0->input_out_din(des_dec_entry7_U0_input_out_din);
    des_dec_entry7_U0->input_out_full_n(input_c_full_n);
    des_dec_entry7_U0->input_out_write(des_dec_entry7_U0_input_out_write);
    des_dec_entry7_U0->key_out_din(des_dec_entry7_U0_key_out_din);
    des_dec_entry7_U0->key_out_full_n(key_c_full_n);
    des_dec_entry7_U0->key_out_write(des_dec_entry7_U0_key_out_write);
    Loop_unroll1_proc_U0 = new Loop_unroll1_proc("Loop_unroll1_proc_U0");
    Loop_unroll1_proc_U0->ap_clk(ap_clk);
    Loop_unroll1_proc_U0->ap_rst(ap_rst);
    Loop_unroll1_proc_U0->ap_start(Loop_unroll1_proc_U0_ap_start);
    Loop_unroll1_proc_U0->ap_done(Loop_unroll1_proc_U0_ap_done);
    Loop_unroll1_proc_U0->ap_continue(Loop_unroll1_proc_U0_ap_continue);
    Loop_unroll1_proc_U0->ap_idle(Loop_unroll1_proc_U0_ap_idle);
    Loop_unroll1_proc_U0->ap_ready(Loop_unroll1_proc_U0_ap_ready);
    Loop_unroll1_proc_U0->input_r_dout(input_c_dout);
    Loop_unroll1_proc_U0->input_r_empty_n(input_c_empty_n);
    Loop_unroll1_proc_U0->input_r_read(Loop_unroll1_proc_U0_input_r_read);
    Loop_unroll1_proc_U0->ap_return(Loop_unroll1_proc_U0_ap_return);
    Block_des_dec_exit2_U0 = new Block_des_dec_exit2("Block_des_dec_exit2_U0");
    Block_des_dec_exit2_U0->ap_clk(ap_clk);
    Block_des_dec_exit2_U0->ap_rst(ap_rst);
    Block_des_dec_exit2_U0->ap_start(Block_des_dec_exit2_U0_ap_start);
    Block_des_dec_exit2_U0->ap_done(Block_des_dec_exit2_U0_ap_done);
    Block_des_dec_exit2_U0->ap_continue(Block_des_dec_exit2_U0_ap_continue);
    Block_des_dec_exit2_U0->ap_idle(Block_des_dec_exit2_U0_ap_idle);
    Block_des_dec_exit2_U0->ap_ready(Block_des_dec_exit2_U0_ap_ready);
    Block_des_dec_exit2_U0->p_read(init_perm_res_0_loc_s_dout);
    Block_des_dec_exit2_U0->ap_return_0(Block_des_dec_exit2_U0_ap_return_0);
    Block_des_dec_exit2_U0->ap_return_1(Block_des_dec_exit2_U0_ap_return_1);
    Loop_unroll2_proc_U0 = new Loop_unroll2_proc("Loop_unroll2_proc_U0");
    Loop_unroll2_proc_U0->ap_clk(ap_clk);
    Loop_unroll2_proc_U0->ap_rst(ap_rst);
    Loop_unroll2_proc_U0->ap_start(Loop_unroll2_proc_U0_ap_start);
    Loop_unroll2_proc_U0->ap_done(Loop_unroll2_proc_U0_ap_done);
    Loop_unroll2_proc_U0->ap_continue(Loop_unroll2_proc_U0_ap_continue);
    Loop_unroll2_proc_U0->ap_idle(Loop_unroll2_proc_U0_ap_idle);
    Loop_unroll2_proc_U0->ap_ready(Loop_unroll2_proc_U0_ap_ready);
    Loop_unroll2_proc_U0->key_dout(key_c_dout);
    Loop_unroll2_proc_U0->key_empty_n(key_c_empty_n);
    Loop_unroll2_proc_U0->key_read(Loop_unroll2_proc_U0_key_read);
    Loop_unroll2_proc_U0->ap_return_0(Loop_unroll2_proc_U0_ap_return_0);
    Loop_unroll2_proc_U0->ap_return_1(Loop_unroll2_proc_U0_ap_return_1);
    Loop_3_proc_U0 = new Loop_3_proc("Loop_3_proc_U0");
    Loop_3_proc_U0->ap_clk(ap_clk);
    Loop_3_proc_U0->ap_rst(ap_rst);
    Loop_3_proc_U0->ap_start(Loop_3_proc_U0_ap_start);
    Loop_3_proc_U0->ap_done(Loop_3_proc_U0_ap_done);
    Loop_3_proc_U0->ap_continue(Loop_3_proc_U0_ap_continue);
    Loop_3_proc_U0->ap_idle(Loop_3_proc_U0_ap_idle);
    Loop_3_proc_U0->ap_ready(Loop_3_proc_U0_ap_ready);
    Loop_3_proc_U0->p_read(permuted_choice_1_0_1_dout);
    Loop_3_proc_U0->p_read1(permuted_choice_1_0_s_dout);
    Loop_3_proc_U0->sub_key_address0(Loop_3_proc_U0_sub_key_address0);
    Loop_3_proc_U0->sub_key_ce0(Loop_3_proc_U0_sub_key_ce0);
    Loop_3_proc_U0->sub_key_we0(Loop_3_proc_U0_sub_key_we0);
    Loop_3_proc_U0->sub_key_d0(Loop_3_proc_U0_sub_key_d0);
    Loop_Pipeline_loop4_U0 = new Loop_Pipeline_loop4_s("Loop_Pipeline_loop4_U0");
    Loop_Pipeline_loop4_U0->ap_clk(ap_clk);
    Loop_Pipeline_loop4_U0->ap_rst(ap_rst);
    Loop_Pipeline_loop4_U0->ap_start(Loop_Pipeline_loop4_U0_ap_start);
    Loop_Pipeline_loop4_U0->ap_done(Loop_Pipeline_loop4_U0_ap_done);
    Loop_Pipeline_loop4_U0->ap_continue(Loop_Pipeline_loop4_U0_ap_continue);
    Loop_Pipeline_loop4_U0->ap_idle(Loop_Pipeline_loop4_U0_ap_idle);
    Loop_Pipeline_loop4_U0->ap_ready(Loop_Pipeline_loop4_U0_ap_ready);
    Loop_Pipeline_loop4_U0->p_read(R_loc_channel_dout);
    Loop_Pipeline_loop4_U0->p_read1(L_loc_channel_dout);
    Loop_Pipeline_loop4_U0->sub_key_address0(Loop_Pipeline_loop4_U0_sub_key_address0);
    Loop_Pipeline_loop4_U0->sub_key_ce0(Loop_Pipeline_loop4_U0_sub_key_ce0);
    Loop_Pipeline_loop4_U0->sub_key_q0(sub_key_t_q0);
    Loop_Pipeline_loop4_U0->ap_return_0(Loop_Pipeline_loop4_U0_ap_return_0);
    Loop_Pipeline_loop4_U0->ap_return_1(Loop_Pipeline_loop4_U0_ap_return_1);
    Loop_5_proc_U0 = new Loop_5_proc("Loop_5_proc_U0");
    Loop_5_proc_U0->ap_clk(ap_clk);
    Loop_5_proc_U0->ap_rst(ap_rst);
    Loop_5_proc_U0->ap_start(Loop_5_proc_U0_ap_start);
    Loop_5_proc_U0->ap_done(Loop_5_proc_U0_ap_done);
    Loop_5_proc_U0->ap_continue(Loop_5_proc_U0_ap_continue);
    Loop_5_proc_U0->ap_idle(Loop_5_proc_U0_ap_idle);
    Loop_5_proc_U0->ap_ready(Loop_5_proc_U0_ap_ready);
    Loop_5_proc_U0->p_read(temp_loc_channel_dout);
    Loop_5_proc_U0->p_read1(L_0_loc_channel_dout);
    Loop_5_proc_U0->ap_return(Loop_5_proc_U0_ap_return);
    p_desDecrypt_c_line2_U0 = new p_desDecrypt_c_line2("p_desDecrypt_c_line2_U0");
    p_desDecrypt_c_line2_U0->ap_clk(ap_clk);
    p_desDecrypt_c_line2_U0->ap_rst(ap_rst);
    p_desDecrypt_c_line2_U0->ap_start(p_desDecrypt_c_line2_U0_ap_start);
    p_desDecrypt_c_line2_U0->ap_done(p_desDecrypt_c_line2_U0_ap_done);
    p_desDecrypt_c_line2_U0->ap_continue(p_desDecrypt_c_line2_U0_ap_continue);
    p_desDecrypt_c_line2_U0->ap_idle(p_desDecrypt_c_line2_U0_ap_idle);
    p_desDecrypt_c_line2_U0->ap_ready(p_desDecrypt_c_line2_U0_ap_ready);
    p_desDecrypt_c_line2_U0->p_read(inv_init_perm_res_0_s_dout);
    p_desDecrypt_c_line2_U0->ap_return(p_desDecrypt_c_line2_U0_ap_return);
    input_c_U = new fifo_w64_d2_A("input_c_U");
    input_c_U->clk(ap_clk);
    input_c_U->reset(ap_rst);
    input_c_U->if_read_ce(ap_var_for_const2);
    input_c_U->if_write_ce(ap_var_for_const2);
    input_c_U->if_din(des_dec_entry7_U0_input_out_din);
    input_c_U->if_full_n(input_c_full_n);
    input_c_U->if_write(des_dec_entry7_U0_input_out_write);
    input_c_U->if_dout(input_c_dout);
    input_c_U->if_empty_n(input_c_empty_n);
    input_c_U->if_read(Loop_unroll1_proc_U0_input_r_read);
    key_c_U = new fifo_w64_d2_A("key_c_U");
    key_c_U->clk(ap_clk);
    key_c_U->reset(ap_rst);
    key_c_U->if_read_ce(ap_var_for_const2);
    key_c_U->if_write_ce(ap_var_for_const2);
    key_c_U->if_din(des_dec_entry7_U0_key_out_din);
    key_c_U->if_full_n(key_c_full_n);
    key_c_U->if_write(des_dec_entry7_U0_key_out_write);
    key_c_U->if_dout(key_c_dout);
    key_c_U->if_empty_n(key_c_empty_n);
    key_c_U->if_read(Loop_unroll2_proc_U0_key_read);
    init_perm_res_0_loc_s_U = new fifo_w64_d2_A("init_perm_res_0_loc_s_U");
    init_perm_res_0_loc_s_U->clk(ap_clk);
    init_perm_res_0_loc_s_U->reset(ap_rst);
    init_perm_res_0_loc_s_U->if_read_ce(ap_var_for_const2);
    init_perm_res_0_loc_s_U->if_write_ce(ap_var_for_const2);
    init_perm_res_0_loc_s_U->if_din(Loop_unroll1_proc_U0_ap_return);
    init_perm_res_0_loc_s_U->if_full_n(init_perm_res_0_loc_s_full_n);
    init_perm_res_0_loc_s_U->if_write(Loop_unroll1_proc_U0_ap_done);
    init_perm_res_0_loc_s_U->if_dout(init_perm_res_0_loc_s_dout);
    init_perm_res_0_loc_s_U->if_empty_n(init_perm_res_0_loc_s_empty_n);
    init_perm_res_0_loc_s_U->if_read(Block_des_dec_exit2_U0_ap_ready);
    L_loc_channel_U = new fifo_w32_d2_A("L_loc_channel_U");
    L_loc_channel_U->clk(ap_clk);
    L_loc_channel_U->reset(ap_rst);
    L_loc_channel_U->if_read_ce(ap_var_for_const2);
    L_loc_channel_U->if_write_ce(ap_var_for_const2);
    L_loc_channel_U->if_din(Block_des_dec_exit2_U0_ap_return_0);
    L_loc_channel_U->if_full_n(L_loc_channel_full_n);
    L_loc_channel_U->if_write(ap_channel_done_L_loc_channel);
    L_loc_channel_U->if_dout(L_loc_channel_dout);
    L_loc_channel_U->if_empty_n(L_loc_channel_empty_n);
    L_loc_channel_U->if_read(Loop_Pipeline_loop4_U0_ap_ready);
    R_loc_channel_U = new fifo_w32_d2_A("R_loc_channel_U");
    R_loc_channel_U->clk(ap_clk);
    R_loc_channel_U->reset(ap_rst);
    R_loc_channel_U->if_read_ce(ap_var_for_const2);
    R_loc_channel_U->if_write_ce(ap_var_for_const2);
    R_loc_channel_U->if_din(Block_des_dec_exit2_U0_ap_return_1);
    R_loc_channel_U->if_full_n(R_loc_channel_full_n);
    R_loc_channel_U->if_write(ap_channel_done_R_loc_channel);
    R_loc_channel_U->if_dout(R_loc_channel_dout);
    R_loc_channel_U->if_empty_n(R_loc_channel_empty_n);
    R_loc_channel_U->if_read(Loop_Pipeline_loop4_U0_ap_ready);
    permuted_choice_1_0_s_U = new fifo_w64_d2_A("permuted_choice_1_0_s_U");
    permuted_choice_1_0_s_U->clk(ap_clk);
    permuted_choice_1_0_s_U->reset(ap_rst);
    permuted_choice_1_0_s_U->if_read_ce(ap_var_for_const2);
    permuted_choice_1_0_s_U->if_write_ce(ap_var_for_const2);
    permuted_choice_1_0_s_U->if_din(Loop_unroll2_proc_U0_ap_return_0);
    permuted_choice_1_0_s_U->if_full_n(permuted_choice_1_0_s_full_n);
    permuted_choice_1_0_s_U->if_write(ap_channel_done_permuted_choice_1_0_s);
    permuted_choice_1_0_s_U->if_dout(permuted_choice_1_0_s_dout);
    permuted_choice_1_0_s_U->if_empty_n(permuted_choice_1_0_s_empty_n);
    permuted_choice_1_0_s_U->if_read(Loop_3_proc_U0_ap_ready);
    permuted_choice_1_0_1_U = new fifo_w60_d2_A("permuted_choice_1_0_1_U");
    permuted_choice_1_0_1_U->clk(ap_clk);
    permuted_choice_1_0_1_U->reset(ap_rst);
    permuted_choice_1_0_1_U->if_read_ce(ap_var_for_const2);
    permuted_choice_1_0_1_U->if_write_ce(ap_var_for_const2);
    permuted_choice_1_0_1_U->if_din(Loop_unroll2_proc_U0_ap_return_1);
    permuted_choice_1_0_1_U->if_full_n(permuted_choice_1_0_1_full_n);
    permuted_choice_1_0_1_U->if_write(ap_channel_done_permuted_choice_1_0_1);
    permuted_choice_1_0_1_U->if_dout(permuted_choice_1_0_1_dout);
    permuted_choice_1_0_1_U->if_empty_n(permuted_choice_1_0_1_empty_n);
    permuted_choice_1_0_1_U->if_read(Loop_3_proc_U0_ap_ready);
    temp_loc_channel_U = new fifo_w32_d2_A("temp_loc_channel_U");
    temp_loc_channel_U->clk(ap_clk);
    temp_loc_channel_U->reset(ap_rst);
    temp_loc_channel_U->if_read_ce(ap_var_for_const2);
    temp_loc_channel_U->if_write_ce(ap_var_for_const2);
    temp_loc_channel_U->if_din(Loop_Pipeline_loop4_U0_ap_return_0);
    temp_loc_channel_U->if_full_n(temp_loc_channel_full_n);
    temp_loc_channel_U->if_write(ap_channel_done_temp_loc_channel);
    temp_loc_channel_U->if_dout(temp_loc_channel_dout);
    temp_loc_channel_U->if_empty_n(temp_loc_channel_empty_n);
    temp_loc_channel_U->if_read(Loop_5_proc_U0_ap_ready);
    L_0_loc_channel_U = new fifo_w32_d2_A("L_0_loc_channel_U");
    L_0_loc_channel_U->clk(ap_clk);
    L_0_loc_channel_U->reset(ap_rst);
    L_0_loc_channel_U->if_read_ce(ap_var_for_const2);
    L_0_loc_channel_U->if_write_ce(ap_var_for_const2);
    L_0_loc_channel_U->if_din(Loop_Pipeline_loop4_U0_ap_return_1);
    L_0_loc_channel_U->if_full_n(L_0_loc_channel_full_n);
    L_0_loc_channel_U->if_write(ap_channel_done_L_0_loc_channel);
    L_0_loc_channel_U->if_dout(L_0_loc_channel_dout);
    L_0_loc_channel_U->if_empty_n(L_0_loc_channel_empty_n);
    L_0_loc_channel_U->if_read(Loop_5_proc_U0_ap_ready);
    inv_init_perm_res_0_s_U = new fifo_w64_d2_A("inv_init_perm_res_0_s_U");
    inv_init_perm_res_0_s_U->clk(ap_clk);
    inv_init_perm_res_0_s_U->reset(ap_rst);
    inv_init_perm_res_0_s_U->if_read_ce(ap_var_for_const2);
    inv_init_perm_res_0_s_U->if_write_ce(ap_var_for_const2);
    inv_init_perm_res_0_s_U->if_din(Loop_5_proc_U0_ap_return);
    inv_init_perm_res_0_s_U->if_full_n(inv_init_perm_res_0_s_full_n);
    inv_init_perm_res_0_s_U->if_write(Loop_5_proc_U0_ap_done);
    inv_init_perm_res_0_s_U->if_dout(inv_init_perm_res_0_s_dout);
    inv_init_perm_res_0_s_U->if_empty_n(inv_init_perm_res_0_s_empty_n);
    inv_init_perm_res_0_s_U->if_read(p_desDecrypt_c_line2_U0_ap_ready);
    start_for_Loop_ung8j_U = new start_for_Loop_ung8j("start_for_Loop_ung8j_U");
    start_for_Loop_ung8j_U->clk(ap_clk);
    start_for_Loop_ung8j_U->reset(ap_rst);
    start_for_Loop_ung8j_U->if_read_ce(ap_var_for_const2);
    start_for_Loop_ung8j_U->if_write_ce(ap_var_for_const2);
    start_for_Loop_ung8j_U->if_din(start_for_Loop_unroll1_proc_U0_din);
    start_for_Loop_ung8j_U->if_full_n(start_for_Loop_unroll1_proc_U0_full_n);
    start_for_Loop_ung8j_U->if_write(des_dec_entry7_U0_start_write);
    start_for_Loop_ung8j_U->if_dout(start_for_Loop_unroll1_proc_U0_dout);
    start_for_Loop_ung8j_U->if_empty_n(start_for_Loop_unroll1_proc_U0_empty_n);
    start_for_Loop_ung8j_U->if_read(Loop_unroll1_proc_U0_ap_ready);
    start_for_Loop_unhbi_U = new start_for_Loop_unhbi("start_for_Loop_unhbi_U");
    start_for_Loop_unhbi_U->clk(ap_clk);
    start_for_Loop_unhbi_U->reset(ap_rst);
    start_for_Loop_unhbi_U->if_read_ce(ap_var_for_const2);
    start_for_Loop_unhbi_U->if_write_ce(ap_var_for_const2);
    start_for_Loop_unhbi_U->if_din(start_for_Loop_unroll2_proc_U0_din);
    start_for_Loop_unhbi_U->if_full_n(start_for_Loop_unroll2_proc_U0_full_n);
    start_for_Loop_unhbi_U->if_write(des_dec_entry7_U0_start_write);
    start_for_Loop_unhbi_U->if_dout(start_for_Loop_unroll2_proc_U0_dout);
    start_for_Loop_unhbi_U->if_empty_n(start_for_Loop_unroll2_proc_U0_empty_n);
    start_for_Loop_unhbi_U->if_read(Loop_unroll2_proc_U0_ap_ready);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Block_des_dec_exit2_U0_ap_continue);
    sensitive << ( ap_sync_channel_write_R_loc_channel );
    sensitive << ( ap_sync_channel_write_L_loc_channel );

    SC_METHOD(thread_Block_des_dec_exit2_U0_ap_start);
    sensitive << ( init_perm_res_0_loc_s_empty_n );

    SC_METHOD(thread_Block_des_dec_exit2_U0_start_full_n);

    SC_METHOD(thread_Block_des_dec_exit2_U0_start_write);

    SC_METHOD(thread_Loop_3_proc_U0_ap_continue);
    sensitive << ( sub_key_i_full_n );

    SC_METHOD(thread_Loop_3_proc_U0_ap_start);
    sensitive << ( permuted_choice_1_0_s_empty_n );
    sensitive << ( permuted_choice_1_0_1_empty_n );

    SC_METHOD(thread_Loop_3_proc_U0_start_full_n);

    SC_METHOD(thread_Loop_3_proc_U0_start_write);

    SC_METHOD(thread_Loop_3_proc_U0_sub_key_full_n);
    sensitive << ( sub_key_i_full_n );

    SC_METHOD(thread_Loop_5_proc_U0_ap_continue);
    sensitive << ( inv_init_perm_res_0_s_full_n );

    SC_METHOD(thread_Loop_5_proc_U0_ap_start);
    sensitive << ( temp_loc_channel_empty_n );
    sensitive << ( L_0_loc_channel_empty_n );

    SC_METHOD(thread_Loop_5_proc_U0_start_full_n);

    SC_METHOD(thread_Loop_5_proc_U0_start_write);

    SC_METHOD(thread_Loop_Pipeline_loop4_U0_ap_continue);
    sensitive << ( ap_sync_channel_write_L_0_loc_channel );
    sensitive << ( ap_sync_channel_write_temp_loc_channel );

    SC_METHOD(thread_Loop_Pipeline_loop4_U0_ap_start);
    sensitive << ( sub_key_t_empty_n );
    sensitive << ( L_loc_channel_empty_n );
    sensitive << ( R_loc_channel_empty_n );

    SC_METHOD(thread_Loop_Pipeline_loop4_U0_start_full_n);

    SC_METHOD(thread_Loop_Pipeline_loop4_U0_start_write);

    SC_METHOD(thread_Loop_unroll1_proc_U0_ap_continue);
    sensitive << ( init_perm_res_0_loc_s_full_n );

    SC_METHOD(thread_Loop_unroll1_proc_U0_ap_start);
    sensitive << ( start_for_Loop_unroll1_proc_U0_empty_n );

    SC_METHOD(thread_Loop_unroll1_proc_U0_start_full_n);

    SC_METHOD(thread_Loop_unroll1_proc_U0_start_write);

    SC_METHOD(thread_Loop_unroll2_proc_U0_ap_continue);
    sensitive << ( ap_sync_channel_write_permuted_choice_1_0_1 );
    sensitive << ( ap_sync_channel_write_permuted_choice_1_0_s );

    SC_METHOD(thread_Loop_unroll2_proc_U0_ap_start);
    sensitive << ( start_for_Loop_unroll2_proc_U0_empty_n );

    SC_METHOD(thread_Loop_unroll2_proc_U0_start_full_n);

    SC_METHOD(thread_Loop_unroll2_proc_U0_start_write);

    SC_METHOD(thread_ap_channel_done_L_0_loc_channel);
    sensitive << ( Loop_Pipeline_loop4_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_L_0_loc_channel );

    SC_METHOD(thread_ap_channel_done_L_loc_channel);
    sensitive << ( Block_des_dec_exit2_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_L_loc_channel );

    SC_METHOD(thread_ap_channel_done_R_loc_channel);
    sensitive << ( Block_des_dec_exit2_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_R_loc_channel );

    SC_METHOD(thread_ap_channel_done_init_perm_res_0_loc_s);
    sensitive << ( Loop_unroll1_proc_U0_ap_done );

    SC_METHOD(thread_ap_channel_done_inv_init_perm_res_0_s);
    sensitive << ( Loop_5_proc_U0_ap_done );

    SC_METHOD(thread_ap_channel_done_permuted_choice_1_0_1);
    sensitive << ( Loop_unroll2_proc_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_permuted_choice_1_0_1 );

    SC_METHOD(thread_ap_channel_done_permuted_choice_1_0_s);
    sensitive << ( Loop_unroll2_proc_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_permuted_choice_1_0_s );

    SC_METHOD(thread_ap_channel_done_sub_key);
    sensitive << ( Loop_3_proc_U0_ap_done );

    SC_METHOD(thread_ap_channel_done_temp_loc_channel);
    sensitive << ( Loop_Pipeline_loop4_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_temp_loc_channel );

    SC_METHOD(thread_ap_done);
    sensitive << ( p_desDecrypt_c_line2_U0_ap_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( des_dec_entry7_U0_ap_idle );
    sensitive << ( Loop_unroll1_proc_U0_ap_idle );
    sensitive << ( Block_des_dec_exit2_U0_ap_idle );
    sensitive << ( Loop_unroll2_proc_U0_ap_idle );
    sensitive << ( Loop_3_proc_U0_ap_idle );
    sensitive << ( Loop_Pipeline_loop4_U0_ap_idle );
    sensitive << ( Loop_5_proc_U0_ap_idle );
    sensitive << ( p_desDecrypt_c_line2_U0_ap_idle );
    sensitive << ( sub_key_t_empty_n );
    sensitive << ( init_perm_res_0_loc_s_empty_n );
    sensitive << ( L_loc_channel_empty_n );
    sensitive << ( R_loc_channel_empty_n );
    sensitive << ( permuted_choice_1_0_s_empty_n );
    sensitive << ( permuted_choice_1_0_1_empty_n );
    sensitive << ( temp_loc_channel_empty_n );
    sensitive << ( L_0_loc_channel_empty_n );
    sensitive << ( inv_init_perm_res_0_s_empty_n );

    SC_METHOD(thread_ap_ready);
    sensitive << ( des_dec_entry7_U0_ap_ready );

    SC_METHOD(thread_ap_return);
    sensitive << ( p_desDecrypt_c_line2_U0_ap_return );

    SC_METHOD(thread_ap_sync_channel_write_L_0_loc_channel);
    sensitive << ( ap_channel_done_L_0_loc_channel );
    sensitive << ( L_0_loc_channel_full_n );
    sensitive << ( ap_sync_reg_channel_write_L_0_loc_channel );

    SC_METHOD(thread_ap_sync_channel_write_L_loc_channel);
    sensitive << ( ap_channel_done_L_loc_channel );
    sensitive << ( L_loc_channel_full_n );
    sensitive << ( ap_sync_reg_channel_write_L_loc_channel );

    SC_METHOD(thread_ap_sync_channel_write_R_loc_channel);
    sensitive << ( ap_channel_done_R_loc_channel );
    sensitive << ( R_loc_channel_full_n );
    sensitive << ( ap_sync_reg_channel_write_R_loc_channel );

    SC_METHOD(thread_ap_sync_channel_write_permuted_choice_1_0_1);
    sensitive << ( ap_channel_done_permuted_choice_1_0_1 );
    sensitive << ( permuted_choice_1_0_1_full_n );
    sensitive << ( ap_sync_reg_channel_write_permuted_choice_1_0_1 );

    SC_METHOD(thread_ap_sync_channel_write_permuted_choice_1_0_s);
    sensitive << ( ap_channel_done_permuted_choice_1_0_s );
    sensitive << ( permuted_choice_1_0_s_full_n );
    sensitive << ( ap_sync_reg_channel_write_permuted_choice_1_0_s );

    SC_METHOD(thread_ap_sync_channel_write_temp_loc_channel);
    sensitive << ( ap_channel_done_temp_loc_channel );
    sensitive << ( temp_loc_channel_full_n );
    sensitive << ( ap_sync_reg_channel_write_temp_loc_channel );

    SC_METHOD(thread_ap_sync_continue);

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( p_desDecrypt_c_line2_U0_ap_done );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( des_dec_entry7_U0_ap_ready );

    SC_METHOD(thread_des_dec_entry7_U0_ap_continue);

    SC_METHOD(thread_des_dec_entry7_U0_ap_start);
    sensitive << ( ap_start );

    SC_METHOD(thread_des_dec_entry7_U0_start_full_n);
    sensitive << ( start_for_Loop_unroll1_proc_U0_full_n );
    sensitive << ( start_for_Loop_unroll2_proc_U0_full_n );

    SC_METHOD(thread_p_desDecrypt_c_line2_U0_ap_continue);

    SC_METHOD(thread_p_desDecrypt_c_line2_U0_ap_start);
    sensitive << ( inv_init_perm_res_0_s_empty_n );

    SC_METHOD(thread_p_desDecrypt_c_line2_U0_start_full_n);

    SC_METHOD(thread_p_desDecrypt_c_line2_U0_start_write);

    SC_METHOD(thread_start_for_Loop_unroll1_proc_U0_din);

    SC_METHOD(thread_start_for_Loop_unroll2_proc_U0_din);

    SC_METHOD(thread_tmp_p_desDecrypt_c_line2_fu_153_ap_return);

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    ap_sync_reg_channel_write_R_loc_channel = SC_LOGIC_0;
    ap_sync_reg_channel_write_L_loc_channel = SC_LOGIC_0;
    ap_sync_reg_channel_write_permuted_choice_1_0_1 = SC_LOGIC_0;
    ap_sync_reg_channel_write_permuted_choice_1_0_s = SC_LOGIC_0;
    ap_sync_reg_channel_write_L_0_loc_channel = SC_LOGIC_0;
    ap_sync_reg_channel_write_temp_loc_channel = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "des_dec_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, input_r, "(port)input_r");
    sc_trace(mVcdFile, key, "(port)key");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, sub_key_i_q0, "sub_key_i_q0");
    sc_trace(mVcdFile, sub_key_t_q0, "sub_key_t_q0");
    sc_trace(mVcdFile, des_dec_entry7_U0_ap_start, "des_dec_entry7_U0_ap_start");
    sc_trace(mVcdFile, des_dec_entry7_U0_start_full_n, "des_dec_entry7_U0_start_full_n");
    sc_trace(mVcdFile, des_dec_entry7_U0_ap_done, "des_dec_entry7_U0_ap_done");
    sc_trace(mVcdFile, des_dec_entry7_U0_ap_continue, "des_dec_entry7_U0_ap_continue");
    sc_trace(mVcdFile, des_dec_entry7_U0_ap_idle, "des_dec_entry7_U0_ap_idle");
    sc_trace(mVcdFile, des_dec_entry7_U0_ap_ready, "des_dec_entry7_U0_ap_ready");
    sc_trace(mVcdFile, des_dec_entry7_U0_start_out, "des_dec_entry7_U0_start_out");
    sc_trace(mVcdFile, des_dec_entry7_U0_start_write, "des_dec_entry7_U0_start_write");
    sc_trace(mVcdFile, des_dec_entry7_U0_input_out_din, "des_dec_entry7_U0_input_out_din");
    sc_trace(mVcdFile, des_dec_entry7_U0_input_out_write, "des_dec_entry7_U0_input_out_write");
    sc_trace(mVcdFile, des_dec_entry7_U0_key_out_din, "des_dec_entry7_U0_key_out_din");
    sc_trace(mVcdFile, des_dec_entry7_U0_key_out_write, "des_dec_entry7_U0_key_out_write");
    sc_trace(mVcdFile, Loop_unroll1_proc_U0_ap_start, "Loop_unroll1_proc_U0_ap_start");
    sc_trace(mVcdFile, Loop_unroll1_proc_U0_ap_done, "Loop_unroll1_proc_U0_ap_done");
    sc_trace(mVcdFile, Loop_unroll1_proc_U0_ap_continue, "Loop_unroll1_proc_U0_ap_continue");
    sc_trace(mVcdFile, Loop_unroll1_proc_U0_ap_idle, "Loop_unroll1_proc_U0_ap_idle");
    sc_trace(mVcdFile, Loop_unroll1_proc_U0_ap_ready, "Loop_unroll1_proc_U0_ap_ready");
    sc_trace(mVcdFile, Loop_unroll1_proc_U0_input_r_read, "Loop_unroll1_proc_U0_input_r_read");
    sc_trace(mVcdFile, Loop_unroll1_proc_U0_ap_return, "Loop_unroll1_proc_U0_ap_return");
    sc_trace(mVcdFile, ap_channel_done_init_perm_res_0_loc_s, "ap_channel_done_init_perm_res_0_loc_s");
    sc_trace(mVcdFile, init_perm_res_0_loc_s_full_n, "init_perm_res_0_loc_s_full_n");
    sc_trace(mVcdFile, Block_des_dec_exit2_U0_ap_start, "Block_des_dec_exit2_U0_ap_start");
    sc_trace(mVcdFile, Block_des_dec_exit2_U0_ap_done, "Block_des_dec_exit2_U0_ap_done");
    sc_trace(mVcdFile, Block_des_dec_exit2_U0_ap_continue, "Block_des_dec_exit2_U0_ap_continue");
    sc_trace(mVcdFile, Block_des_dec_exit2_U0_ap_idle, "Block_des_dec_exit2_U0_ap_idle");
    sc_trace(mVcdFile, Block_des_dec_exit2_U0_ap_ready, "Block_des_dec_exit2_U0_ap_ready");
    sc_trace(mVcdFile, Block_des_dec_exit2_U0_ap_return_0, "Block_des_dec_exit2_U0_ap_return_0");
    sc_trace(mVcdFile, Block_des_dec_exit2_U0_ap_return_1, "Block_des_dec_exit2_U0_ap_return_1");
    sc_trace(mVcdFile, ap_channel_done_R_loc_channel, "ap_channel_done_R_loc_channel");
    sc_trace(mVcdFile, R_loc_channel_full_n, "R_loc_channel_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_R_loc_channel, "ap_sync_reg_channel_write_R_loc_channel");
    sc_trace(mVcdFile, ap_sync_channel_write_R_loc_channel, "ap_sync_channel_write_R_loc_channel");
    sc_trace(mVcdFile, ap_channel_done_L_loc_channel, "ap_channel_done_L_loc_channel");
    sc_trace(mVcdFile, L_loc_channel_full_n, "L_loc_channel_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_L_loc_channel, "ap_sync_reg_channel_write_L_loc_channel");
    sc_trace(mVcdFile, ap_sync_channel_write_L_loc_channel, "ap_sync_channel_write_L_loc_channel");
    sc_trace(mVcdFile, Loop_unroll2_proc_U0_ap_start, "Loop_unroll2_proc_U0_ap_start");
    sc_trace(mVcdFile, Loop_unroll2_proc_U0_ap_done, "Loop_unroll2_proc_U0_ap_done");
    sc_trace(mVcdFile, Loop_unroll2_proc_U0_ap_continue, "Loop_unroll2_proc_U0_ap_continue");
    sc_trace(mVcdFile, Loop_unroll2_proc_U0_ap_idle, "Loop_unroll2_proc_U0_ap_idle");
    sc_trace(mVcdFile, Loop_unroll2_proc_U0_ap_ready, "Loop_unroll2_proc_U0_ap_ready");
    sc_trace(mVcdFile, Loop_unroll2_proc_U0_key_read, "Loop_unroll2_proc_U0_key_read");
    sc_trace(mVcdFile, Loop_unroll2_proc_U0_ap_return_0, "Loop_unroll2_proc_U0_ap_return_0");
    sc_trace(mVcdFile, Loop_unroll2_proc_U0_ap_return_1, "Loop_unroll2_proc_U0_ap_return_1");
    sc_trace(mVcdFile, ap_channel_done_permuted_choice_1_0_1, "ap_channel_done_permuted_choice_1_0_1");
    sc_trace(mVcdFile, permuted_choice_1_0_1_full_n, "permuted_choice_1_0_1_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_permuted_choice_1_0_1, "ap_sync_reg_channel_write_permuted_choice_1_0_1");
    sc_trace(mVcdFile, ap_sync_channel_write_permuted_choice_1_0_1, "ap_sync_channel_write_permuted_choice_1_0_1");
    sc_trace(mVcdFile, ap_channel_done_permuted_choice_1_0_s, "ap_channel_done_permuted_choice_1_0_s");
    sc_trace(mVcdFile, permuted_choice_1_0_s_full_n, "permuted_choice_1_0_s_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_permuted_choice_1_0_s, "ap_sync_reg_channel_write_permuted_choice_1_0_s");
    sc_trace(mVcdFile, ap_sync_channel_write_permuted_choice_1_0_s, "ap_sync_channel_write_permuted_choice_1_0_s");
    sc_trace(mVcdFile, Loop_3_proc_U0_ap_start, "Loop_3_proc_U0_ap_start");
    sc_trace(mVcdFile, Loop_3_proc_U0_ap_done, "Loop_3_proc_U0_ap_done");
    sc_trace(mVcdFile, Loop_3_proc_U0_ap_continue, "Loop_3_proc_U0_ap_continue");
    sc_trace(mVcdFile, Loop_3_proc_U0_ap_idle, "Loop_3_proc_U0_ap_idle");
    sc_trace(mVcdFile, Loop_3_proc_U0_ap_ready, "Loop_3_proc_U0_ap_ready");
    sc_trace(mVcdFile, Loop_3_proc_U0_sub_key_address0, "Loop_3_proc_U0_sub_key_address0");
    sc_trace(mVcdFile, Loop_3_proc_U0_sub_key_ce0, "Loop_3_proc_U0_sub_key_ce0");
    sc_trace(mVcdFile, Loop_3_proc_U0_sub_key_we0, "Loop_3_proc_U0_sub_key_we0");
    sc_trace(mVcdFile, Loop_3_proc_U0_sub_key_d0, "Loop_3_proc_U0_sub_key_d0");
    sc_trace(mVcdFile, ap_channel_done_sub_key, "ap_channel_done_sub_key");
    sc_trace(mVcdFile, Loop_3_proc_U0_sub_key_full_n, "Loop_3_proc_U0_sub_key_full_n");
    sc_trace(mVcdFile, Loop_Pipeline_loop4_U0_ap_start, "Loop_Pipeline_loop4_U0_ap_start");
    sc_trace(mVcdFile, Loop_Pipeline_loop4_U0_ap_done, "Loop_Pipeline_loop4_U0_ap_done");
    sc_trace(mVcdFile, Loop_Pipeline_loop4_U0_ap_continue, "Loop_Pipeline_loop4_U0_ap_continue");
    sc_trace(mVcdFile, Loop_Pipeline_loop4_U0_ap_idle, "Loop_Pipeline_loop4_U0_ap_idle");
    sc_trace(mVcdFile, Loop_Pipeline_loop4_U0_ap_ready, "Loop_Pipeline_loop4_U0_ap_ready");
    sc_trace(mVcdFile, Loop_Pipeline_loop4_U0_sub_key_address0, "Loop_Pipeline_loop4_U0_sub_key_address0");
    sc_trace(mVcdFile, Loop_Pipeline_loop4_U0_sub_key_ce0, "Loop_Pipeline_loop4_U0_sub_key_ce0");
    sc_trace(mVcdFile, Loop_Pipeline_loop4_U0_ap_return_0, "Loop_Pipeline_loop4_U0_ap_return_0");
    sc_trace(mVcdFile, Loop_Pipeline_loop4_U0_ap_return_1, "Loop_Pipeline_loop4_U0_ap_return_1");
    sc_trace(mVcdFile, ap_channel_done_L_0_loc_channel, "ap_channel_done_L_0_loc_channel");
    sc_trace(mVcdFile, L_0_loc_channel_full_n, "L_0_loc_channel_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_L_0_loc_channel, "ap_sync_reg_channel_write_L_0_loc_channel");
    sc_trace(mVcdFile, ap_sync_channel_write_L_0_loc_channel, "ap_sync_channel_write_L_0_loc_channel");
    sc_trace(mVcdFile, ap_channel_done_temp_loc_channel, "ap_channel_done_temp_loc_channel");
    sc_trace(mVcdFile, temp_loc_channel_full_n, "temp_loc_channel_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_temp_loc_channel, "ap_sync_reg_channel_write_temp_loc_channel");
    sc_trace(mVcdFile, ap_sync_channel_write_temp_loc_channel, "ap_sync_channel_write_temp_loc_channel");
    sc_trace(mVcdFile, Loop_5_proc_U0_ap_start, "Loop_5_proc_U0_ap_start");
    sc_trace(mVcdFile, Loop_5_proc_U0_ap_done, "Loop_5_proc_U0_ap_done");
    sc_trace(mVcdFile, Loop_5_proc_U0_ap_continue, "Loop_5_proc_U0_ap_continue");
    sc_trace(mVcdFile, Loop_5_proc_U0_ap_idle, "Loop_5_proc_U0_ap_idle");
    sc_trace(mVcdFile, Loop_5_proc_U0_ap_ready, "Loop_5_proc_U0_ap_ready");
    sc_trace(mVcdFile, Loop_5_proc_U0_ap_return, "Loop_5_proc_U0_ap_return");
    sc_trace(mVcdFile, ap_channel_done_inv_init_perm_res_0_s, "ap_channel_done_inv_init_perm_res_0_s");
    sc_trace(mVcdFile, inv_init_perm_res_0_s_full_n, "inv_init_perm_res_0_s_full_n");
    sc_trace(mVcdFile, p_desDecrypt_c_line2_U0_ap_start, "p_desDecrypt_c_line2_U0_ap_start");
    sc_trace(mVcdFile, p_desDecrypt_c_line2_U0_ap_done, "p_desDecrypt_c_line2_U0_ap_done");
    sc_trace(mVcdFile, p_desDecrypt_c_line2_U0_ap_continue, "p_desDecrypt_c_line2_U0_ap_continue");
    sc_trace(mVcdFile, p_desDecrypt_c_line2_U0_ap_idle, "p_desDecrypt_c_line2_U0_ap_idle");
    sc_trace(mVcdFile, p_desDecrypt_c_line2_U0_ap_ready, "p_desDecrypt_c_line2_U0_ap_ready");
    sc_trace(mVcdFile, p_desDecrypt_c_line2_U0_ap_return, "p_desDecrypt_c_line2_U0_ap_return");
    sc_trace(mVcdFile, tmp_p_desDecrypt_c_line2_fu_153_ap_return, "tmp_p_desDecrypt_c_line2_fu_153_ap_return");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, sub_key_i_full_n, "sub_key_i_full_n");
    sc_trace(mVcdFile, sub_key_t_empty_n, "sub_key_t_empty_n");
    sc_trace(mVcdFile, input_c_full_n, "input_c_full_n");
    sc_trace(mVcdFile, input_c_dout, "input_c_dout");
    sc_trace(mVcdFile, input_c_empty_n, "input_c_empty_n");
    sc_trace(mVcdFile, key_c_full_n, "key_c_full_n");
    sc_trace(mVcdFile, key_c_dout, "key_c_dout");
    sc_trace(mVcdFile, key_c_empty_n, "key_c_empty_n");
    sc_trace(mVcdFile, init_perm_res_0_loc_s_dout, "init_perm_res_0_loc_s_dout");
    sc_trace(mVcdFile, init_perm_res_0_loc_s_empty_n, "init_perm_res_0_loc_s_empty_n");
    sc_trace(mVcdFile, L_loc_channel_dout, "L_loc_channel_dout");
    sc_trace(mVcdFile, L_loc_channel_empty_n, "L_loc_channel_empty_n");
    sc_trace(mVcdFile, R_loc_channel_dout, "R_loc_channel_dout");
    sc_trace(mVcdFile, R_loc_channel_empty_n, "R_loc_channel_empty_n");
    sc_trace(mVcdFile, permuted_choice_1_0_s_dout, "permuted_choice_1_0_s_dout");
    sc_trace(mVcdFile, permuted_choice_1_0_s_empty_n, "permuted_choice_1_0_s_empty_n");
    sc_trace(mVcdFile, permuted_choice_1_0_1_dout, "permuted_choice_1_0_1_dout");
    sc_trace(mVcdFile, permuted_choice_1_0_1_empty_n, "permuted_choice_1_0_1_empty_n");
    sc_trace(mVcdFile, temp_loc_channel_dout, "temp_loc_channel_dout");
    sc_trace(mVcdFile, temp_loc_channel_empty_n, "temp_loc_channel_empty_n");
    sc_trace(mVcdFile, L_0_loc_channel_dout, "L_0_loc_channel_dout");
    sc_trace(mVcdFile, L_0_loc_channel_empty_n, "L_0_loc_channel_empty_n");
    sc_trace(mVcdFile, inv_init_perm_res_0_s_dout, "inv_init_perm_res_0_s_dout");
    sc_trace(mVcdFile, inv_init_perm_res_0_s_empty_n, "inv_init_perm_res_0_s_empty_n");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, start_for_Loop_unroll1_proc_U0_din, "start_for_Loop_unroll1_proc_U0_din");
    sc_trace(mVcdFile, start_for_Loop_unroll1_proc_U0_full_n, "start_for_Loop_unroll1_proc_U0_full_n");
    sc_trace(mVcdFile, start_for_Loop_unroll1_proc_U0_dout, "start_for_Loop_unroll1_proc_U0_dout");
    sc_trace(mVcdFile, start_for_Loop_unroll1_proc_U0_empty_n, "start_for_Loop_unroll1_proc_U0_empty_n");
    sc_trace(mVcdFile, start_for_Loop_unroll2_proc_U0_din, "start_for_Loop_unroll2_proc_U0_din");
    sc_trace(mVcdFile, start_for_Loop_unroll2_proc_U0_full_n, "start_for_Loop_unroll2_proc_U0_full_n");
    sc_trace(mVcdFile, start_for_Loop_unroll2_proc_U0_dout, "start_for_Loop_unroll2_proc_U0_dout");
    sc_trace(mVcdFile, start_for_Loop_unroll2_proc_U0_empty_n, "start_for_Loop_unroll2_proc_U0_empty_n");
    sc_trace(mVcdFile, Loop_unroll1_proc_U0_start_full_n, "Loop_unroll1_proc_U0_start_full_n");
    sc_trace(mVcdFile, Loop_unroll1_proc_U0_start_write, "Loop_unroll1_proc_U0_start_write");
    sc_trace(mVcdFile, Block_des_dec_exit2_U0_start_full_n, "Block_des_dec_exit2_U0_start_full_n");
    sc_trace(mVcdFile, Block_des_dec_exit2_U0_start_write, "Block_des_dec_exit2_U0_start_write");
    sc_trace(mVcdFile, Loop_unroll2_proc_U0_start_full_n, "Loop_unroll2_proc_U0_start_full_n");
    sc_trace(mVcdFile, Loop_unroll2_proc_U0_start_write, "Loop_unroll2_proc_U0_start_write");
    sc_trace(mVcdFile, Loop_3_proc_U0_start_full_n, "Loop_3_proc_U0_start_full_n");
    sc_trace(mVcdFile, Loop_3_proc_U0_start_write, "Loop_3_proc_U0_start_write");
    sc_trace(mVcdFile, Loop_Pipeline_loop4_U0_start_full_n, "Loop_Pipeline_loop4_U0_start_full_n");
    sc_trace(mVcdFile, Loop_Pipeline_loop4_U0_start_write, "Loop_Pipeline_loop4_U0_start_write");
    sc_trace(mVcdFile, Loop_5_proc_U0_start_full_n, "Loop_5_proc_U0_start_full_n");
    sc_trace(mVcdFile, Loop_5_proc_U0_start_write, "Loop_5_proc_U0_start_write");
    sc_trace(mVcdFile, p_desDecrypt_c_line2_U0_start_full_n, "p_desDecrypt_c_line2_U0_start_full_n");
    sc_trace(mVcdFile, p_desDecrypt_c_line2_U0_start_write, "p_desDecrypt_c_line2_U0_start_write");
#endif

    }
    mHdltvinHandle.open("des_dec.hdltvin.dat");
    mHdltvoutHandle.open("des_dec.hdltvout.dat");
}

des_dec::~des_dec() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete sub_key_U;
    delete des_dec_entry7_U0;
    delete Loop_unroll1_proc_U0;
    delete Block_des_dec_exit2_U0;
    delete Loop_unroll2_proc_U0;
    delete Loop_3_proc_U0;
    delete Loop_Pipeline_loop4_U0;
    delete Loop_5_proc_U0;
    delete p_desDecrypt_c_line2_U0;
    delete input_c_U;
    delete key_c_U;
    delete init_perm_res_0_loc_s_U;
    delete L_loc_channel_U;
    delete R_loc_channel_U;
    delete permuted_choice_1_0_s_U;
    delete permuted_choice_1_0_1_U;
    delete temp_loc_channel_U;
    delete L_0_loc_channel_U;
    delete inv_init_perm_res_0_s_U;
    delete start_for_Loop_ung8j_U;
    delete start_for_Loop_unhbi_U;
}

void des_dec::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_logic_1;
}

void des_dec::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_0;
}

void des_dec::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv64_0;
}

void des_dec::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_L_0_loc_channel = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (Loop_Pipeline_loop4_U0_ap_done.read() & 
             Loop_Pipeline_loop4_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_L_0_loc_channel = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_L_0_loc_channel = ap_sync_channel_write_L_0_loc_channel.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_L_loc_channel = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (Block_des_dec_exit2_U0_ap_done.read() & 
             Block_des_dec_exit2_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_L_loc_channel = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_L_loc_channel = ap_sync_channel_write_L_loc_channel.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_R_loc_channel = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (Block_des_dec_exit2_U0_ap_done.read() & 
             Block_des_dec_exit2_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_R_loc_channel = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_R_loc_channel = ap_sync_channel_write_R_loc_channel.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_permuted_choice_1_0_1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (Loop_unroll2_proc_U0_ap_done.read() & 
             Loop_unroll2_proc_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_permuted_choice_1_0_1 = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_permuted_choice_1_0_1 = ap_sync_channel_write_permuted_choice_1_0_1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_permuted_choice_1_0_s = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (Loop_unroll2_proc_U0_ap_done.read() & 
             Loop_unroll2_proc_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_permuted_choice_1_0_s = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_permuted_choice_1_0_s = ap_sync_channel_write_permuted_choice_1_0_s.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_temp_loc_channel = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (Loop_Pipeline_loop4_U0_ap_done.read() & 
             Loop_Pipeline_loop4_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_temp_loc_channel = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_temp_loc_channel = ap_sync_channel_write_temp_loc_channel.read();
        }
    }
}

void des_dec::thread_Block_des_dec_exit2_U0_ap_continue() {
    Block_des_dec_exit2_U0_ap_continue = (ap_sync_channel_write_R_loc_channel.read() & ap_sync_channel_write_L_loc_channel.read());
}

void des_dec::thread_Block_des_dec_exit2_U0_ap_start() {
    Block_des_dec_exit2_U0_ap_start = init_perm_res_0_loc_s_empty_n.read();
}

void des_dec::thread_Block_des_dec_exit2_U0_start_full_n() {
    Block_des_dec_exit2_U0_start_full_n = ap_const_logic_1;
}

void des_dec::thread_Block_des_dec_exit2_U0_start_write() {
    Block_des_dec_exit2_U0_start_write = ap_const_logic_0;
}

void des_dec::thread_Loop_3_proc_U0_ap_continue() {
    Loop_3_proc_U0_ap_continue = sub_key_i_full_n.read();
}

void des_dec::thread_Loop_3_proc_U0_ap_start() {
    Loop_3_proc_U0_ap_start = (permuted_choice_1_0_s_empty_n.read() & permuted_choice_1_0_1_empty_n.read());
}

void des_dec::thread_Loop_3_proc_U0_start_full_n() {
    Loop_3_proc_U0_start_full_n = ap_const_logic_1;
}

void des_dec::thread_Loop_3_proc_U0_start_write() {
    Loop_3_proc_U0_start_write = ap_const_logic_0;
}

void des_dec::thread_Loop_3_proc_U0_sub_key_full_n() {
    Loop_3_proc_U0_sub_key_full_n = sub_key_i_full_n.read();
}

void des_dec::thread_Loop_5_proc_U0_ap_continue() {
    Loop_5_proc_U0_ap_continue = inv_init_perm_res_0_s_full_n.read();
}

void des_dec::thread_Loop_5_proc_U0_ap_start() {
    Loop_5_proc_U0_ap_start = (temp_loc_channel_empty_n.read() & L_0_loc_channel_empty_n.read());
}

void des_dec::thread_Loop_5_proc_U0_start_full_n() {
    Loop_5_proc_U0_start_full_n = ap_const_logic_1;
}

void des_dec::thread_Loop_5_proc_U0_start_write() {
    Loop_5_proc_U0_start_write = ap_const_logic_0;
}

void des_dec::thread_Loop_Pipeline_loop4_U0_ap_continue() {
    Loop_Pipeline_loop4_U0_ap_continue = (ap_sync_channel_write_L_0_loc_channel.read() & ap_sync_channel_write_temp_loc_channel.read());
}

void des_dec::thread_Loop_Pipeline_loop4_U0_ap_start() {
    Loop_Pipeline_loop4_U0_ap_start = (sub_key_t_empty_n.read() & L_loc_channel_empty_n.read() & R_loc_channel_empty_n.read());
}

void des_dec::thread_Loop_Pipeline_loop4_U0_start_full_n() {
    Loop_Pipeline_loop4_U0_start_full_n = ap_const_logic_1;
}

void des_dec::thread_Loop_Pipeline_loop4_U0_start_write() {
    Loop_Pipeline_loop4_U0_start_write = ap_const_logic_0;
}

void des_dec::thread_Loop_unroll1_proc_U0_ap_continue() {
    Loop_unroll1_proc_U0_ap_continue = init_perm_res_0_loc_s_full_n.read();
}

void des_dec::thread_Loop_unroll1_proc_U0_ap_start() {
    Loop_unroll1_proc_U0_ap_start = start_for_Loop_unroll1_proc_U0_empty_n.read();
}

void des_dec::thread_Loop_unroll1_proc_U0_start_full_n() {
    Loop_unroll1_proc_U0_start_full_n = ap_const_logic_1;
}

void des_dec::thread_Loop_unroll1_proc_U0_start_write() {
    Loop_unroll1_proc_U0_start_write = ap_const_logic_0;
}

void des_dec::thread_Loop_unroll2_proc_U0_ap_continue() {
    Loop_unroll2_proc_U0_ap_continue = (ap_sync_channel_write_permuted_choice_1_0_1.read() & ap_sync_channel_write_permuted_choice_1_0_s.read());
}

void des_dec::thread_Loop_unroll2_proc_U0_ap_start() {
    Loop_unroll2_proc_U0_ap_start = start_for_Loop_unroll2_proc_U0_empty_n.read();
}

void des_dec::thread_Loop_unroll2_proc_U0_start_full_n() {
    Loop_unroll2_proc_U0_start_full_n = ap_const_logic_1;
}

void des_dec::thread_Loop_unroll2_proc_U0_start_write() {
    Loop_unroll2_proc_U0_start_write = ap_const_logic_0;
}

void des_dec::thread_ap_channel_done_L_0_loc_channel() {
    ap_channel_done_L_0_loc_channel = (Loop_Pipeline_loop4_U0_ap_done.read() & (ap_sync_reg_channel_write_L_0_loc_channel.read() ^ 
  ap_const_logic_1));
}

void des_dec::thread_ap_channel_done_L_loc_channel() {
    ap_channel_done_L_loc_channel = (Block_des_dec_exit2_U0_ap_done.read() & (ap_sync_reg_channel_write_L_loc_channel.read() ^ 
  ap_const_logic_1));
}

void des_dec::thread_ap_channel_done_R_loc_channel() {
    ap_channel_done_R_loc_channel = (Block_des_dec_exit2_U0_ap_done.read() & (ap_sync_reg_channel_write_R_loc_channel.read() ^ 
  ap_const_logic_1));
}

void des_dec::thread_ap_channel_done_init_perm_res_0_loc_s() {
    ap_channel_done_init_perm_res_0_loc_s = Loop_unroll1_proc_U0_ap_done.read();
}

void des_dec::thread_ap_channel_done_inv_init_perm_res_0_s() {
    ap_channel_done_inv_init_perm_res_0_s = Loop_5_proc_U0_ap_done.read();
}

void des_dec::thread_ap_channel_done_permuted_choice_1_0_1() {
    ap_channel_done_permuted_choice_1_0_1 = (Loop_unroll2_proc_U0_ap_done.read() & (ap_sync_reg_channel_write_permuted_choice_1_0_1.read() ^ 
  ap_const_logic_1));
}

void des_dec::thread_ap_channel_done_permuted_choice_1_0_s() {
    ap_channel_done_permuted_choice_1_0_s = (Loop_unroll2_proc_U0_ap_done.read() & (ap_sync_reg_channel_write_permuted_choice_1_0_s.read() ^ 
  ap_const_logic_1));
}

void des_dec::thread_ap_channel_done_sub_key() {
    ap_channel_done_sub_key = Loop_3_proc_U0_ap_done.read();
}

void des_dec::thread_ap_channel_done_temp_loc_channel() {
    ap_channel_done_temp_loc_channel = (Loop_Pipeline_loop4_U0_ap_done.read() & (ap_sync_reg_channel_write_temp_loc_channel.read() ^ 
  ap_const_logic_1));
}

void des_dec::thread_ap_done() {
    ap_done = p_desDecrypt_c_line2_U0_ap_done.read();
}

void des_dec::thread_ap_idle() {
    ap_idle = (des_dec_entry7_U0_ap_idle.read() & Loop_unroll1_proc_U0_ap_idle.read() & Block_des_dec_exit2_U0_ap_idle.read() & Loop_unroll2_proc_U0_ap_idle.read() & Loop_3_proc_U0_ap_idle.read() & Loop_Pipeline_loop4_U0_ap_idle.read() & Loop_5_proc_U0_ap_idle.read() & p_desDecrypt_c_line2_U0_ap_idle.read() & (init_perm_res_0_loc_s_empty_n.read() ^ 
  ap_const_logic_1) & (L_loc_channel_empty_n.read() ^ 
  ap_const_logic_1) & (R_loc_channel_empty_n.read() ^ 
  ap_const_logic_1) & (permuted_choice_1_0_s_empty_n.read() ^ 
  ap_const_logic_1) & (permuted_choice_1_0_1_empty_n.read() ^ 
  ap_const_logic_1) & (sub_key_t_empty_n.read() ^ 
  ap_const_logic_1) & (temp_loc_channel_empty_n.read() ^ 
  ap_const_logic_1) & (L_0_loc_channel_empty_n.read() ^ 
  ap_const_logic_1) & (inv_init_perm_res_0_s_empty_n.read() ^ 
  ap_const_logic_1));
}

void des_dec::thread_ap_ready() {
    ap_ready = des_dec_entry7_U0_ap_ready.read();
}

void des_dec::thread_ap_return() {
    ap_return = p_desDecrypt_c_line2_U0_ap_return.read();
}

void des_dec::thread_ap_sync_channel_write_L_0_loc_channel() {
    ap_sync_channel_write_L_0_loc_channel = ((ap_channel_done_L_0_loc_channel.read() & 
  L_0_loc_channel_full_n.read()) | ap_sync_reg_channel_write_L_0_loc_channel.read());
}

void des_dec::thread_ap_sync_channel_write_L_loc_channel() {
    ap_sync_channel_write_L_loc_channel = ((ap_channel_done_L_loc_channel.read() & 
  L_loc_channel_full_n.read()) | ap_sync_reg_channel_write_L_loc_channel.read());
}

void des_dec::thread_ap_sync_channel_write_R_loc_channel() {
    ap_sync_channel_write_R_loc_channel = ((ap_channel_done_R_loc_channel.read() & 
  R_loc_channel_full_n.read()) | ap_sync_reg_channel_write_R_loc_channel.read());
}

void des_dec::thread_ap_sync_channel_write_permuted_choice_1_0_1() {
    ap_sync_channel_write_permuted_choice_1_0_1 = ((ap_channel_done_permuted_choice_1_0_1.read() & 
  permuted_choice_1_0_1_full_n.read()) | ap_sync_reg_channel_write_permuted_choice_1_0_1.read());
}

void des_dec::thread_ap_sync_channel_write_permuted_choice_1_0_s() {
    ap_sync_channel_write_permuted_choice_1_0_s = ((ap_channel_done_permuted_choice_1_0_s.read() & 
  permuted_choice_1_0_s_full_n.read()) | ap_sync_reg_channel_write_permuted_choice_1_0_s.read());
}

void des_dec::thread_ap_sync_channel_write_temp_loc_channel() {
    ap_sync_channel_write_temp_loc_channel = ((ap_channel_done_temp_loc_channel.read() & 
  temp_loc_channel_full_n.read()) | ap_sync_reg_channel_write_temp_loc_channel.read());
}

void des_dec::thread_ap_sync_continue() {
    ap_sync_continue = ap_const_logic_1;
}

void des_dec::thread_ap_sync_done() {
    ap_sync_done = p_desDecrypt_c_line2_U0_ap_done.read();
}

void des_dec::thread_ap_sync_ready() {
    ap_sync_ready = des_dec_entry7_U0_ap_ready.read();
}

void des_dec::thread_des_dec_entry7_U0_ap_continue() {
    des_dec_entry7_U0_ap_continue = ap_const_logic_1;
}

void des_dec::thread_des_dec_entry7_U0_ap_start() {
    des_dec_entry7_U0_ap_start = ap_start.read();
}

void des_dec::thread_des_dec_entry7_U0_start_full_n() {
    des_dec_entry7_U0_start_full_n = (start_for_Loop_unroll1_proc_U0_full_n.read() & start_for_Loop_unroll2_proc_U0_full_n.read());
}

void des_dec::thread_p_desDecrypt_c_line2_U0_ap_continue() {
    p_desDecrypt_c_line2_U0_ap_continue = ap_const_logic_1;
}

void des_dec::thread_p_desDecrypt_c_line2_U0_ap_start() {
    p_desDecrypt_c_line2_U0_ap_start = inv_init_perm_res_0_s_empty_n.read();
}

void des_dec::thread_p_desDecrypt_c_line2_U0_start_full_n() {
    p_desDecrypt_c_line2_U0_start_full_n = ap_const_logic_1;
}

void des_dec::thread_p_desDecrypt_c_line2_U0_start_write() {
    p_desDecrypt_c_line2_U0_start_write = ap_const_logic_0;
}

void des_dec::thread_start_for_Loop_unroll1_proc_U0_din() {
    start_for_Loop_unroll1_proc_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void des_dec::thread_start_for_Loop_unroll2_proc_U0_din() {
    start_for_Loop_unroll2_proc_U0_din =  (sc_lv<1>) (ap_const_logic_1);
}

void des_dec::thread_tmp_p_desDecrypt_c_line2_fu_153_ap_return() {
    tmp_p_desDecrypt_c_line2_fu_153_ap_return = ap_const_lv64_0;
}

void des_dec::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_r\" :  \"" << input_r.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"key\" :  \"" << key.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}


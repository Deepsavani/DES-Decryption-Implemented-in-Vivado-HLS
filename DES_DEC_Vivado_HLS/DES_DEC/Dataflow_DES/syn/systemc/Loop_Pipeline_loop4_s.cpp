// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Loop_Pipeline_loop4_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Loop_Pipeline_loop4_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Loop_Pipeline_loop4_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> Loop_Pipeline_loop4_s::ap_ST_fsm_state1 = "1";
const sc_lv<11> Loop_Pipeline_loop4_s::ap_ST_fsm_state2 = "10";
const sc_lv<11> Loop_Pipeline_loop4_s::ap_ST_fsm_state3 = "100";
const sc_lv<11> Loop_Pipeline_loop4_s::ap_ST_fsm_state4 = "1000";
const sc_lv<11> Loop_Pipeline_loop4_s::ap_ST_fsm_state5 = "10000";
const sc_lv<11> Loop_Pipeline_loop4_s::ap_ST_fsm_state6 = "100000";
const sc_lv<11> Loop_Pipeline_loop4_s::ap_ST_fsm_state7 = "1000000";
const sc_lv<11> Loop_Pipeline_loop4_s::ap_ST_fsm_state8 = "10000000";
const sc_lv<11> Loop_Pipeline_loop4_s::ap_ST_fsm_state9 = "100000000";
const sc_lv<11> Loop_Pipeline_loop4_s::ap_ST_fsm_state10 = "1000000000";
const sc_lv<11> Loop_Pipeline_loop4_s::ap_ST_fsm_state11 = "10000000000";
const sc_lv<32> Loop_Pipeline_loop4_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Loop_Pipeline_loop4_s::ap_const_lv32_1 = "1";
const sc_lv<32> Loop_Pipeline_loop4_s::ap_const_lv32_2 = "10";
const sc_lv<1> Loop_Pipeline_loop4_s::ap_const_lv1_0 = "0";
const sc_lv<1> Loop_Pipeline_loop4_s::ap_const_lv1_1 = "1";
const sc_lv<32> Loop_Pipeline_loop4_s::ap_const_lv32_3 = "11";
const sc_lv<32> Loop_Pipeline_loop4_s::ap_const_lv32_4 = "100";
const sc_lv<32> Loop_Pipeline_loop4_s::ap_const_lv32_5 = "101";
const sc_lv<32> Loop_Pipeline_loop4_s::ap_const_lv32_6 = "110";
const sc_lv<32> Loop_Pipeline_loop4_s::ap_const_lv32_7 = "111";
const sc_lv<32> Loop_Pipeline_loop4_s::ap_const_lv32_9 = "1001";
const sc_lv<32> Loop_Pipeline_loop4_s::ap_const_lv32_A = "1010";
const sc_lv<5> Loop_Pipeline_loop4_s::ap_const_lv5_0 = "00000";
const sc_lv<64> Loop_Pipeline_loop4_s::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<6> Loop_Pipeline_loop4_s::ap_const_lv6_0 = "000000";
const sc_lv<4> Loop_Pipeline_loop4_s::ap_const_lv4_0 = "0000";
const sc_lv<32> Loop_Pipeline_loop4_s::ap_const_lv32_8 = "1000";
const sc_lv<5> Loop_Pipeline_loop4_s::ap_const_lv5_10 = "10000";
const sc_lv<5> Loop_Pipeline_loop4_s::ap_const_lv5_1 = "1";
const sc_lv<6> Loop_Pipeline_loop4_s::ap_const_lv6_30 = "110000";
const sc_lv<6> Loop_Pipeline_loop4_s::ap_const_lv6_1 = "1";
const sc_lv<5> Loop_Pipeline_loop4_s::ap_const_lv5_F = "1111";
const sc_lv<6> Loop_Pipeline_loop4_s::ap_const_lv6_20 = "100000";
const sc_lv<4> Loop_Pipeline_loop4_s::ap_const_lv4_8 = "1000";
const sc_lv<4> Loop_Pipeline_loop4_s::ap_const_lv4_1 = "1";
const sc_lv<3> Loop_Pipeline_loop4_s::ap_const_lv3_0 = "000";
const sc_lv<2> Loop_Pipeline_loop4_s::ap_const_lv2_0 = "00";
const sc_lv<6> Loop_Pipeline_loop4_s::ap_const_lv6_2A = "101010";
const sc_lv<6> Loop_Pipeline_loop4_s::ap_const_lv6_2B = "101011";
const sc_lv<48> Loop_Pipeline_loop4_s::ap_const_lv48_840000000000 = "100001000000000000000000000000000000000000000000";
const sc_lv<47> Loop_Pipeline_loop4_s::ap_const_lv47_780000000000 = "11110000000000000000000000000000000000000000000";
const bool Loop_Pipeline_loop4_s::ap_const_boolean_1 = true;

Loop_Pipeline_loop4_s::Loop_Pipeline_loop4_s(sc_module_name name) : sc_module(name), mVcdFile(0) {
    P_U = new Loop_Pipeline_loodEe("P_U");
    P_U->clk(ap_clk);
    P_U->reset(ap_rst);
    P_U->address0(P_address0);
    P_U->ce0(P_ce0);
    P_U->q0(P_q0);
    E_U = new Loop_Pipeline_looeOg("E_U");
    E_U->clk(ap_clk);
    E_U->reset(ap_rst);
    E_U->address0(E_address0);
    E_U->ce0(E_ce0);
    E_U->q0(E_q0);
    S_U = new Loop_Pipeline_loofYi("S_U");
    S_U->clk(ap_clk);
    S_U->reset(ap_rst);
    S_U->address0(S_address0);
    S_U->ce0(S_ce0);
    S_U->q0(S_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_E_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln229_fu_306_p1 );

    SC_METHOD(thread_E_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_P_address0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( zext_ln254_fu_628_p1 );

    SC_METHOD(thread_P_ce0);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_R_fu_637_p2);
    sensitive << ( L_0_loc_0_reg_182 );
    sensitive << ( f_function_res_0_i_reg_240 );

    SC_METHOD(thread_S_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( sext_ln246_2_fu_595_p1 );

    SC_METHOD(thread_S_ce0);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_add_ln246_1_fu_589_p2);
    sensitive << ( sext_ln246_1_fu_573_p1 );
    sensitive << ( zext_ln246_fu_585_p1 );

    SC_METHOD(thread_add_ln246_fu_567_p2);
    sensitive << ( sext_ln246_fu_563_p1 );
    sensitive << ( sext_ln243_fu_549_p1 );

    SC_METHOD(thread_and_ln240_fu_483_p2);
    sensitive << ( xor_ln232_reg_718 );
    sensitive << ( lshr_ln240_fu_477_p2 );

    SC_METHOD(thread_and_ln243_fu_531_p2);
    sensitive << ( xor_ln232_1_reg_723 );
    sensitive << ( lshr_ln243_fu_525_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln223_fu_270_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln223_fu_270_p2 );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( temp_reg_172 );
    sensitive << ( icmp_ln223_fu_270_p2 );
    sensitive << ( ap_return_0_preg );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( L_0_loc_0_reg_182 );
    sensitive << ( icmp_ln223_fu_270_p2 );
    sensitive << ( ap_return_1_preg );

    SC_METHOD(thread_f_function_res_fu_663_p3);
    sensitive << ( trunc_ln254_1_reg_774 );
    sensitive << ( trunc_ln254_fu_659_p1 );

    SC_METHOD(thread_i_fu_276_p2);
    sensitive << ( i_3_i_reg_193 );

    SC_METHOD(thread_icmp_ln223_fu_270_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_3_i_reg_193 );

    SC_METHOD(thread_icmp_ln227_fu_294_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_1_i_reg_217 );

    SC_METHOD(thread_icmp_ln235_fu_382_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( j_2_i_reg_228 );

    SC_METHOD(thread_icmp_ln252_fu_616_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( j_3_i_reg_251 );

    SC_METHOD(thread_j_1_fu_388_p2);
    sensitive << ( j_2_i_reg_228 );

    SC_METHOD(thread_j_2_fu_622_p2);
    sensitive << ( j_3_i_reg_251 );

    SC_METHOD(thread_j_fu_300_p2);
    sensitive << ( j_1_i_reg_217 );

    SC_METHOD(thread_lshr_ln229_fu_332_p2);
    sensitive << ( temp_reg_172 );
    sensitive << ( zext_ln229_1_fu_328_p1 );

    SC_METHOD(thread_lshr_ln240_1_fu_491_p2);
    sensitive << ( and_ln240_fu_483_p2 );
    sensitive << ( zext_ln240_6_fu_488_p1 );

    SC_METHOD(thread_lshr_ln240_fu_477_p2);
    sensitive << ( zext_ln240_3_fu_473_p1 );

    SC_METHOD(thread_lshr_ln243_1_fu_539_p2);
    sensitive << ( and_ln243_fu_531_p2 );
    sensitive << ( zext_ln243_fu_536_p1 );

    SC_METHOD(thread_lshr_ln243_fu_525_p2);
    sensitive << ( zext_ln240_2_fu_469_p1 );

    SC_METHOD(thread_lshr_ln254_fu_653_p2);
    sensitive << ( s_output_1_fu_104 );
    sensitive << ( zext_ln254_1_fu_649_p1 );

    SC_METHOD(thread_or_ln241_fu_509_p2);
    sensitive << ( tmp_fu_501_p3 );
    sensitive << ( trunc_ln240_1_fu_497_p1 );

    SC_METHOD(thread_s_input_fu_346_p3);
    sensitive << ( trunc_ln229_1_fu_342_p1 );
    sensitive << ( trunc_ln229_fu_338_p1 );

    SC_METHOD(thread_s_output_fu_603_p3);
    sensitive << ( S_q0 );
    sensitive << ( trunc_ln246_fu_599_p1 );

    SC_METHOD(thread_sext_ln240_fu_466_p1);
    sensitive << ( sub_ln240_reg_736 );

    SC_METHOD(thread_sext_ln243_fu_549_p1);
    sensitive << ( trunc_ln243_fu_545_p1 );

    SC_METHOD(thread_sext_ln246_1_fu_573_p1);
    sensitive << ( add_ln246_fu_567_p2 );

    SC_METHOD(thread_sext_ln246_2_fu_595_p1);
    sensitive << ( add_ln246_1_reg_751 );

    SC_METHOD(thread_sext_ln246_fu_563_p1);
    sensitive << ( tmp_7_fu_553_p4 );

    SC_METHOD(thread_shl_ln240_2_fu_430_p3);
    sensitive << ( trunc_ln240_fu_394_p1 );

    SC_METHOD(thread_shl_ln240_fu_410_p2);
    sensitive << ( j_2_i_reg_228 );

    SC_METHOD(thread_shl_ln_fu_398_p3);
    sensitive << ( trunc_ln240_fu_394_p1 );

    SC_METHOD(thread_sub_key_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln232_fu_317_p1 );

    SC_METHOD(thread_sub_key_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_sub_ln229_fu_322_p2);
    sensitive << ( E_q0 );

    SC_METHOD(thread_sub_ln232_fu_311_p2);
    sensitive << ( i_3_i_reg_193 );

    SC_METHOD(thread_sub_ln240_1_fu_442_p2);
    sensitive << ( zext_ln240_4_fu_426_p1 );

    SC_METHOD(thread_sub_ln240_2_fu_448_p2);
    sensitive << ( sub_ln240_1_fu_442_p2 );
    sensitive << ( zext_ln240_5_fu_438_p1 );

    SC_METHOD(thread_sub_ln240_fu_420_p2);
    sensitive << ( zext_ln240_fu_406_p1 );
    sensitive << ( zext_ln240_1_fu_416_p1 );

    SC_METHOD(thread_sub_ln243_1_fu_460_p2);
    sensitive << ( zext_ln240_5_fu_438_p1 );
    sensitive << ( sub_ln243_fu_454_p2 );

    SC_METHOD(thread_sub_ln243_fu_454_p2);
    sensitive << ( zext_ln240_4_fu_426_p1 );

    SC_METHOD(thread_sub_ln254_fu_643_p2);
    sensitive << ( P_q0 );

    SC_METHOD(thread_tmp_1_fu_515_p4);
    sensitive << ( lshr_ln240_1_fu_491_p2 );

    SC_METHOD(thread_tmp_7_fu_553_p4);
    sensitive << ( tmp_1_fu_515_p4 );
    sensitive << ( or_ln241_fu_509_p2 );

    SC_METHOD(thread_tmp_8_fu_577_p3);
    sensitive << ( j_2_i_reg_228 );

    SC_METHOD(thread_tmp_fu_501_p3);
    sensitive << ( lshr_ln240_1_fu_491_p2 );

    SC_METHOD(thread_trunc_ln229_1_fu_342_p1);
    sensitive << ( s_input_0_i_reg_205 );

    SC_METHOD(thread_trunc_ln229_fu_338_p1);
    sensitive << ( lshr_ln229_fu_332_p2 );

    SC_METHOD(thread_trunc_ln232_1_fu_358_p1);
    sensitive << ( sub_key_q0 );

    SC_METHOD(thread_trunc_ln232_2_fu_362_p1);
    sensitive << ( s_input_0_i_reg_205 );

    SC_METHOD(thread_trunc_ln232_3_fu_366_p1);
    sensitive << ( sub_key_q0 );

    SC_METHOD(thread_trunc_ln232_fu_354_p1);
    sensitive << ( s_input_0_i_reg_205 );

    SC_METHOD(thread_trunc_ln240_1_fu_497_p1);
    sensitive << ( lshr_ln240_1_fu_491_p2 );

    SC_METHOD(thread_trunc_ln240_fu_394_p1);
    sensitive << ( j_2_i_reg_228 );

    SC_METHOD(thread_trunc_ln243_fu_545_p1);
    sensitive << ( lshr_ln243_1_fu_539_p2 );

    SC_METHOD(thread_trunc_ln246_fu_599_p1);
    sensitive << ( s_output_1_fu_104 );

    SC_METHOD(thread_trunc_ln254_1_fu_633_p1);
    sensitive << ( f_function_res_0_i_reg_240 );

    SC_METHOD(thread_trunc_ln254_fu_659_p1);
    sensitive << ( lshr_ln254_fu_653_p2 );

    SC_METHOD(thread_xor_ln232_1_fu_376_p2);
    sensitive << ( trunc_ln232_1_fu_358_p1 );
    sensitive << ( trunc_ln232_fu_354_p1 );

    SC_METHOD(thread_xor_ln232_fu_370_p2);
    sensitive << ( trunc_ln232_3_fu_366_p1 );
    sensitive << ( trunc_ln232_2_fu_362_p1 );

    SC_METHOD(thread_zext_ln229_1_fu_328_p1);
    sensitive << ( sub_ln229_fu_322_p2 );

    SC_METHOD(thread_zext_ln229_fu_306_p1);
    sensitive << ( j_1_i_reg_217 );

    SC_METHOD(thread_zext_ln232_fu_317_p1);
    sensitive << ( sub_ln232_fu_311_p2 );

    SC_METHOD(thread_zext_ln240_1_fu_416_p1);
    sensitive << ( shl_ln240_fu_410_p2 );

    SC_METHOD(thread_zext_ln240_2_fu_469_p1);
    sensitive << ( sext_ln240_fu_466_p1 );

    SC_METHOD(thread_zext_ln240_3_fu_473_p1);
    sensitive << ( sext_ln240_fu_466_p1 );

    SC_METHOD(thread_zext_ln240_4_fu_426_p1);
    sensitive << ( shl_ln240_fu_410_p2 );

    SC_METHOD(thread_zext_ln240_5_fu_438_p1);
    sensitive << ( shl_ln240_2_fu_430_p3 );

    SC_METHOD(thread_zext_ln240_6_fu_488_p1);
    sensitive << ( sub_ln240_2_reg_741 );

    SC_METHOD(thread_zext_ln240_fu_406_p1);
    sensitive << ( shl_ln_fu_398_p3 );

    SC_METHOD(thread_zext_ln243_fu_536_p1);
    sensitive << ( sub_ln243_1_reg_746 );

    SC_METHOD(thread_zext_ln246_fu_585_p1);
    sensitive << ( tmp_8_fu_577_p3 );

    SC_METHOD(thread_zext_ln254_1_fu_649_p1);
    sensitive << ( sub_ln254_fu_643_p2 );

    SC_METHOD(thread_zext_ln254_fu_628_p1);
    sensitive << ( j_3_i_reg_251 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln227_fu_294_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln235_fu_382_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln252_fu_616_p2 );
    sensitive << ( icmp_ln223_fu_270_p2 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00000000001";
    ap_return_0_preg = "00000000000000000000000000000000";
    ap_return_1_preg = "00000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Loop_Pipeline_loop4_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, p_read, "(port)p_read");
    sc_trace(mVcdFile, p_read1, "(port)p_read1");
    sc_trace(mVcdFile, sub_key_address0, "(port)sub_key_address0");
    sc_trace(mVcdFile, sub_key_ce0, "(port)sub_key_ce0");
    sc_trace(mVcdFile, sub_key_q0, "(port)sub_key_q0");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, P_address0, "P_address0");
    sc_trace(mVcdFile, P_ce0, "P_ce0");
    sc_trace(mVcdFile, P_q0, "P_q0");
    sc_trace(mVcdFile, E_address0, "E_address0");
    sc_trace(mVcdFile, E_ce0, "E_ce0");
    sc_trace(mVcdFile, E_q0, "E_q0");
    sc_trace(mVcdFile, S_address0, "S_address0");
    sc_trace(mVcdFile, S_ce0, "S_ce0");
    sc_trace(mVcdFile, S_q0, "S_q0");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, i_fu_276_p2, "i_fu_276_p2");
    sc_trace(mVcdFile, i_reg_690, "i_reg_690");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, j_fu_300_p2, "j_fu_300_p2");
    sc_trace(mVcdFile, j_reg_698, "j_reg_698");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln227_fu_294_p2, "icmp_ln227_fu_294_p2");
    sc_trace(mVcdFile, s_input_fu_346_p3, "s_input_fu_346_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, xor_ln232_fu_370_p2, "xor_ln232_fu_370_p2");
    sc_trace(mVcdFile, xor_ln232_reg_718, "xor_ln232_reg_718");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, xor_ln232_1_fu_376_p2, "xor_ln232_1_fu_376_p2");
    sc_trace(mVcdFile, xor_ln232_1_reg_723, "xor_ln232_1_reg_723");
    sc_trace(mVcdFile, j_1_fu_388_p2, "j_1_fu_388_p2");
    sc_trace(mVcdFile, j_1_reg_731, "j_1_reg_731");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, sub_ln240_fu_420_p2, "sub_ln240_fu_420_p2");
    sc_trace(mVcdFile, sub_ln240_reg_736, "sub_ln240_reg_736");
    sc_trace(mVcdFile, icmp_ln235_fu_382_p2, "icmp_ln235_fu_382_p2");
    sc_trace(mVcdFile, sub_ln240_2_fu_448_p2, "sub_ln240_2_fu_448_p2");
    sc_trace(mVcdFile, sub_ln240_2_reg_741, "sub_ln240_2_reg_741");
    sc_trace(mVcdFile, sub_ln243_1_fu_460_p2, "sub_ln243_1_fu_460_p2");
    sc_trace(mVcdFile, sub_ln243_1_reg_746, "sub_ln243_1_reg_746");
    sc_trace(mVcdFile, add_ln246_1_fu_589_p2, "add_ln246_1_fu_589_p2");
    sc_trace(mVcdFile, add_ln246_1_reg_751, "add_ln246_1_reg_751");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, j_2_fu_622_p2, "j_2_fu_622_p2");
    sc_trace(mVcdFile, j_2_reg_764, "j_2_reg_764");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, icmp_ln252_fu_616_p2, "icmp_ln252_fu_616_p2");
    sc_trace(mVcdFile, trunc_ln254_1_fu_633_p1, "trunc_ln254_1_fu_633_p1");
    sc_trace(mVcdFile, trunc_ln254_1_reg_774, "trunc_ln254_1_reg_774");
    sc_trace(mVcdFile, R_fu_637_p2, "R_fu_637_p2");
    sc_trace(mVcdFile, f_function_res_fu_663_p3, "f_function_res_fu_663_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, temp_reg_172, "temp_reg_172");
    sc_trace(mVcdFile, L_0_loc_0_reg_182, "L_0_loc_0_reg_182");
    sc_trace(mVcdFile, i_3_i_reg_193, "i_3_i_reg_193");
    sc_trace(mVcdFile, s_input_0_i_reg_205, "s_input_0_i_reg_205");
    sc_trace(mVcdFile, icmp_ln223_fu_270_p2, "icmp_ln223_fu_270_p2");
    sc_trace(mVcdFile, j_1_i_reg_217, "j_1_i_reg_217");
    sc_trace(mVcdFile, j_2_i_reg_228, "j_2_i_reg_228");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, f_function_res_0_i_reg_240, "f_function_res_0_i_reg_240");
    sc_trace(mVcdFile, j_3_i_reg_251, "j_3_i_reg_251");
    sc_trace(mVcdFile, zext_ln229_fu_306_p1, "zext_ln229_fu_306_p1");
    sc_trace(mVcdFile, zext_ln232_fu_317_p1, "zext_ln232_fu_317_p1");
    sc_trace(mVcdFile, sext_ln246_2_fu_595_p1, "sext_ln246_2_fu_595_p1");
    sc_trace(mVcdFile, zext_ln254_fu_628_p1, "zext_ln254_fu_628_p1");
    sc_trace(mVcdFile, s_output_1_fu_104, "s_output_1_fu_104");
    sc_trace(mVcdFile, s_output_fu_603_p3, "s_output_fu_603_p3");
    sc_trace(mVcdFile, sub_ln232_fu_311_p2, "sub_ln232_fu_311_p2");
    sc_trace(mVcdFile, sub_ln229_fu_322_p2, "sub_ln229_fu_322_p2");
    sc_trace(mVcdFile, zext_ln229_1_fu_328_p1, "zext_ln229_1_fu_328_p1");
    sc_trace(mVcdFile, lshr_ln229_fu_332_p2, "lshr_ln229_fu_332_p2");
    sc_trace(mVcdFile, trunc_ln229_1_fu_342_p1, "trunc_ln229_1_fu_342_p1");
    sc_trace(mVcdFile, trunc_ln229_fu_338_p1, "trunc_ln229_fu_338_p1");
    sc_trace(mVcdFile, trunc_ln232_3_fu_366_p1, "trunc_ln232_3_fu_366_p1");
    sc_trace(mVcdFile, trunc_ln232_2_fu_362_p1, "trunc_ln232_2_fu_362_p1");
    sc_trace(mVcdFile, trunc_ln232_1_fu_358_p1, "trunc_ln232_1_fu_358_p1");
    sc_trace(mVcdFile, trunc_ln232_fu_354_p1, "trunc_ln232_fu_354_p1");
    sc_trace(mVcdFile, trunc_ln240_fu_394_p1, "trunc_ln240_fu_394_p1");
    sc_trace(mVcdFile, shl_ln_fu_398_p3, "shl_ln_fu_398_p3");
    sc_trace(mVcdFile, shl_ln240_fu_410_p2, "shl_ln240_fu_410_p2");
    sc_trace(mVcdFile, zext_ln240_fu_406_p1, "zext_ln240_fu_406_p1");
    sc_trace(mVcdFile, zext_ln240_1_fu_416_p1, "zext_ln240_1_fu_416_p1");
    sc_trace(mVcdFile, shl_ln240_2_fu_430_p3, "shl_ln240_2_fu_430_p3");
    sc_trace(mVcdFile, zext_ln240_4_fu_426_p1, "zext_ln240_4_fu_426_p1");
    sc_trace(mVcdFile, sub_ln240_1_fu_442_p2, "sub_ln240_1_fu_442_p2");
    sc_trace(mVcdFile, zext_ln240_5_fu_438_p1, "zext_ln240_5_fu_438_p1");
    sc_trace(mVcdFile, sub_ln243_fu_454_p2, "sub_ln243_fu_454_p2");
    sc_trace(mVcdFile, sext_ln240_fu_466_p1, "sext_ln240_fu_466_p1");
    sc_trace(mVcdFile, zext_ln240_3_fu_473_p1, "zext_ln240_3_fu_473_p1");
    sc_trace(mVcdFile, lshr_ln240_fu_477_p2, "lshr_ln240_fu_477_p2");
    sc_trace(mVcdFile, and_ln240_fu_483_p2, "and_ln240_fu_483_p2");
    sc_trace(mVcdFile, zext_ln240_6_fu_488_p1, "zext_ln240_6_fu_488_p1");
    sc_trace(mVcdFile, lshr_ln240_1_fu_491_p2, "lshr_ln240_1_fu_491_p2");
    sc_trace(mVcdFile, tmp_fu_501_p3, "tmp_fu_501_p3");
    sc_trace(mVcdFile, trunc_ln240_1_fu_497_p1, "trunc_ln240_1_fu_497_p1");
    sc_trace(mVcdFile, zext_ln240_2_fu_469_p1, "zext_ln240_2_fu_469_p1");
    sc_trace(mVcdFile, lshr_ln243_fu_525_p2, "lshr_ln243_fu_525_p2");
    sc_trace(mVcdFile, and_ln243_fu_531_p2, "and_ln243_fu_531_p2");
    sc_trace(mVcdFile, zext_ln243_fu_536_p1, "zext_ln243_fu_536_p1");
    sc_trace(mVcdFile, lshr_ln243_1_fu_539_p2, "lshr_ln243_1_fu_539_p2");
    sc_trace(mVcdFile, trunc_ln243_fu_545_p1, "trunc_ln243_fu_545_p1");
    sc_trace(mVcdFile, tmp_1_fu_515_p4, "tmp_1_fu_515_p4");
    sc_trace(mVcdFile, or_ln241_fu_509_p2, "or_ln241_fu_509_p2");
    sc_trace(mVcdFile, tmp_7_fu_553_p4, "tmp_7_fu_553_p4");
    sc_trace(mVcdFile, sext_ln246_fu_563_p1, "sext_ln246_fu_563_p1");
    sc_trace(mVcdFile, sext_ln243_fu_549_p1, "sext_ln243_fu_549_p1");
    sc_trace(mVcdFile, add_ln246_fu_567_p2, "add_ln246_fu_567_p2");
    sc_trace(mVcdFile, tmp_8_fu_577_p3, "tmp_8_fu_577_p3");
    sc_trace(mVcdFile, sext_ln246_1_fu_573_p1, "sext_ln246_1_fu_573_p1");
    sc_trace(mVcdFile, zext_ln246_fu_585_p1, "zext_ln246_fu_585_p1");
    sc_trace(mVcdFile, trunc_ln246_fu_599_p1, "trunc_ln246_fu_599_p1");
    sc_trace(mVcdFile, sub_ln254_fu_643_p2, "sub_ln254_fu_643_p2");
    sc_trace(mVcdFile, zext_ln254_1_fu_649_p1, "zext_ln254_1_fu_649_p1");
    sc_trace(mVcdFile, lshr_ln254_fu_653_p2, "lshr_ln254_fu_653_p2");
    sc_trace(mVcdFile, trunc_ln254_fu_659_p1, "trunc_ln254_fu_659_p1");
    sc_trace(mVcdFile, ap_return_0_preg, "ap_return_0_preg");
    sc_trace(mVcdFile, ap_return_1_preg, "ap_return_1_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

Loop_Pipeline_loop4_s::~Loop_Pipeline_loop4_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete P_U;
    delete E_U;
    delete S_U;
}

void Loop_Pipeline_loop4_s::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        L_0_loc_0_reg_182 = p_read1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln252_fu_616_p2.read()))) {
        L_0_loc_0_reg_182 = temp_reg_172.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln223_fu_270_p2.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_0_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln223_fu_270_p2.read()))) {
            ap_return_0_preg = temp_reg_172.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_1_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln223_fu_270_p2.read()))) {
            ap_return_1_preg = L_0_loc_0_reg_182.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln235_fu_382_p2.read()))) {
        f_function_res_0_i_reg_240 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        f_function_res_0_i_reg_240 = f_function_res_fu_663_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        i_3_i_reg_193 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln252_fu_616_p2.read()))) {
        i_3_i_reg_193 = i_reg_690.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_1_i_reg_217 = j_reg_698.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln223_fu_270_p2.read()))) {
        j_1_i_reg_217 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        j_2_i_reg_228 = j_1_reg_731.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        j_2_i_reg_228 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln235_fu_382_p2.read()))) {
        j_3_i_reg_251 = ap_const_lv6_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        j_3_i_reg_251 = j_2_reg_764.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        s_input_0_i_reg_205 = s_input_fu_346_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln223_fu_270_p2.read()))) {
        s_input_0_i_reg_205 = ap_const_lv64_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        s_output_1_fu_104 = s_output_fu_603_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        s_output_1_fu_104 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        temp_reg_172 = p_read.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln252_fu_616_p2.read()))) {
        temp_reg_172 = R_fu_637_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        add_ln246_1_reg_751 = add_ln246_1_fu_589_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_690 = i_fu_276_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        j_1_reg_731 = j_1_fu_388_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        j_2_reg_764 = j_2_fu_622_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_reg_698 = j_fu_300_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln235_fu_382_p2.read()))) {
        sub_ln240_2_reg_741 = sub_ln240_2_fu_448_p2.read();
        sub_ln240_reg_736 = sub_ln240_fu_420_p2.read();
        sub_ln243_1_reg_746 = sub_ln243_1_fu_460_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln252_fu_616_p2.read()))) {
        trunc_ln254_1_reg_774 = trunc_ln254_1_fu_633_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        xor_ln232_1_reg_723 = xor_ln232_1_fu_376_p2.read();
        xor_ln232_reg_718 = xor_ln232_fu_370_p2.read();
    }
}

void Loop_Pipeline_loop4_s::thread_E_address0() {
    E_address0 =  (sc_lv<6>) (zext_ln229_fu_306_p1.read());
}

void Loop_Pipeline_loop4_s::thread_E_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        E_ce0 = ap_const_logic_1;
    } else {
        E_ce0 = ap_const_logic_0;
    }
}

void Loop_Pipeline_loop4_s::thread_P_address0() {
    P_address0 =  (sc_lv<5>) (zext_ln254_fu_628_p1.read());
}

void Loop_Pipeline_loop4_s::thread_P_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        P_ce0 = ap_const_logic_1;
    } else {
        P_ce0 = ap_const_logic_0;
    }
}

void Loop_Pipeline_loop4_s::thread_R_fu_637_p2() {
    R_fu_637_p2 = (f_function_res_0_i_reg_240.read() ^ L_0_loc_0_reg_182.read());
}

void Loop_Pipeline_loop4_s::thread_S_address0() {
    S_address0 =  (sc_lv<9>) (sext_ln246_2_fu_595_p1.read());
}

void Loop_Pipeline_loop4_s::thread_S_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        S_ce0 = ap_const_logic_1;
    } else {
        S_ce0 = ap_const_logic_0;
    }
}

void Loop_Pipeline_loop4_s::thread_add_ln246_1_fu_589_p2() {
    add_ln246_1_fu_589_p2 = (!sext_ln246_1_fu_573_p1.read().is_01() || !zext_ln246_fu_585_p1.read().is_01())? sc_lv<11>(): (sc_bigint<11>(sext_ln246_1_fu_573_p1.read()) + sc_biguint<11>(zext_ln246_fu_585_p1.read()));
}

void Loop_Pipeline_loop4_s::thread_add_ln246_fu_567_p2() {
    add_ln246_fu_567_p2 = (!sext_ln246_fu_563_p1.read().is_01() || !sext_ln243_fu_549_p1.read().is_01())? sc_lv<9>(): (sc_bigint<9>(sext_ln246_fu_563_p1.read()) + sc_bigint<9>(sext_ln243_fu_549_p1.read()));
}

void Loop_Pipeline_loop4_s::thread_and_ln240_fu_483_p2() {
    and_ln240_fu_483_p2 = (lshr_ln240_fu_477_p2.read() & xor_ln232_reg_718.read());
}

void Loop_Pipeline_loop4_s::thread_and_ln243_fu_531_p2() {
    and_ln243_fu_531_p2 = (lshr_ln243_fu_525_p2.read() & xor_ln232_1_reg_723.read());
}

void Loop_Pipeline_loop4_s::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Loop_Pipeline_loop4_s::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void Loop_Pipeline_loop4_s::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void Loop_Pipeline_loop4_s::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Loop_Pipeline_loop4_s::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void Loop_Pipeline_loop4_s::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void Loop_Pipeline_loop4_s::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void Loop_Pipeline_loop4_s::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void Loop_Pipeline_loop4_s::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void Loop_Pipeline_loop4_s::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void Loop_Pipeline_loop4_s::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void Loop_Pipeline_loop4_s::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void Loop_Pipeline_loop4_s::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln223_fu_270_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Loop_Pipeline_loop4_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Loop_Pipeline_loop4_s::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln223_fu_270_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Loop_Pipeline_loop4_s::thread_ap_return_0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln223_fu_270_p2.read()))) {
        ap_return_0 = temp_reg_172.read();
    } else {
        ap_return_0 = ap_return_0_preg.read();
    }
}

void Loop_Pipeline_loop4_s::thread_ap_return_1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln223_fu_270_p2.read()))) {
        ap_return_1 = L_0_loc_0_reg_182.read();
    } else {
        ap_return_1 = ap_return_1_preg.read();
    }
}

void Loop_Pipeline_loop4_s::thread_f_function_res_fu_663_p3() {
    f_function_res_fu_663_p3 = esl_concat<31,1>(trunc_ln254_1_reg_774.read(), trunc_ln254_fu_659_p1.read());
}

void Loop_Pipeline_loop4_s::thread_i_fu_276_p2() {
    i_fu_276_p2 = (!i_3_i_reg_193.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_3_i_reg_193.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void Loop_Pipeline_loop4_s::thread_icmp_ln223_fu_270_p2() {
    icmp_ln223_fu_270_p2 = (!i_3_i_reg_193.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_3_i_reg_193.read() == ap_const_lv5_10);
}

void Loop_Pipeline_loop4_s::thread_icmp_ln227_fu_294_p2() {
    icmp_ln227_fu_294_p2 = (!j_1_i_reg_217.read().is_01() || !ap_const_lv6_30.is_01())? sc_lv<1>(): sc_lv<1>(j_1_i_reg_217.read() == ap_const_lv6_30);
}

void Loop_Pipeline_loop4_s::thread_icmp_ln235_fu_382_p2() {
    icmp_ln235_fu_382_p2 = (!j_2_i_reg_228.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j_2_i_reg_228.read() == ap_const_lv4_8);
}

void Loop_Pipeline_loop4_s::thread_icmp_ln252_fu_616_p2() {
    icmp_ln252_fu_616_p2 = (!j_3_i_reg_251.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(j_3_i_reg_251.read() == ap_const_lv6_20);
}

void Loop_Pipeline_loop4_s::thread_j_1_fu_388_p2() {
    j_1_fu_388_p2 = (!j_2_i_reg_228.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_2_i_reg_228.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void Loop_Pipeline_loop4_s::thread_j_2_fu_622_p2() {
    j_2_fu_622_p2 = (!j_3_i_reg_251.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(j_3_i_reg_251.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void Loop_Pipeline_loop4_s::thread_j_fu_300_p2() {
    j_fu_300_p2 = (!j_1_i_reg_217.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(j_1_i_reg_217.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void Loop_Pipeline_loop4_s::thread_lshr_ln229_fu_332_p2() {
    lshr_ln229_fu_332_p2 = (!zext_ln229_1_fu_328_p1.read().is_01())? sc_lv<32>(): temp_reg_172.read() >> (unsigned short)zext_ln229_1_fu_328_p1.read().to_uint();
}

void Loop_Pipeline_loop4_s::thread_lshr_ln240_1_fu_491_p2() {
    lshr_ln240_1_fu_491_p2 = (!zext_ln240_6_fu_488_p1.read().is_01())? sc_lv<48>(): and_ln240_fu_483_p2.read() >> (unsigned short)zext_ln240_6_fu_488_p1.read().to_uint();
}

void Loop_Pipeline_loop4_s::thread_lshr_ln240_fu_477_p2() {
    lshr_ln240_fu_477_p2 = (!zext_ln240_3_fu_473_p1.read().is_01())? sc_lv<48>(): ap_const_lv48_840000000000 >> (unsigned short)zext_ln240_3_fu_473_p1.read().to_uint();
}

void Loop_Pipeline_loop4_s::thread_lshr_ln243_1_fu_539_p2() {
    lshr_ln243_1_fu_539_p2 = (!zext_ln243_fu_536_p1.read().is_01())? sc_lv<47>(): and_ln243_fu_531_p2.read() >> (unsigned short)zext_ln243_fu_536_p1.read().to_uint();
}

void Loop_Pipeline_loop4_s::thread_lshr_ln243_fu_525_p2() {
    lshr_ln243_fu_525_p2 = (!zext_ln240_2_fu_469_p1.read().is_01())? sc_lv<47>(): ap_const_lv47_780000000000 >> (unsigned short)zext_ln240_2_fu_469_p1.read().to_uint();
}

void Loop_Pipeline_loop4_s::thread_lshr_ln254_fu_653_p2() {
    lshr_ln254_fu_653_p2 = (!zext_ln254_1_fu_649_p1.read().is_01())? sc_lv<32>(): s_output_1_fu_104.read() >> (unsigned short)zext_ln254_1_fu_649_p1.read().to_uint();
}

void Loop_Pipeline_loop4_s::thread_or_ln241_fu_509_p2() {
    or_ln241_fu_509_p2 = (tmp_fu_501_p3.read() | trunc_ln240_1_fu_497_p1.read());
}

void Loop_Pipeline_loop4_s::thread_s_input_fu_346_p3() {
    s_input_fu_346_p3 = esl_concat<63,1>(trunc_ln229_1_fu_342_p1.read(), trunc_ln229_fu_338_p1.read());
}

void Loop_Pipeline_loop4_s::thread_s_output_fu_603_p3() {
    s_output_fu_603_p3 = esl_concat<28,4>(trunc_ln246_fu_599_p1.read(), S_q0.read());
}

void Loop_Pipeline_loop4_s::thread_sext_ln240_fu_466_p1() {
    sext_ln240_fu_466_p1 = esl_sext<32,7>(sub_ln240_reg_736.read());
}

void Loop_Pipeline_loop4_s::thread_sext_ln243_fu_549_p1() {
    sext_ln243_fu_549_p1 = esl_sext<9,8>(trunc_ln243_fu_545_p1.read());
}

void Loop_Pipeline_loop4_s::thread_sext_ln246_1_fu_573_p1() {
    sext_ln246_1_fu_573_p1 = esl_sext<11,9>(add_ln246_fu_567_p2.read());
}

void Loop_Pipeline_loop4_s::thread_sext_ln246_2_fu_595_p1() {
    sext_ln246_2_fu_595_p1 = esl_sext<64,11>(add_ln246_1_reg_751.read());
}

void Loop_Pipeline_loop4_s::thread_sext_ln246_fu_563_p1() {
    sext_ln246_fu_563_p1 = esl_sext<9,8>(tmp_7_fu_553_p4.read());
}

void Loop_Pipeline_loop4_s::thread_shl_ln240_2_fu_430_p3() {
    shl_ln240_2_fu_430_p3 = esl_concat<3,2>(trunc_ln240_fu_394_p1.read(), ap_const_lv2_0);
}

void Loop_Pipeline_loop4_s::thread_shl_ln240_fu_410_p2() {
    shl_ln240_fu_410_p2 = (!ap_const_lv4_1.is_01())? sc_lv<4>(): j_2_i_reg_228.read() << (unsigned short)ap_const_lv4_1.to_uint();
}

void Loop_Pipeline_loop4_s::thread_shl_ln_fu_398_p3() {
    shl_ln_fu_398_p3 = esl_concat<3,3>(trunc_ln240_fu_394_p1.read(), ap_const_lv3_0);
}

void Loop_Pipeline_loop4_s::thread_sub_key_address0() {
    sub_key_address0 =  (sc_lv<4>) (zext_ln232_fu_317_p1.read());
}

void Loop_Pipeline_loop4_s::thread_sub_key_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sub_key_ce0 = ap_const_logic_1;
    } else {
        sub_key_ce0 = ap_const_logic_0;
    }
}

void Loop_Pipeline_loop4_s::thread_sub_ln229_fu_322_p2() {
    sub_ln229_fu_322_p2 = (!ap_const_lv6_20.is_01() || !E_q0.read().is_01())? sc_lv<6>(): (sc_bigint<6>(ap_const_lv6_20) - sc_biguint<6>(E_q0.read()));
}

void Loop_Pipeline_loop4_s::thread_sub_ln232_fu_311_p2() {
    sub_ln232_fu_311_p2 = (!ap_const_lv5_F.is_01() || !i_3_i_reg_193.read().is_01())? sc_lv<5>(): (sc_biguint<5>(ap_const_lv5_F) - sc_biguint<5>(i_3_i_reg_193.read()));
}

void Loop_Pipeline_loop4_s::thread_sub_ln240_1_fu_442_p2() {
    sub_ln240_1_fu_442_p2 = (!ap_const_lv6_2A.is_01() || !zext_ln240_4_fu_426_p1.read().is_01())? sc_lv<6>(): (sc_bigint<6>(ap_const_lv6_2A) - sc_biguint<6>(zext_ln240_4_fu_426_p1.read()));
}

void Loop_Pipeline_loop4_s::thread_sub_ln240_2_fu_448_p2() {
    sub_ln240_2_fu_448_p2 = (!sub_ln240_1_fu_442_p2.read().is_01() || !zext_ln240_5_fu_438_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(sub_ln240_1_fu_442_p2.read()) - sc_biguint<6>(zext_ln240_5_fu_438_p1.read()));
}

void Loop_Pipeline_loop4_s::thread_sub_ln240_fu_420_p2() {
    sub_ln240_fu_420_p2 = (!zext_ln240_fu_406_p1.read().is_01() || !zext_ln240_1_fu_416_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(zext_ln240_fu_406_p1.read()) - sc_biguint<7>(zext_ln240_1_fu_416_p1.read()));
}

void Loop_Pipeline_loop4_s::thread_sub_ln243_1_fu_460_p2() {
    sub_ln243_1_fu_460_p2 = (!sub_ln243_fu_454_p2.read().is_01() || !zext_ln240_5_fu_438_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(sub_ln243_fu_454_p2.read()) - sc_biguint<6>(zext_ln240_5_fu_438_p1.read()));
}

void Loop_Pipeline_loop4_s::thread_sub_ln243_fu_454_p2() {
    sub_ln243_fu_454_p2 = (!ap_const_lv6_2B.is_01() || !zext_ln240_4_fu_426_p1.read().is_01())? sc_lv<6>(): (sc_bigint<6>(ap_const_lv6_2B) - sc_biguint<6>(zext_ln240_4_fu_426_p1.read()));
}

void Loop_Pipeline_loop4_s::thread_sub_ln254_fu_643_p2() {
    sub_ln254_fu_643_p2 = (!ap_const_lv6_20.is_01() || !P_q0.read().is_01())? sc_lv<6>(): (sc_bigint<6>(ap_const_lv6_20) - sc_biguint<6>(P_q0.read()));
}

void Loop_Pipeline_loop4_s::thread_tmp_1_fu_515_p4() {
    tmp_1_fu_515_p4 = lshr_ln240_1_fu_491_p2.read().range(7, 5);
}

void Loop_Pipeline_loop4_s::thread_tmp_7_fu_553_p4() {
    tmp_7_fu_553_p4 = esl_concat<4,4>(esl_concat<3,1>(tmp_1_fu_515_p4.read(), or_ln241_fu_509_p2.read()), ap_const_lv4_0);
}

void Loop_Pipeline_loop4_s::thread_tmp_8_fu_577_p3() {
    tmp_8_fu_577_p3 = esl_concat<4,6>(j_2_i_reg_228.read(), ap_const_lv6_0);
}

void Loop_Pipeline_loop4_s::thread_tmp_fu_501_p3() {
    tmp_fu_501_p3 = lshr_ln240_1_fu_491_p2.read().range(4, 4);
}

void Loop_Pipeline_loop4_s::thread_trunc_ln229_1_fu_342_p1() {
    trunc_ln229_1_fu_342_p1 = s_input_0_i_reg_205.read().range(63-1, 0);
}

void Loop_Pipeline_loop4_s::thread_trunc_ln229_fu_338_p1() {
    trunc_ln229_fu_338_p1 = lshr_ln229_fu_332_p2.read().range(1-1, 0);
}

void Loop_Pipeline_loop4_s::thread_trunc_ln232_1_fu_358_p1() {
    trunc_ln232_1_fu_358_p1 = sub_key_q0.read().range(47-1, 0);
}

void Loop_Pipeline_loop4_s::thread_trunc_ln232_2_fu_362_p1() {
    trunc_ln232_2_fu_362_p1 = s_input_0_i_reg_205.read().range(48-1, 0);
}

void Loop_Pipeline_loop4_s::thread_trunc_ln232_3_fu_366_p1() {
    trunc_ln232_3_fu_366_p1 = sub_key_q0.read().range(48-1, 0);
}

void Loop_Pipeline_loop4_s::thread_trunc_ln232_fu_354_p1() {
    trunc_ln232_fu_354_p1 = s_input_0_i_reg_205.read().range(47-1, 0);
}

void Loop_Pipeline_loop4_s::thread_trunc_ln240_1_fu_497_p1() {
    trunc_ln240_1_fu_497_p1 = lshr_ln240_1_fu_491_p2.read().range(1-1, 0);
}

void Loop_Pipeline_loop4_s::thread_trunc_ln240_fu_394_p1() {
    trunc_ln240_fu_394_p1 = j_2_i_reg_228.read().range(3-1, 0);
}

void Loop_Pipeline_loop4_s::thread_trunc_ln243_fu_545_p1() {
    trunc_ln243_fu_545_p1 = lshr_ln243_1_fu_539_p2.read().range(8-1, 0);
}

void Loop_Pipeline_loop4_s::thread_trunc_ln246_fu_599_p1() {
    trunc_ln246_fu_599_p1 = s_output_1_fu_104.read().range(28-1, 0);
}

void Loop_Pipeline_loop4_s::thread_trunc_ln254_1_fu_633_p1() {
    trunc_ln254_1_fu_633_p1 = f_function_res_0_i_reg_240.read().range(31-1, 0);
}

void Loop_Pipeline_loop4_s::thread_trunc_ln254_fu_659_p1() {
    trunc_ln254_fu_659_p1 = lshr_ln254_fu_653_p2.read().range(1-1, 0);
}

void Loop_Pipeline_loop4_s::thread_xor_ln232_1_fu_376_p2() {
    xor_ln232_1_fu_376_p2 = (trunc_ln232_1_fu_358_p1.read() ^ trunc_ln232_fu_354_p1.read());
}

void Loop_Pipeline_loop4_s::thread_xor_ln232_fu_370_p2() {
    xor_ln232_fu_370_p2 = (trunc_ln232_3_fu_366_p1.read() ^ trunc_ln232_2_fu_362_p1.read());
}

void Loop_Pipeline_loop4_s::thread_zext_ln229_1_fu_328_p1() {
    zext_ln229_1_fu_328_p1 = esl_zext<32,6>(sub_ln229_fu_322_p2.read());
}

void Loop_Pipeline_loop4_s::thread_zext_ln229_fu_306_p1() {
    zext_ln229_fu_306_p1 = esl_zext<64,6>(j_1_i_reg_217.read());
}

void Loop_Pipeline_loop4_s::thread_zext_ln232_fu_317_p1() {
    zext_ln232_fu_317_p1 = esl_zext<64,5>(sub_ln232_fu_311_p2.read());
}

void Loop_Pipeline_loop4_s::thread_zext_ln240_1_fu_416_p1() {
    zext_ln240_1_fu_416_p1 = esl_zext<7,4>(shl_ln240_fu_410_p2.read());
}

void Loop_Pipeline_loop4_s::thread_zext_ln240_2_fu_469_p1() {
    zext_ln240_2_fu_469_p1 = esl_zext<47,32>(sext_ln240_fu_466_p1.read());
}

void Loop_Pipeline_loop4_s::thread_zext_ln240_3_fu_473_p1() {
    zext_ln240_3_fu_473_p1 = esl_zext<48,32>(sext_ln240_fu_466_p1.read());
}

void Loop_Pipeline_loop4_s::thread_zext_ln240_4_fu_426_p1() {
    zext_ln240_4_fu_426_p1 = esl_zext<6,4>(shl_ln240_fu_410_p2.read());
}

void Loop_Pipeline_loop4_s::thread_zext_ln240_5_fu_438_p1() {
    zext_ln240_5_fu_438_p1 = esl_zext<6,5>(shl_ln240_2_fu_430_p3.read());
}

void Loop_Pipeline_loop4_s::thread_zext_ln240_6_fu_488_p1() {
    zext_ln240_6_fu_488_p1 = esl_zext<48,6>(sub_ln240_2_reg_741.read());
}

void Loop_Pipeline_loop4_s::thread_zext_ln240_fu_406_p1() {
    zext_ln240_fu_406_p1 = esl_zext<7,6>(shl_ln_fu_398_p3.read());
}

void Loop_Pipeline_loop4_s::thread_zext_ln243_fu_536_p1() {
    zext_ln243_fu_536_p1 = esl_zext<47,6>(sub_ln243_1_reg_746.read());
}

void Loop_Pipeline_loop4_s::thread_zext_ln246_fu_585_p1() {
    zext_ln246_fu_585_p1 = esl_zext<11,10>(tmp_8_fu_577_p3.read());
}

void Loop_Pipeline_loop4_s::thread_zext_ln254_1_fu_649_p1() {
    zext_ln254_1_fu_649_p1 = esl_zext<32,6>(sub_ln254_fu_643_p2.read());
}

void Loop_Pipeline_loop4_s::thread_zext_ln254_fu_628_p1() {
    zext_ln254_fu_628_p1 = esl_zext<64,6>(j_3_i_reg_251.read());
}

void Loop_Pipeline_loop4_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln223_fu_270_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln227_fu_294_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln235_fu_382_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln252_fu_616_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXX";
            break;
    }
}

}


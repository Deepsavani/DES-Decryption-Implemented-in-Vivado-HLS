// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Loop_3_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        sub_key_address0,
        sub_key_ce0,
        sub_key_we0,
        sub_key_d0
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [59:0] p_read;
input  [63:0] p_read1;
output  [3:0] sub_key_address0;
output   sub_key_ce0;
output   sub_key_we0;
output  [63:0] sub_key_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg sub_key_ce0;
reg sub_key_we0;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [5:0] PC2_address0;
reg    PC2_ce0;
wire   [5:0] PC2_q0;
wire   [4:0] i_fu_177_p2;
reg   [4:0] i_reg_408;
wire    ap_CS_fsm_state2;
reg   [3:0] sub_key_addr_reg_416;
wire   [0:0] icmp_ln192_fu_171_p2;
wire   [55:0] tmp_8_fu_334_p3;
reg   [55:0] tmp_8_reg_421;
wire    ap_CS_fsm_state3;
wire   [5:0] j_fu_348_p2;
reg   [5:0] j_reg_429;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln216_fu_342_p2;
wire   [62:0] trunc_ln218_1_fu_359_p1;
reg   [62:0] trunc_ln218_1_reg_439;
wire   [63:0] or_ln_fu_382_p3;
wire    ap_CS_fsm_state5;
reg   [4:0] i_2_i_reg_107;
reg    ap_block_state1;
reg   [63:0] sub_key_load_reg_118;
reg   [5:0] j_0_i_reg_130;
wire   [63:0] zext_ln214_fu_329_p1;
wire   [63:0] zext_ln218_fu_354_p1;
reg   [27:0] C_3_fu_62;
wire   [27:0] C_1_fu_243_p3;
wire   [0:0] empty_76_fu_219_p2;
wire   [27:0] C_2_fu_291_p3;
reg   [27:0] D_fu_66;
wire   [27:0] D_3_fu_157_p1;
wire   [27:0] D_1_fu_261_p3;
wire   [27:0] D_2_fu_311_p3;
wire   [0:0] empty_71_fu_189_p2;
wire   [0:0] empty_70_fu_183_p2;
wire   [0:0] empty_73_fu_201_p2;
wire   [0:0] empty_72_fu_195_p2;
wire   [0:0] empty_75_fu_213_p2;
wire   [0:0] empty_74_fu_207_p2;
wire   [25:0] trunc_ln203_fu_225_p1;
wire   [1:0] tmp_s_fu_233_p4;
wire   [25:0] trunc_ln204_fu_229_p1;
wire   [1:0] tmp_2_fu_251_p4;
wire   [26:0] trunc_ln197_fu_287_p1;
wire   [0:0] tmp_fu_279_p3;
wire   [26:0] trunc_ln198_fu_307_p1;
wire   [0:0] tmp_1_fu_299_p3;
wire   [5:0] sub_ln218_fu_363_p2;
wire   [55:0] zext_ln218_1_fu_369_p1;
wire   [55:0] lshr_ln218_fu_373_p2;
wire   [0:0] trunc_ln218_fu_378_p1;
reg   [4:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
end

Loop_3_proc_PC2 #(
    .DataWidth( 6 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
PC2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(PC2_address0),
    .ce0(PC2_ce0),
    .q0(PC2_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln192_fu_171_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((empty_76_fu_219_p2 == 1'd1) & (icmp_ln192_fu_171_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        C_3_fu_62 <= C_2_fu_291_p3;
    end else if (((empty_76_fu_219_p2 == 1'd0) & (icmp_ln192_fu_171_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        C_3_fu_62 <= C_1_fu_243_p3;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        C_3_fu_62 <= {{p_read[55:28]}};
    end
end

always @ (posedge ap_clk) begin
    if (((empty_76_fu_219_p2 == 1'd1) & (icmp_ln192_fu_171_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        D_fu_66 <= D_2_fu_311_p3;
    end else if (((empty_76_fu_219_p2 == 1'd0) & (icmp_ln192_fu_171_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        D_fu_66 <= D_1_fu_261_p3;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        D_fu_66 <= D_3_fu_157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln216_fu_342_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        i_2_i_reg_107 <= i_reg_408;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_2_i_reg_107 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        j_0_i_reg_130 <= j_reg_429;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        j_0_i_reg_130 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        sub_key_load_reg_118 <= or_ln_fu_382_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        sub_key_load_reg_118 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_408 <= i_fu_177_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        j_reg_429 <= j_fu_348_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln192_fu_171_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        sub_key_addr_reg_416 <= zext_ln214_fu_329_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_8_reg_421 <= tmp_8_fu_334_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln216_fu_342_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        trunc_ln218_1_reg_439 <= trunc_ln218_1_fu_359_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PC2_ce0 = 1'b1;
    end else begin
        PC2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln192_fu_171_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln192_fu_171_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        sub_key_ce0 = 1'b1;
    end else begin
        sub_key_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        sub_key_we0 = 1'b1;
    end else begin
        sub_key_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln192_fu_171_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln216_fu_342_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign C_1_fu_243_p3 = {{trunc_ln203_fu_225_p1}, {tmp_s_fu_233_p4}};

assign C_2_fu_291_p3 = {{trunc_ln197_fu_287_p1}, {tmp_fu_279_p3}};

assign D_1_fu_261_p3 = {{trunc_ln204_fu_229_p1}, {tmp_2_fu_251_p4}};

assign D_2_fu_311_p3 = {{trunc_ln198_fu_307_p1}, {tmp_1_fu_299_p3}};

assign D_3_fu_157_p1 = p_read1[27:0];

assign PC2_address0 = zext_ln218_fu_354_p1;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign empty_70_fu_183_p2 = ((i_2_i_reg_107 == 5'd15) ? 1'b1 : 1'b0);

assign empty_71_fu_189_p2 = ((i_2_i_reg_107 == 5'd8) ? 1'b1 : 1'b0);

assign empty_72_fu_195_p2 = (empty_71_fu_189_p2 | empty_70_fu_183_p2);

assign empty_73_fu_201_p2 = ((i_2_i_reg_107 == 5'd1) ? 1'b1 : 1'b0);

assign empty_74_fu_207_p2 = (empty_73_fu_201_p2 | empty_72_fu_195_p2);

assign empty_75_fu_213_p2 = ((i_2_i_reg_107 == 5'd0) ? 1'b1 : 1'b0);

assign empty_76_fu_219_p2 = (empty_75_fu_213_p2 | empty_74_fu_207_p2);

assign i_fu_177_p2 = (i_2_i_reg_107 + 5'd1);

assign icmp_ln192_fu_171_p2 = ((i_2_i_reg_107 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln216_fu_342_p2 = ((j_0_i_reg_130 == 6'd48) ? 1'b1 : 1'b0);

assign j_fu_348_p2 = (j_0_i_reg_130 + 6'd1);

assign lshr_ln218_fu_373_p2 = tmp_8_reg_421 >> zext_ln218_1_fu_369_p1;

assign or_ln_fu_382_p3 = {{trunc_ln218_1_reg_439}, {trunc_ln218_fu_378_p1}};

assign sub_key_address0 = sub_key_addr_reg_416;

assign sub_key_d0 = sub_key_load_reg_118;

assign sub_ln218_fu_363_p2 = ($signed(6'd56) - $signed(PC2_q0));

assign tmp_1_fu_299_p3 = D_fu_66[32'd27];

assign tmp_2_fu_251_p4 = {{D_fu_66[27:26]}};

assign tmp_8_fu_334_p3 = {{C_3_fu_62}, {D_fu_66}};

assign tmp_fu_279_p3 = C_3_fu_62[32'd27];

assign tmp_s_fu_233_p4 = {{C_3_fu_62[27:26]}};

assign trunc_ln197_fu_287_p1 = C_3_fu_62[26:0];

assign trunc_ln198_fu_307_p1 = D_fu_66[26:0];

assign trunc_ln203_fu_225_p1 = C_3_fu_62[25:0];

assign trunc_ln204_fu_229_p1 = D_fu_66[25:0];

assign trunc_ln218_1_fu_359_p1 = sub_key_load_reg_118[62:0];

assign trunc_ln218_fu_378_p1 = lshr_ln218_fu_373_p2[0:0];

assign zext_ln214_fu_329_p1 = i_2_i_reg_107;

assign zext_ln218_1_fu_369_p1 = sub_ln218_fu_363_p2;

assign zext_ln218_fu_354_p1 = j_0_i_reg_130;

endmodule //Loop_3_proc

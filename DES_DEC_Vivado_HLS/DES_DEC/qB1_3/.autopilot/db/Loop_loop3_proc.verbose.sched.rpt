

================================================================
== Vivado HLS Report for 'Loop_loop3_proc'
================================================================
* Date:           Wed Dec 23 13:51:47 2020

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        DES_DEC
* Solution:       q21_3
* Product family: artix7
* Target device:  xc7a35tl-cpg236-2L


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     7.850|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  1585|  1585|  1585|  1585|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------+------+------+----------+-----------+-----------+------+----------+
        |            |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name |  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +------------+------+------+----------+-----------+-----------+------+----------+
        |- loop3     |  1584|  1584|        99|          -|          -|    16|    no    |
        | + loop3.1  |    96|    96|         2|          -|          -|    48|    no    |
        +------------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 2 
5 --> 4 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.45>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%C_3 = alloca i28"   --->   Operation 6 'alloca' 'C_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%D = alloca i28"   --->   Operation 7 'alloca' 'D' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%p_read_4 = call i64 @_ssdm_op_Read.ap_auto.i64(i64 %p_read1)" [desDecrypt.c:188]   --->   Operation 8 'read' 'p_read_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%p_read_5 = call i60 @_ssdm_op_Read.ap_auto.i60(i60 %p_read)" [desDecrypt.c:188]   --->   Operation 9 'read' 'p_read_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%C = call i28 @_ssdm_op_PartSelect.i28.i60.i32.i32(i60 %p_read_5, i32 28, i32 55)" [desDecrypt.c:188]   --->   Operation 10 'partselect' 'C' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%D_3 = trunc i64 %p_read_4 to i28" [desDecrypt.c:189]   --->   Operation 11 'trunc' 'D_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (1.45ns)   --->   "store i28 %D_3, i28* %D" [desDecrypt.c:192]   --->   Operation 12 'store' <Predicate = true> <Delay = 1.45>
ST_1 : Operation 13 [1/1] (1.45ns)   --->   "store i28 %C, i28* %C_3" [desDecrypt.c:192]   --->   Operation 13 'store' <Predicate = true> <Delay = 1.45>
ST_1 : Operation 14 [1/1] (1.35ns)   --->   "br label %0" [desDecrypt.c:192]   --->   Operation 14 'br' <Predicate = true> <Delay = 1.35>

State 2 <SV = 1> <Delay = 2.01>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%i_2_i = phi i5 [ 0, %entry ], [ %i, %loop3_end ]"   --->   Operation 15 'phi' 'i_2_i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (1.21ns)   --->   "%icmp_ln192 = icmp eq i5 %i_2_i, -16" [desDecrypt.c:192]   --->   Operation 16 'icmp' 'icmp_ln192' <Predicate = true> <Delay = 1.21> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.22> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16) nounwind"   --->   Operation 17 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (1.54ns)   --->   "%i = add i5 %i_2_i, 1" [desDecrypt.c:192]   --->   Operation 18 'add' 'i' <Predicate = true> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "br i1 %icmp_ln192, label %Loop_loop3_proc.exit, label %loop3_begin" [desDecrypt.c:192]   --->   Operation 19 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str4) nounwind" [desDecrypt.c:192]   --->   Operation 20 'specloopname' <Predicate = (!icmp_ln192)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%tmp_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([6 x i8]* @p_str4) nounwind" [desDecrypt.c:192]   --->   Operation 21 'specregionbegin' 'tmp_i' <Predicate = (!icmp_ln192)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%C_3_load = load i28* %C_3" [desDecrypt.c:197]   --->   Operation 22 'load' 'C_3_load' <Predicate = (!icmp_ln192)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%D_load = load i28* %D" [desDecrypt.c:198]   --->   Operation 23 'load' 'D_load' <Predicate = (!icmp_ln192)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (1.21ns)   --->   "%empty_67 = icmp eq i5 %i_2_i, 15" [desDecrypt.c:192]   --->   Operation 24 'icmp' 'empty_67' <Predicate = (!icmp_ln192)> <Delay = 1.21> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.22> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (1.21ns)   --->   "%empty_68 = icmp eq i5 %i_2_i, 8" [desDecrypt.c:192]   --->   Operation 25 'icmp' 'empty_68' <Predicate = (!icmp_ln192)> <Delay = 1.21> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.22> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.00ns) (grouped into LUT with out node empty_73)   --->   "%empty_69 = or i1 %empty_68, %empty_67" [desDecrypt.c:192]   --->   Operation 26 'or' 'empty_69' <Predicate = (!icmp_ln192)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (1.21ns)   --->   "%empty_70 = icmp eq i5 %i_2_i, 1" [desDecrypt.c:192]   --->   Operation 27 'icmp' 'empty_70' <Predicate = (!icmp_ln192)> <Delay = 1.21> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.22> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.00ns) (grouped into LUT with out node empty_73)   --->   "%empty_71 = or i1 %empty_70, %empty_69" [desDecrypt.c:192]   --->   Operation 28 'or' 'empty_71' <Predicate = (!icmp_ln192)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (1.21ns)   --->   "%empty_72 = icmp eq i5 %i_2_i, 0" [desDecrypt.c:192]   --->   Operation 29 'icmp' 'empty_72' <Predicate = (!icmp_ln192)> <Delay = 1.21> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.22> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (0.80ns) (out node of the LUT)   --->   "%empty_73 = or i1 %empty_72, %empty_71" [desDecrypt.c:192]   --->   Operation 30 'or' 'empty_73' <Predicate = (!icmp_ln192)> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "br i1 %empty_73, label %._crit_edge14.i, label %3" [desDecrypt.c:192]   --->   Operation 31 'br' <Predicate = (!icmp_ln192)> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%trunc_ln203 = trunc i28 %C_3_load to i26" [desDecrypt.c:203]   --->   Operation 32 'trunc' 'trunc_ln203' <Predicate = (!icmp_ln192 & !empty_73)> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%trunc_ln204 = trunc i28 %D_load to i26" [desDecrypt.c:204]   --->   Operation 33 'trunc' 'trunc_ln204' <Predicate = (!icmp_ln192 & !empty_73)> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%tmp_6 = call i2 @_ssdm_op_PartSelect.i2.i28.i32.i32(i28 %C_3_load, i32 26, i32 27)" [desDecrypt.c:203]   --->   Operation 34 'partselect' 'tmp_6' <Predicate = (!icmp_ln192 & !empty_73)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%C_1 = call i28 @_ssdm_op_BitConcatenate.i28.i26.i2(i26 %trunc_ln203, i2 %tmp_6)" [desDecrypt.c:203]   --->   Operation 35 'bitconcatenate' 'C_1' <Predicate = (!icmp_ln192 & !empty_73)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%tmp_7 = call i2 @_ssdm_op_PartSelect.i2.i28.i32.i32(i28 %D_load, i32 26, i32 27)" [desDecrypt.c:204]   --->   Operation 36 'partselect' 'tmp_7' <Predicate = (!icmp_ln192 & !empty_73)> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%D_1 = call i28 @_ssdm_op_BitConcatenate.i28.i26.i2(i26 %trunc_ln204, i2 %tmp_7)" [desDecrypt.c:204]   --->   Operation 37 'bitconcatenate' 'D_1' <Predicate = (!icmp_ln192 & !empty_73)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (1.45ns)   --->   "store i28 %D_1, i28* %D" [desDecrypt.c:204]   --->   Operation 38 'store' <Predicate = (!icmp_ln192 & !empty_73)> <Delay = 1.45>
ST_2 : Operation 39 [1/1] (1.45ns)   --->   "store i28 %C_1, i28* %C_3" [desDecrypt.c:203]   --->   Operation 39 'store' <Predicate = (!icmp_ln192 & !empty_73)> <Delay = 1.45>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "br label %2"   --->   Operation 40 'br' <Predicate = (!icmp_ln192 & !empty_73)> <Delay = 0.00>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%tmp = call i1 @_ssdm_op_BitSelect.i1.i28.i32(i28 %C_3_load, i32 27)" [desDecrypt.c:197]   --->   Operation 41 'bitselect' 'tmp' <Predicate = (!icmp_ln192 & empty_73)> <Delay = 0.00>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%trunc_ln197 = trunc i28 %C_3_load to i27" [desDecrypt.c:197]   --->   Operation 42 'trunc' 'trunc_ln197' <Predicate = (!icmp_ln192 & empty_73)> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%C_2 = call i28 @_ssdm_op_BitConcatenate.i28.i27.i1(i27 %trunc_ln197, i1 %tmp)" [desDecrypt.c:197]   --->   Operation 43 'bitconcatenate' 'C_2' <Predicate = (!icmp_ln192 & empty_73)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%tmp_1 = call i1 @_ssdm_op_BitSelect.i1.i28.i32(i28 %D_load, i32 27)" [desDecrypt.c:198]   --->   Operation 44 'bitselect' 'tmp_1' <Predicate = (!icmp_ln192 & empty_73)> <Delay = 0.00>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%trunc_ln198 = trunc i28 %D_load to i27" [desDecrypt.c:198]   --->   Operation 45 'trunc' 'trunc_ln198' <Predicate = (!icmp_ln192 & empty_73)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%D_2 = call i28 @_ssdm_op_BitConcatenate.i28.i27.i1(i27 %trunc_ln198, i1 %tmp_1)" [desDecrypt.c:198]   --->   Operation 46 'bitconcatenate' 'D_2' <Predicate = (!icmp_ln192 & empty_73)> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (1.45ns)   --->   "store i28 %D_2, i28* %D" [desDecrypt.c:199]   --->   Operation 47 'store' <Predicate = (!icmp_ln192 & empty_73)> <Delay = 1.45>
ST_2 : Operation 48 [1/1] (1.45ns)   --->   "store i28 %C_2, i28* %C_3" [desDecrypt.c:199]   --->   Operation 48 'store' <Predicate = (!icmp_ln192 & empty_73)> <Delay = 1.45>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "br label %2" [desDecrypt.c:199]   --->   Operation 49 'br' <Predicate = (!icmp_ln192 & empty_73)> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%zext_ln214 = zext i5 %i_2_i to i64" [desDecrypt.c:214]   --->   Operation 50 'zext' 'zext_ln214' <Predicate = (!icmp_ln192)> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%sub_key_addr = getelementptr inbounds [16 x i64]* %sub_key, i64 0, i64 %zext_ln214" [desDecrypt.c:214]   --->   Operation 51 'getelementptr' 'sub_key_addr' <Predicate = (!icmp_ln192)> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "ret void"   --->   Operation 52 'ret' <Predicate = (icmp_ln192)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 1.35>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%C_3_load_1 = load i28* %C_3" [desDecrypt.c:212]   --->   Operation 53 'load' 'C_3_load_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%D_load_1 = load i28* %D" [desDecrypt.c:212]   --->   Operation 54 'load' 'D_load_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%tmp_4 = call i56 @_ssdm_op_BitConcatenate.i56.i28.i28(i28 %C_3_load_1, i28 %D_load_1)" [desDecrypt.c:212]   --->   Operation 55 'bitconcatenate' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (1.35ns)   --->   "br label %1" [desDecrypt.c:216]   --->   Operation 56 'br' <Predicate = true> <Delay = 1.35>

State 4 <SV = 3> <Delay = 2.77>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%sub_key_load = phi i64 [ 0, %2 ], [ %or_ln, %4 ]" [desDecrypt.c:218]   --->   Operation 57 'phi' 'sub_key_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%j_0_i = phi i6 [ 0, %2 ], [ %j, %4 ]"   --->   Operation 58 'phi' 'j_0_i' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 59 [1/1] (2.77ns)   --->   "store i64 %sub_key_load, i64* %sub_key_addr, align 8" [desDecrypt.c:218]   --->   Operation 59 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 16> <RAM>
ST_4 : Operation 60 [1/1] (1.22ns)   --->   "%icmp_ln216 = icmp eq i6 %j_0_i, -16" [desDecrypt.c:216]   --->   Operation 60 'icmp' 'icmp_ln216' <Predicate = true> <Delay = 1.22> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.22> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 61 [1/1] (0.00ns)   --->   "%empty_66 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 48, i64 48, i64 48) nounwind"   --->   Operation 61 'speclooptripcount' 'empty_66' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 62 [1/1] (1.60ns)   --->   "%j = add i6 %j_0_i, 1" [desDecrypt.c:216]   --->   Operation 62 'add' 'j' <Predicate = true> <Delay = 1.60> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 63 [1/1] (0.00ns)   --->   "br i1 %icmp_ln216, label %loop3_end, label %4" [desDecrypt.c:216]   --->   Operation 63 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 64 [1/1] (0.00ns)   --->   "%zext_ln218 = zext i6 %j_0_i to i64" [desDecrypt.c:218]   --->   Operation 64 'zext' 'zext_ln218' <Predicate = (!icmp_ln216)> <Delay = 0.00>
ST_4 : Operation 65 [1/1] (0.00ns)   --->   "%PC2_addr = getelementptr [48 x i6]* @PC2, i64 0, i64 %zext_ln218" [desDecrypt.c:218]   --->   Operation 65 'getelementptr' 'PC2_addr' <Predicate = (!icmp_ln216)> <Delay = 0.00>
ST_4 : Operation 66 [2/2] (2.77ns)   --->   "%PC2_load = load i6* %PC2_addr, align 1" [desDecrypt.c:218]   --->   Operation 66 'load' 'PC2_load' <Predicate = (!icmp_ln216)> <Delay = 2.77> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 6> <Depth = 48> <ROM>
ST_4 : Operation 67 [1/1] (0.00ns)   --->   "%trunc_ln218_1 = trunc i64 %sub_key_load to i63" [desDecrypt.c:218]   --->   Operation 67 'trunc' 'trunc_ln218_1' <Predicate = (!icmp_ln216)> <Delay = 0.00>
ST_4 : Operation 68 [1/1] (0.00ns)   --->   "%empty_65 = call i32 (...)* @_ssdm_op_SpecRegionEnd([6 x i8]* @p_str4, i32 %tmp_i) nounwind" [desDecrypt.c:221]   --->   Operation 68 'specregionend' 'empty_65' <Predicate = (icmp_ln216)> <Delay = 0.00>
ST_4 : Operation 69 [1/1] (0.00ns)   --->   "br label %0" [desDecrypt.c:192]   --->   Operation 69 'br' <Predicate = (icmp_ln216)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 7.84>
ST_5 : Operation 70 [1/2] (2.77ns)   --->   "%PC2_load = load i6* %PC2_addr, align 1" [desDecrypt.c:218]   --->   Operation 70 'load' 'PC2_load' <Predicate = true> <Delay = 2.77> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 6> <Depth = 48> <ROM>
ST_5 : Operation 71 [1/1] (1.60ns)   --->   "%sub_ln218 = sub i6 -8, %PC2_load" [desDecrypt.c:218]   --->   Operation 71 'sub' 'sub_ln218' <Predicate = true> <Delay = 1.60> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 72 [1/1] (0.00ns)   --->   "%zext_ln218_1 = zext i6 %sub_ln218 to i56" [desDecrypt.c:218]   --->   Operation 72 'zext' 'zext_ln218_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 73 [1/1] (3.47ns)   --->   "%lshr_ln218 = lshr i56 %tmp_4, %zext_ln218_1" [desDecrypt.c:218]   --->   Operation 73 'lshr' 'lshr_ln218' <Predicate = true> <Delay = 3.47> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.47> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 74 [1/1] (0.00ns)   --->   "%trunc_ln218 = trunc i56 %lshr_ln218 to i1" [desDecrypt.c:218]   --->   Operation 74 'trunc' 'trunc_ln218' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 75 [1/1] (0.00ns)   --->   "%or_ln = call i64 @_ssdm_op_BitConcatenate.i64.i63.i1(i63 %trunc_ln218_1, i1 %trunc_ln218)" [desDecrypt.c:218]   --->   Operation 75 'bitconcatenate' 'or_ln' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 76 [1/1] (0.00ns)   --->   "br label %1" [desDecrypt.c:216]   --->   Operation 76 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.45ns
The critical path consists of the following:
	'alloca' operation ('C') [5]  (0 ns)
	'store' operation ('store_ln192', desDecrypt.c:192) of variable 'C', desDecrypt.c:188 on local variable 'C' [12]  (1.45 ns)

 <State 2>: 2.02ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', desDecrypt.c:192) [15]  (0 ns)
	'icmp' operation ('empty_72', desDecrypt.c:192) [30]  (1.22 ns)
	'or' operation ('empty_73', desDecrypt.c:192) [31]  (0.8 ns)

 <State 3>: 1.35ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('sub_key_load', desDecrypt.c:218) with incoming values : ('or_ln', desDecrypt.c:218) [61]  (1.35 ns)

 <State 4>: 2.77ns
The critical path consists of the following:
	'phi' operation ('sub_key_load', desDecrypt.c:218) with incoming values : ('or_ln', desDecrypt.c:218) [61]  (0 ns)
	'store' operation ('store_ln218', desDecrypt.c:218) of variable 'sub_key_load', desDecrypt.c:218 on array 'sub_key' [63]  (2.77 ns)

 <State 5>: 7.85ns
The critical path consists of the following:
	'load' operation ('PC2_load', desDecrypt.c:218) on array 'PC2' [71]  (2.77 ns)
	'sub' operation ('sub_ln218', desDecrypt.c:218) [72]  (1.6 ns)
	'lshr' operation ('lshr_ln218', desDecrypt.c:218) [74]  (3.47 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A

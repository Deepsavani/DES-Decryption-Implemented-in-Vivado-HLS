// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Loop_loop3_proc.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Loop_loop3_proc::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Loop_loop3_proc::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> Loop_loop3_proc::ap_ST_fsm_state1 = "1";
const sc_lv<5> Loop_loop3_proc::ap_ST_fsm_state2 = "10";
const sc_lv<5> Loop_loop3_proc::ap_ST_fsm_state3 = "100";
const sc_lv<5> Loop_loop3_proc::ap_ST_fsm_state4 = "1000";
const sc_lv<5> Loop_loop3_proc::ap_ST_fsm_state5 = "10000";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_1 = "1";
const sc_lv<1> Loop_loop3_proc::ap_const_lv1_0 = "0";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_2 = "10";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_3 = "11";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_4 = "100";
const sc_lv<5> Loop_loop3_proc::ap_const_lv5_0 = "00000";
const sc_lv<1> Loop_loop3_proc::ap_const_lv1_1 = "1";
const sc_lv<64> Loop_loop3_proc::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<6> Loop_loop3_proc::ap_const_lv6_0 = "000000";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_1C = "11100";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_37 = "110111";
const sc_lv<5> Loop_loop3_proc::ap_const_lv5_10 = "10000";
const sc_lv<5> Loop_loop3_proc::ap_const_lv5_1 = "1";
const sc_lv<5> Loop_loop3_proc::ap_const_lv5_F = "1111";
const sc_lv<5> Loop_loop3_proc::ap_const_lv5_8 = "1000";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_1A = "11010";
const sc_lv<32> Loop_loop3_proc::ap_const_lv32_1B = "11011";
const sc_lv<6> Loop_loop3_proc::ap_const_lv6_30 = "110000";
const sc_lv<6> Loop_loop3_proc::ap_const_lv6_1 = "1";
const sc_lv<6> Loop_loop3_proc::ap_const_lv6_38 = "111000";
const bool Loop_loop3_proc::ap_const_boolean_1 = true;

Loop_loop3_proc::Loop_loop3_proc(sc_module_name name) : sc_module(name), mVcdFile(0) {
    PC2_U = new Loop_loop3_proc_PC2("PC2_U");
    PC2_U->clk(ap_clk);
    PC2_U->reset(ap_rst);
    PC2_U->address0(PC2_address0);
    PC2_U->ce0(PC2_ce0);
    PC2_U->q0(PC2_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_C_1_fu_251_p3);
    sensitive << ( trunc_ln203_fu_233_p1 );
    sensitive << ( tmp_6_fu_241_p4 );

    SC_METHOD(thread_C_2_fu_299_p3);
    sensitive << ( trunc_ln197_fu_295_p1 );
    sensitive << ( tmp_fu_287_p3 );

    SC_METHOD(thread_D_1_fu_269_p3);
    sensitive << ( trunc_ln204_fu_237_p1 );
    sensitive << ( tmp_7_fu_259_p4 );

    SC_METHOD(thread_D_2_fu_319_p3);
    sensitive << ( trunc_ln198_fu_315_p1 );
    sensitive << ( tmp_1_fu_307_p3 );

    SC_METHOD(thread_D_3_fu_165_p1);
    sensitive << ( p_read1 );

    SC_METHOD(thread_PC2_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln218_fu_362_p1 );

    SC_METHOD(thread_PC2_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln192_fu_179_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln192_fu_179_p2 );

    SC_METHOD(thread_empty_67_fu_191_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln192_fu_179_p2 );
    sensitive << ( i_2_i_reg_115 );

    SC_METHOD(thread_empty_68_fu_197_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln192_fu_179_p2 );
    sensitive << ( i_2_i_reg_115 );

    SC_METHOD(thread_empty_69_fu_203_p2);
    sensitive << ( empty_68_fu_197_p2 );
    sensitive << ( empty_67_fu_191_p2 );

    SC_METHOD(thread_empty_70_fu_209_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln192_fu_179_p2 );
    sensitive << ( i_2_i_reg_115 );

    SC_METHOD(thread_empty_71_fu_215_p2);
    sensitive << ( empty_70_fu_209_p2 );
    sensitive << ( empty_69_fu_203_p2 );

    SC_METHOD(thread_empty_72_fu_221_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln192_fu_179_p2 );
    sensitive << ( i_2_i_reg_115 );

    SC_METHOD(thread_empty_73_fu_227_p2);
    sensitive << ( empty_72_fu_221_p2 );
    sensitive << ( empty_71_fu_215_p2 );

    SC_METHOD(thread_i_fu_185_p2);
    sensitive << ( i_2_i_reg_115 );

    SC_METHOD(thread_icmp_ln192_fu_179_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_2_i_reg_115 );

    SC_METHOD(thread_icmp_ln216_fu_350_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( j_0_i_reg_138 );

    SC_METHOD(thread_j_fu_356_p2);
    sensitive << ( j_0_i_reg_138 );

    SC_METHOD(thread_lshr_ln218_fu_381_p2);
    sensitive << ( tmp_4_reg_429 );
    sensitive << ( zext_ln218_1_fu_377_p1 );

    SC_METHOD(thread_or_ln_fu_390_p3);
    sensitive << ( trunc_ln218_1_reg_447 );
    sensitive << ( trunc_ln218_fu_386_p1 );

    SC_METHOD(thread_sub_key_address0);
    sensitive << ( sub_key_addr_reg_424 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sub_key_ce0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sub_key_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sub_key_load_reg_126 );

    SC_METHOD(thread_sub_key_we0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_sub_ln218_fu_371_p2);
    sensitive << ( PC2_q0 );

    SC_METHOD(thread_tmp_1_fu_307_p3);
    sensitive << ( D_fu_74 );

    SC_METHOD(thread_tmp_4_fu_342_p3);
    sensitive << ( C_3_fu_70 );
    sensitive << ( D_fu_74 );

    SC_METHOD(thread_tmp_6_fu_241_p4);
    sensitive << ( C_3_fu_70 );

    SC_METHOD(thread_tmp_7_fu_259_p4);
    sensitive << ( D_fu_74 );

    SC_METHOD(thread_tmp_fu_287_p3);
    sensitive << ( C_3_fu_70 );

    SC_METHOD(thread_trunc_ln197_fu_295_p1);
    sensitive << ( C_3_fu_70 );

    SC_METHOD(thread_trunc_ln198_fu_315_p1);
    sensitive << ( D_fu_74 );

    SC_METHOD(thread_trunc_ln203_fu_233_p1);
    sensitive << ( C_3_fu_70 );

    SC_METHOD(thread_trunc_ln204_fu_237_p1);
    sensitive << ( D_fu_74 );

    SC_METHOD(thread_trunc_ln218_1_fu_367_p1);
    sensitive << ( sub_key_load_reg_126 );

    SC_METHOD(thread_trunc_ln218_fu_386_p1);
    sensitive << ( lshr_ln218_fu_381_p2 );

    SC_METHOD(thread_zext_ln214_fu_337_p1);
    sensitive << ( i_2_i_reg_115 );

    SC_METHOD(thread_zext_ln218_1_fu_377_p1);
    sensitive << ( sub_ln218_fu_371_p2 );

    SC_METHOD(thread_zext_ln218_fu_362_p1);
    sensitive << ( j_0_i_reg_138 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln192_fu_179_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln216_fu_350_p2 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Loop_loop3_proc_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, p_read, "(port)p_read");
    sc_trace(mVcdFile, p_read1, "(port)p_read1");
    sc_trace(mVcdFile, sub_key_address0, "(port)sub_key_address0");
    sc_trace(mVcdFile, sub_key_ce0, "(port)sub_key_ce0");
    sc_trace(mVcdFile, sub_key_we0, "(port)sub_key_we0");
    sc_trace(mVcdFile, sub_key_d0, "(port)sub_key_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, PC2_address0, "PC2_address0");
    sc_trace(mVcdFile, PC2_ce0, "PC2_ce0");
    sc_trace(mVcdFile, PC2_q0, "PC2_q0");
    sc_trace(mVcdFile, i_fu_185_p2, "i_fu_185_p2");
    sc_trace(mVcdFile, i_reg_416, "i_reg_416");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, sub_key_addr_reg_424, "sub_key_addr_reg_424");
    sc_trace(mVcdFile, icmp_ln192_fu_179_p2, "icmp_ln192_fu_179_p2");
    sc_trace(mVcdFile, tmp_4_fu_342_p3, "tmp_4_fu_342_p3");
    sc_trace(mVcdFile, tmp_4_reg_429, "tmp_4_reg_429");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, j_fu_356_p2, "j_fu_356_p2");
    sc_trace(mVcdFile, j_reg_437, "j_reg_437");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln216_fu_350_p2, "icmp_ln216_fu_350_p2");
    sc_trace(mVcdFile, trunc_ln218_1_fu_367_p1, "trunc_ln218_1_fu_367_p1");
    sc_trace(mVcdFile, trunc_ln218_1_reg_447, "trunc_ln218_1_reg_447");
    sc_trace(mVcdFile, or_ln_fu_390_p3, "or_ln_fu_390_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, i_2_i_reg_115, "i_2_i_reg_115");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, sub_key_load_reg_126, "sub_key_load_reg_126");
    sc_trace(mVcdFile, j_0_i_reg_138, "j_0_i_reg_138");
    sc_trace(mVcdFile, zext_ln214_fu_337_p1, "zext_ln214_fu_337_p1");
    sc_trace(mVcdFile, zext_ln218_fu_362_p1, "zext_ln218_fu_362_p1");
    sc_trace(mVcdFile, C_3_fu_70, "C_3_fu_70");
    sc_trace(mVcdFile, C_1_fu_251_p3, "C_1_fu_251_p3");
    sc_trace(mVcdFile, empty_73_fu_227_p2, "empty_73_fu_227_p2");
    sc_trace(mVcdFile, C_2_fu_299_p3, "C_2_fu_299_p3");
    sc_trace(mVcdFile, D_fu_74, "D_fu_74");
    sc_trace(mVcdFile, D_3_fu_165_p1, "D_3_fu_165_p1");
    sc_trace(mVcdFile, D_1_fu_269_p3, "D_1_fu_269_p3");
    sc_trace(mVcdFile, D_2_fu_319_p3, "D_2_fu_319_p3");
    sc_trace(mVcdFile, empty_68_fu_197_p2, "empty_68_fu_197_p2");
    sc_trace(mVcdFile, empty_67_fu_191_p2, "empty_67_fu_191_p2");
    sc_trace(mVcdFile, empty_70_fu_209_p2, "empty_70_fu_209_p2");
    sc_trace(mVcdFile, empty_69_fu_203_p2, "empty_69_fu_203_p2");
    sc_trace(mVcdFile, empty_72_fu_221_p2, "empty_72_fu_221_p2");
    sc_trace(mVcdFile, empty_71_fu_215_p2, "empty_71_fu_215_p2");
    sc_trace(mVcdFile, trunc_ln203_fu_233_p1, "trunc_ln203_fu_233_p1");
    sc_trace(mVcdFile, tmp_6_fu_241_p4, "tmp_6_fu_241_p4");
    sc_trace(mVcdFile, trunc_ln204_fu_237_p1, "trunc_ln204_fu_237_p1");
    sc_trace(mVcdFile, tmp_7_fu_259_p4, "tmp_7_fu_259_p4");
    sc_trace(mVcdFile, trunc_ln197_fu_295_p1, "trunc_ln197_fu_295_p1");
    sc_trace(mVcdFile, tmp_fu_287_p3, "tmp_fu_287_p3");
    sc_trace(mVcdFile, trunc_ln198_fu_315_p1, "trunc_ln198_fu_315_p1");
    sc_trace(mVcdFile, tmp_1_fu_307_p3, "tmp_1_fu_307_p3");
    sc_trace(mVcdFile, sub_ln218_fu_371_p2, "sub_ln218_fu_371_p2");
    sc_trace(mVcdFile, zext_ln218_1_fu_377_p1, "zext_ln218_1_fu_377_p1");
    sc_trace(mVcdFile, lshr_ln218_fu_381_p2, "lshr_ln218_fu_381_p2");
    sc_trace(mVcdFile, trunc_ln218_fu_386_p1, "trunc_ln218_fu_386_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

Loop_loop3_proc::~Loop_loop3_proc() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete PC2_U;
}

void Loop_loop3_proc::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln192_fu_179_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, empty_73_fu_227_p2.read()))) {
        C_3_fu_70 = C_2_fu_299_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln192_fu_179_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, empty_73_fu_227_p2.read()))) {
        C_3_fu_70 = C_1_fu_251_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        C_3_fu_70 = p_read.read().range(55, 28);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln192_fu_179_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, empty_73_fu_227_p2.read()))) {
        D_fu_74 = D_2_fu_319_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln192_fu_179_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, empty_73_fu_227_p2.read()))) {
        D_fu_74 = D_1_fu_269_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        D_fu_74 = D_3_fu_165_p1.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(icmp_ln192_fu_179_p2.read(), ap_const_lv1_1))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln216_fu_350_p2.read(), ap_const_lv1_1))) {
        i_2_i_reg_115 = i_reg_416.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        i_2_i_reg_115 = ap_const_lv5_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        j_0_i_reg_138 = j_reg_437.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_0_i_reg_138 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        sub_key_load_reg_126 = or_ln_fu_390_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sub_key_load_reg_126 = ap_const_lv64_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_416 = i_fu_185_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_reg_437 = j_fu_356_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln192_fu_179_p2.read(), ap_const_lv1_0))) {
        sub_key_addr_reg_424 =  (sc_lv<4>) (zext_ln214_fu_337_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        tmp_4_reg_429 = tmp_4_fu_342_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln216_fu_350_p2.read()))) {
        trunc_ln218_1_reg_447 = trunc_ln218_1_fu_367_p1.read();
    }
}

void Loop_loop3_proc::thread_C_1_fu_251_p3() {
    C_1_fu_251_p3 = esl_concat<26,2>(trunc_ln203_fu_233_p1.read(), tmp_6_fu_241_p4.read());
}

void Loop_loop3_proc::thread_C_2_fu_299_p3() {
    C_2_fu_299_p3 = esl_concat<27,1>(trunc_ln197_fu_295_p1.read(), tmp_fu_287_p3.read());
}

void Loop_loop3_proc::thread_D_1_fu_269_p3() {
    D_1_fu_269_p3 = esl_concat<26,2>(trunc_ln204_fu_237_p1.read(), tmp_7_fu_259_p4.read());
}

void Loop_loop3_proc::thread_D_2_fu_319_p3() {
    D_2_fu_319_p3 = esl_concat<27,1>(trunc_ln198_fu_315_p1.read(), tmp_1_fu_307_p3.read());
}

void Loop_loop3_proc::thread_D_3_fu_165_p1() {
    D_3_fu_165_p1 = p_read1.read().range(28-1, 0);
}

void Loop_loop3_proc::thread_PC2_address0() {
    PC2_address0 =  (sc_lv<6>) (zext_ln218_fu_362_p1.read());
}

void Loop_loop3_proc::thread_PC2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        PC2_ce0 = ap_const_logic_1;
    } else {
        PC2_ce0 = ap_const_logic_0;
    }
}

void Loop_loop3_proc::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Loop_loop3_proc::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Loop_loop3_proc::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void Loop_loop3_proc::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void Loop_loop3_proc::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void Loop_loop3_proc::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void Loop_loop3_proc::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln192_fu_179_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void Loop_loop3_proc::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Loop_loop3_proc::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln192_fu_179_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Loop_loop3_proc::thread_empty_67_fu_191_p2() {
    empty_67_fu_191_p2 = (!i_2_i_reg_115.read().is_01() || !ap_const_lv5_F.is_01())? sc_lv<1>(): sc_lv<1>(i_2_i_reg_115.read() == ap_const_lv5_F);
}

void Loop_loop3_proc::thread_empty_68_fu_197_p2() {
    empty_68_fu_197_p2 = (!i_2_i_reg_115.read().is_01() || !ap_const_lv5_8.is_01())? sc_lv<1>(): sc_lv<1>(i_2_i_reg_115.read() == ap_const_lv5_8);
}

void Loop_loop3_proc::thread_empty_69_fu_203_p2() {
    empty_69_fu_203_p2 = (empty_68_fu_197_p2.read() | empty_67_fu_191_p2.read());
}

void Loop_loop3_proc::thread_empty_70_fu_209_p2() {
    empty_70_fu_209_p2 = (!i_2_i_reg_115.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<1>(): sc_lv<1>(i_2_i_reg_115.read() == ap_const_lv5_1);
}

void Loop_loop3_proc::thread_empty_71_fu_215_p2() {
    empty_71_fu_215_p2 = (empty_70_fu_209_p2.read() | empty_69_fu_203_p2.read());
}

void Loop_loop3_proc::thread_empty_72_fu_221_p2() {
    empty_72_fu_221_p2 = (!i_2_i_reg_115.read().is_01() || !ap_const_lv5_0.is_01())? sc_lv<1>(): sc_lv<1>(i_2_i_reg_115.read() == ap_const_lv5_0);
}

void Loop_loop3_proc::thread_empty_73_fu_227_p2() {
    empty_73_fu_227_p2 = (empty_72_fu_221_p2.read() | empty_71_fu_215_p2.read());
}

void Loop_loop3_proc::thread_i_fu_185_p2() {
    i_fu_185_p2 = (!i_2_i_reg_115.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_2_i_reg_115.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void Loop_loop3_proc::thread_icmp_ln192_fu_179_p2() {
    icmp_ln192_fu_179_p2 = (!i_2_i_reg_115.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_2_i_reg_115.read() == ap_const_lv5_10);
}

void Loop_loop3_proc::thread_icmp_ln216_fu_350_p2() {
    icmp_ln216_fu_350_p2 = (!j_0_i_reg_138.read().is_01() || !ap_const_lv6_30.is_01())? sc_lv<1>(): sc_lv<1>(j_0_i_reg_138.read() == ap_const_lv6_30);
}

void Loop_loop3_proc::thread_j_fu_356_p2() {
    j_fu_356_p2 = (!j_0_i_reg_138.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(j_0_i_reg_138.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void Loop_loop3_proc::thread_lshr_ln218_fu_381_p2() {
    lshr_ln218_fu_381_p2 = (!zext_ln218_1_fu_377_p1.read().is_01())? sc_lv<56>(): tmp_4_reg_429.read() >> (unsigned short)zext_ln218_1_fu_377_p1.read().to_uint();
}

void Loop_loop3_proc::thread_or_ln_fu_390_p3() {
    or_ln_fu_390_p3 = esl_concat<63,1>(trunc_ln218_1_reg_447.read(), trunc_ln218_fu_386_p1.read());
}

void Loop_loop3_proc::thread_sub_key_address0() {
    sub_key_address0 = sub_key_addr_reg_424.read();
}

void Loop_loop3_proc::thread_sub_key_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sub_key_ce0 = ap_const_logic_1;
    } else {
        sub_key_ce0 = ap_const_logic_0;
    }
}

void Loop_loop3_proc::thread_sub_key_d0() {
    sub_key_d0 = sub_key_load_reg_126.read();
}

void Loop_loop3_proc::thread_sub_key_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        sub_key_we0 = ap_const_logic_1;
    } else {
        sub_key_we0 = ap_const_logic_0;
    }
}

void Loop_loop3_proc::thread_sub_ln218_fu_371_p2() {
    sub_ln218_fu_371_p2 = (!ap_const_lv6_38.is_01() || !PC2_q0.read().is_01())? sc_lv<6>(): (sc_bigint<6>(ap_const_lv6_38) - sc_biguint<6>(PC2_q0.read()));
}

void Loop_loop3_proc::thread_tmp_1_fu_307_p3() {
    tmp_1_fu_307_p3 = D_fu_74.read().range(27, 27);
}

void Loop_loop3_proc::thread_tmp_4_fu_342_p3() {
    tmp_4_fu_342_p3 = esl_concat<28,28>(C_3_fu_70.read(), D_fu_74.read());
}

void Loop_loop3_proc::thread_tmp_6_fu_241_p4() {
    tmp_6_fu_241_p4 = C_3_fu_70.read().range(27, 26);
}

void Loop_loop3_proc::thread_tmp_7_fu_259_p4() {
    tmp_7_fu_259_p4 = D_fu_74.read().range(27, 26);
}

void Loop_loop3_proc::thread_tmp_fu_287_p3() {
    tmp_fu_287_p3 = C_3_fu_70.read().range(27, 27);
}

void Loop_loop3_proc::thread_trunc_ln197_fu_295_p1() {
    trunc_ln197_fu_295_p1 = C_3_fu_70.read().range(27-1, 0);
}

void Loop_loop3_proc::thread_trunc_ln198_fu_315_p1() {
    trunc_ln198_fu_315_p1 = D_fu_74.read().range(27-1, 0);
}

void Loop_loop3_proc::thread_trunc_ln203_fu_233_p1() {
    trunc_ln203_fu_233_p1 = C_3_fu_70.read().range(26-1, 0);
}

void Loop_loop3_proc::thread_trunc_ln204_fu_237_p1() {
    trunc_ln204_fu_237_p1 = D_fu_74.read().range(26-1, 0);
}

void Loop_loop3_proc::thread_trunc_ln218_1_fu_367_p1() {
    trunc_ln218_1_fu_367_p1 = sub_key_load_reg_126.read().range(63-1, 0);
}

void Loop_loop3_proc::thread_trunc_ln218_fu_386_p1() {
    trunc_ln218_fu_386_p1 = lshr_ln218_fu_381_p2.read().range(1-1, 0);
}

void Loop_loop3_proc::thread_zext_ln214_fu_337_p1() {
    zext_ln214_fu_337_p1 = esl_zext<64,5>(i_2_i_reg_115.read());
}

void Loop_loop3_proc::thread_zext_ln218_1_fu_377_p1() {
    zext_ln218_1_fu_377_p1 = esl_zext<56,6>(sub_ln218_fu_371_p2.read());
}

void Loop_loop3_proc::thread_zext_ln218_fu_362_p1() {
    zext_ln218_fu_362_p1 = esl_zext<64,6>(j_0_i_reg_138.read());
}

void Loop_loop3_proc::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln192_fu_179_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln216_fu_350_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm = "XXXXX";
            break;
    }
}

}


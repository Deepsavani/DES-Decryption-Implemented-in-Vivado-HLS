-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity des_dec is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    input_r : IN STD_LOGIC_VECTOR (63 downto 0);
    key : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_start : IN STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC );
end;


architecture behav of des_dec is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "des_dec,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a35tl-cpg236-2L,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=8.689625,HLS_SYN_LAT=4984,HLS_SYN_TPT=3154,HLS_SYN_MEM=3,HLS_SYN_DSP=0,HLS_SYN_FF=1588,HLS_SYN_LUT=3456,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal sub_key_i_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_key_t_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal des_dec_entry7_U0_ap_start : STD_LOGIC;
    signal des_dec_entry7_U0_start_full_n : STD_LOGIC;
    signal des_dec_entry7_U0_ap_done : STD_LOGIC;
    signal des_dec_entry7_U0_ap_continue : STD_LOGIC;
    signal des_dec_entry7_U0_ap_idle : STD_LOGIC;
    signal des_dec_entry7_U0_ap_ready : STD_LOGIC;
    signal des_dec_entry7_U0_start_out : STD_LOGIC;
    signal des_dec_entry7_U0_start_write : STD_LOGIC;
    signal des_dec_entry7_U0_input_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal des_dec_entry7_U0_input_out_write : STD_LOGIC;
    signal des_dec_entry7_U0_key_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal des_dec_entry7_U0_key_out_write : STD_LOGIC;
    signal Loop_unroll1_proc_U0_ap_start : STD_LOGIC;
    signal Loop_unroll1_proc_U0_ap_done : STD_LOGIC;
    signal Loop_unroll1_proc_U0_ap_continue : STD_LOGIC;
    signal Loop_unroll1_proc_U0_ap_idle : STD_LOGIC;
    signal Loop_unroll1_proc_U0_ap_ready : STD_LOGIC;
    signal Loop_unroll1_proc_U0_input_r_read : STD_LOGIC;
    signal Loop_unroll1_proc_U0_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_channel_done_init_perm_res_0_loc_s : STD_LOGIC;
    signal init_perm_res_0_loc_s_full_n : STD_LOGIC;
    signal Block_des_dec_exit2_U0_ap_start : STD_LOGIC;
    signal Block_des_dec_exit2_U0_ap_done : STD_LOGIC;
    signal Block_des_dec_exit2_U0_ap_continue : STD_LOGIC;
    signal Block_des_dec_exit2_U0_ap_idle : STD_LOGIC;
    signal Block_des_dec_exit2_U0_ap_ready : STD_LOGIC;
    signal Block_des_dec_exit2_U0_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Block_des_dec_exit2_U0_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_channel_done_R_loc_channel : STD_LOGIC;
    signal R_loc_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_R_loc_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_R_loc_channel : STD_LOGIC;
    signal ap_channel_done_L_loc_channel : STD_LOGIC;
    signal L_loc_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_L_loc_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_L_loc_channel : STD_LOGIC;
    signal Loop_unroll2_proc_U0_ap_start : STD_LOGIC;
    signal Loop_unroll2_proc_U0_ap_done : STD_LOGIC;
    signal Loop_unroll2_proc_U0_ap_continue : STD_LOGIC;
    signal Loop_unroll2_proc_U0_ap_idle : STD_LOGIC;
    signal Loop_unroll2_proc_U0_ap_ready : STD_LOGIC;
    signal Loop_unroll2_proc_U0_key_read : STD_LOGIC;
    signal Loop_unroll2_proc_U0_ap_return_0 : STD_LOGIC_VECTOR (63 downto 0);
    signal Loop_unroll2_proc_U0_ap_return_1 : STD_LOGIC_VECTOR (59 downto 0);
    signal ap_channel_done_permuted_choice_1_0_1 : STD_LOGIC;
    signal permuted_choice_1_0_1_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_permuted_choice_1_0_1 : STD_LOGIC := '0';
    signal ap_sync_channel_write_permuted_choice_1_0_1 : STD_LOGIC;
    signal ap_channel_done_permuted_choice_1_0_s : STD_LOGIC;
    signal permuted_choice_1_0_s_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_permuted_choice_1_0_s : STD_LOGIC := '0';
    signal ap_sync_channel_write_permuted_choice_1_0_s : STD_LOGIC;
    signal Loop_loop3_proc_U0_ap_start : STD_LOGIC;
    signal Loop_loop3_proc_U0_ap_done : STD_LOGIC;
    signal Loop_loop3_proc_U0_ap_continue : STD_LOGIC;
    signal Loop_loop3_proc_U0_ap_idle : STD_LOGIC;
    signal Loop_loop3_proc_U0_ap_ready : STD_LOGIC;
    signal Loop_loop3_proc_U0_sub_key_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_loop3_proc_U0_sub_key_ce0 : STD_LOGIC;
    signal Loop_loop3_proc_U0_sub_key_we0 : STD_LOGIC;
    signal Loop_loop3_proc_U0_sub_key_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_channel_done_sub_key : STD_LOGIC;
    signal Loop_loop3_proc_U0_sub_key_full_n : STD_LOGIC;
    signal Loop_Pipeline_loop4_U0_ap_start : STD_LOGIC;
    signal Loop_Pipeline_loop4_U0_ap_done : STD_LOGIC;
    signal Loop_Pipeline_loop4_U0_ap_continue : STD_LOGIC;
    signal Loop_Pipeline_loop4_U0_ap_idle : STD_LOGIC;
    signal Loop_Pipeline_loop4_U0_ap_ready : STD_LOGIC;
    signal Loop_Pipeline_loop4_U0_sub_key_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal Loop_Pipeline_loop4_U0_sub_key_ce0 : STD_LOGIC;
    signal Loop_Pipeline_loop4_U0_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Loop_Pipeline_loop4_U0_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_channel_done_L_0_loc_channel : STD_LOGIC;
    signal L_0_loc_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_L_0_loc_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_L_0_loc_channel : STD_LOGIC;
    signal ap_channel_done_temp_loc_channel : STD_LOGIC;
    signal temp_loc_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_temp_loc_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_temp_loc_channel : STD_LOGIC;
    signal Loop_loop5_proc_U0_ap_start : STD_LOGIC;
    signal Loop_loop5_proc_U0_ap_done : STD_LOGIC;
    signal Loop_loop5_proc_U0_ap_continue : STD_LOGIC;
    signal Loop_loop5_proc_U0_ap_idle : STD_LOGIC;
    signal Loop_loop5_proc_U0_ap_ready : STD_LOGIC;
    signal Loop_loop5_proc_U0_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_channel_done_inv_init_perm_res_0_s : STD_LOGIC;
    signal inv_init_perm_res_0_s_full_n : STD_LOGIC;
    signal p_desDecrypt_c_line2_U0_ap_start : STD_LOGIC;
    signal p_desDecrypt_c_line2_U0_ap_done : STD_LOGIC;
    signal p_desDecrypt_c_line2_U0_ap_continue : STD_LOGIC;
    signal p_desDecrypt_c_line2_U0_ap_idle : STD_LOGIC;
    signal p_desDecrypt_c_line2_U0_ap_ready : STD_LOGIC;
    signal p_desDecrypt_c_line2_U0_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_p_desDecrypt_c_line2_fu_185_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sync_continue : STD_LOGIC;
    signal sub_key_i_full_n : STD_LOGIC;
    signal sub_key_t_empty_n : STD_LOGIC;
    signal input_c_full_n : STD_LOGIC;
    signal input_c_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal input_c_empty_n : STD_LOGIC;
    signal key_c_full_n : STD_LOGIC;
    signal key_c_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal key_c_empty_n : STD_LOGIC;
    signal init_perm_res_0_loc_s_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal init_perm_res_0_loc_s_empty_n : STD_LOGIC;
    signal L_loc_channel_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal L_loc_channel_empty_n : STD_LOGIC;
    signal R_loc_channel_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal R_loc_channel_empty_n : STD_LOGIC;
    signal permuted_choice_1_0_s_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal permuted_choice_1_0_s_empty_n : STD_LOGIC;
    signal permuted_choice_1_0_1_dout : STD_LOGIC_VECTOR (59 downto 0);
    signal permuted_choice_1_0_1_empty_n : STD_LOGIC;
    signal temp_loc_channel_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_loc_channel_empty_n : STD_LOGIC;
    signal L_0_loc_channel_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal L_0_loc_channel_empty_n : STD_LOGIC;
    signal inv_init_perm_res_0_s_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal inv_init_perm_res_0_s_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal start_for_Loop_unroll1_proc_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Loop_unroll1_proc_U0_full_n : STD_LOGIC;
    signal start_for_Loop_unroll1_proc_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Loop_unroll1_proc_U0_empty_n : STD_LOGIC;
    signal start_for_Loop_unroll2_proc_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Loop_unroll2_proc_U0_full_n : STD_LOGIC;
    signal start_for_Loop_unroll2_proc_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Loop_unroll2_proc_U0_empty_n : STD_LOGIC;
    signal Loop_unroll1_proc_U0_start_full_n : STD_LOGIC;
    signal Loop_unroll1_proc_U0_start_write : STD_LOGIC;
    signal Block_des_dec_exit2_U0_start_full_n : STD_LOGIC;
    signal Block_des_dec_exit2_U0_start_write : STD_LOGIC;
    signal Loop_unroll2_proc_U0_start_full_n : STD_LOGIC;
    signal Loop_unroll2_proc_U0_start_write : STD_LOGIC;
    signal Loop_loop3_proc_U0_start_full_n : STD_LOGIC;
    signal Loop_loop3_proc_U0_start_write : STD_LOGIC;
    signal Loop_Pipeline_loop4_U0_start_full_n : STD_LOGIC;
    signal Loop_Pipeline_loop4_U0_start_write : STD_LOGIC;
    signal Loop_loop5_proc_U0_start_full_n : STD_LOGIC;
    signal Loop_loop5_proc_U0_start_write : STD_LOGIC;
    signal p_desDecrypt_c_line2_U0_start_full_n : STD_LOGIC;
    signal p_desDecrypt_c_line2_U0_start_write : STD_LOGIC;

    component des_dec_entry7 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        input_r : IN STD_LOGIC_VECTOR (63 downto 0);
        key : IN STD_LOGIC_VECTOR (63 downto 0);
        input_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        input_out_full_n : IN STD_LOGIC;
        input_out_write : OUT STD_LOGIC;
        key_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        key_out_full_n : IN STD_LOGIC;
        key_out_write : OUT STD_LOGIC );
    end component;


    component Loop_unroll1_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_r_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        input_r_empty_n : IN STD_LOGIC;
        input_r_read : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component Block_des_dec_exit2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Loop_unroll2_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        key_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        key_empty_n : IN STD_LOGIC;
        key_read : OUT STD_LOGIC;
        ap_return_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (59 downto 0) );
    end component;


    component Loop_loop3_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (59 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (63 downto 0);
        sub_key_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        sub_key_ce0 : OUT STD_LOGIC;
        sub_key_we0 : OUT STD_LOGIC;
        sub_key_d0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component Loop_Pipeline_loop4_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
        sub_key_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        sub_key_ce0 : OUT STD_LOGIC;
        sub_key_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Loop_loop5_proc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (31 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component p_desDecrypt_c_line2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component des_dec_sub_key IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component fifo_w64_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w32_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w60_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (59 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (59 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Loop_ung8j IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_Loop_unhbi IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    sub_key_U : component des_dec_sub_key
    generic map (
        DataWidth => 64,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => Loop_loop3_proc_U0_sub_key_address0,
        i_ce0 => Loop_loop3_proc_U0_sub_key_ce0,
        i_we0 => Loop_loop3_proc_U0_sub_key_we0,
        i_d0 => Loop_loop3_proc_U0_sub_key_d0,
        i_q0 => sub_key_i_q0,
        t_address0 => Loop_Pipeline_loop4_U0_sub_key_address0,
        t_ce0 => Loop_Pipeline_loop4_U0_sub_key_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv64_0,
        t_q0 => sub_key_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => sub_key_i_full_n,
        i_write => Loop_loop3_proc_U0_ap_done,
        t_empty_n => sub_key_t_empty_n,
        t_read => Loop_Pipeline_loop4_U0_ap_ready);

    des_dec_entry7_U0 : component des_dec_entry7
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => des_dec_entry7_U0_ap_start,
        start_full_n => des_dec_entry7_U0_start_full_n,
        ap_done => des_dec_entry7_U0_ap_done,
        ap_continue => des_dec_entry7_U0_ap_continue,
        ap_idle => des_dec_entry7_U0_ap_idle,
        ap_ready => des_dec_entry7_U0_ap_ready,
        start_out => des_dec_entry7_U0_start_out,
        start_write => des_dec_entry7_U0_start_write,
        input_r => input_r,
        key => key,
        input_out_din => des_dec_entry7_U0_input_out_din,
        input_out_full_n => input_c_full_n,
        input_out_write => des_dec_entry7_U0_input_out_write,
        key_out_din => des_dec_entry7_U0_key_out_din,
        key_out_full_n => key_c_full_n,
        key_out_write => des_dec_entry7_U0_key_out_write);

    Loop_unroll1_proc_U0 : component Loop_unroll1_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => Loop_unroll1_proc_U0_ap_start,
        ap_done => Loop_unroll1_proc_U0_ap_done,
        ap_continue => Loop_unroll1_proc_U0_ap_continue,
        ap_idle => Loop_unroll1_proc_U0_ap_idle,
        ap_ready => Loop_unroll1_proc_U0_ap_ready,
        input_r_dout => input_c_dout,
        input_r_empty_n => input_c_empty_n,
        input_r_read => Loop_unroll1_proc_U0_input_r_read,
        ap_return => Loop_unroll1_proc_U0_ap_return);

    Block_des_dec_exit2_U0 : component Block_des_dec_exit2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => Block_des_dec_exit2_U0_ap_start,
        ap_done => Block_des_dec_exit2_U0_ap_done,
        ap_continue => Block_des_dec_exit2_U0_ap_continue,
        ap_idle => Block_des_dec_exit2_U0_ap_idle,
        ap_ready => Block_des_dec_exit2_U0_ap_ready,
        p_read => init_perm_res_0_loc_s_dout,
        ap_return_0 => Block_des_dec_exit2_U0_ap_return_0,
        ap_return_1 => Block_des_dec_exit2_U0_ap_return_1);

    Loop_unroll2_proc_U0 : component Loop_unroll2_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => Loop_unroll2_proc_U0_ap_start,
        ap_done => Loop_unroll2_proc_U0_ap_done,
        ap_continue => Loop_unroll2_proc_U0_ap_continue,
        ap_idle => Loop_unroll2_proc_U0_ap_idle,
        ap_ready => Loop_unroll2_proc_U0_ap_ready,
        key_dout => key_c_dout,
        key_empty_n => key_c_empty_n,
        key_read => Loop_unroll2_proc_U0_key_read,
        ap_return_0 => Loop_unroll2_proc_U0_ap_return_0,
        ap_return_1 => Loop_unroll2_proc_U0_ap_return_1);

    Loop_loop3_proc_U0 : component Loop_loop3_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => Loop_loop3_proc_U0_ap_start,
        ap_done => Loop_loop3_proc_U0_ap_done,
        ap_continue => Loop_loop3_proc_U0_ap_continue,
        ap_idle => Loop_loop3_proc_U0_ap_idle,
        ap_ready => Loop_loop3_proc_U0_ap_ready,
        p_read => permuted_choice_1_0_1_dout,
        p_read1 => permuted_choice_1_0_s_dout,
        sub_key_address0 => Loop_loop3_proc_U0_sub_key_address0,
        sub_key_ce0 => Loop_loop3_proc_U0_sub_key_ce0,
        sub_key_we0 => Loop_loop3_proc_U0_sub_key_we0,
        sub_key_d0 => Loop_loop3_proc_U0_sub_key_d0);

    Loop_Pipeline_loop4_U0 : component Loop_Pipeline_loop4_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => Loop_Pipeline_loop4_U0_ap_start,
        ap_done => Loop_Pipeline_loop4_U0_ap_done,
        ap_continue => Loop_Pipeline_loop4_U0_ap_continue,
        ap_idle => Loop_Pipeline_loop4_U0_ap_idle,
        ap_ready => Loop_Pipeline_loop4_U0_ap_ready,
        p_read => R_loc_channel_dout,
        p_read1 => L_loc_channel_dout,
        sub_key_address0 => Loop_Pipeline_loop4_U0_sub_key_address0,
        sub_key_ce0 => Loop_Pipeline_loop4_U0_sub_key_ce0,
        sub_key_q0 => sub_key_t_q0,
        ap_return_0 => Loop_Pipeline_loop4_U0_ap_return_0,
        ap_return_1 => Loop_Pipeline_loop4_U0_ap_return_1);

    Loop_loop5_proc_U0 : component Loop_loop5_proc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => Loop_loop5_proc_U0_ap_start,
        ap_done => Loop_loop5_proc_U0_ap_done,
        ap_continue => Loop_loop5_proc_U0_ap_continue,
        ap_idle => Loop_loop5_proc_U0_ap_idle,
        ap_ready => Loop_loop5_proc_U0_ap_ready,
        p_read => temp_loc_channel_dout,
        p_read1 => L_0_loc_channel_dout,
        ap_return => Loop_loop5_proc_U0_ap_return);

    p_desDecrypt_c_line2_U0 : component p_desDecrypt_c_line2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => p_desDecrypt_c_line2_U0_ap_start,
        ap_done => p_desDecrypt_c_line2_U0_ap_done,
        ap_continue => p_desDecrypt_c_line2_U0_ap_continue,
        ap_idle => p_desDecrypt_c_line2_U0_ap_idle,
        ap_ready => p_desDecrypt_c_line2_U0_ap_ready,
        p_read => inv_init_perm_res_0_s_dout,
        ap_return => p_desDecrypt_c_line2_U0_ap_return);

    input_c_U : component fifo_w64_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => des_dec_entry7_U0_input_out_din,
        if_full_n => input_c_full_n,
        if_write => des_dec_entry7_U0_input_out_write,
        if_dout => input_c_dout,
        if_empty_n => input_c_empty_n,
        if_read => Loop_unroll1_proc_U0_input_r_read);

    key_c_U : component fifo_w64_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => des_dec_entry7_U0_key_out_din,
        if_full_n => key_c_full_n,
        if_write => des_dec_entry7_U0_key_out_write,
        if_dout => key_c_dout,
        if_empty_n => key_c_empty_n,
        if_read => Loop_unroll2_proc_U0_key_read);

    init_perm_res_0_loc_s_U : component fifo_w64_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Loop_unroll1_proc_U0_ap_return,
        if_full_n => init_perm_res_0_loc_s_full_n,
        if_write => Loop_unroll1_proc_U0_ap_done,
        if_dout => init_perm_res_0_loc_s_dout,
        if_empty_n => init_perm_res_0_loc_s_empty_n,
        if_read => Block_des_dec_exit2_U0_ap_ready);

    L_loc_channel_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_des_dec_exit2_U0_ap_return_0,
        if_full_n => L_loc_channel_full_n,
        if_write => ap_channel_done_L_loc_channel,
        if_dout => L_loc_channel_dout,
        if_empty_n => L_loc_channel_empty_n,
        if_read => Loop_Pipeline_loop4_U0_ap_ready);

    R_loc_channel_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Block_des_dec_exit2_U0_ap_return_1,
        if_full_n => R_loc_channel_full_n,
        if_write => ap_channel_done_R_loc_channel,
        if_dout => R_loc_channel_dout,
        if_empty_n => R_loc_channel_empty_n,
        if_read => Loop_Pipeline_loop4_U0_ap_ready);

    permuted_choice_1_0_s_U : component fifo_w64_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Loop_unroll2_proc_U0_ap_return_0,
        if_full_n => permuted_choice_1_0_s_full_n,
        if_write => ap_channel_done_permuted_choice_1_0_s,
        if_dout => permuted_choice_1_0_s_dout,
        if_empty_n => permuted_choice_1_0_s_empty_n,
        if_read => Loop_loop3_proc_U0_ap_ready);

    permuted_choice_1_0_1_U : component fifo_w60_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Loop_unroll2_proc_U0_ap_return_1,
        if_full_n => permuted_choice_1_0_1_full_n,
        if_write => ap_channel_done_permuted_choice_1_0_1,
        if_dout => permuted_choice_1_0_1_dout,
        if_empty_n => permuted_choice_1_0_1_empty_n,
        if_read => Loop_loop3_proc_U0_ap_ready);

    temp_loc_channel_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Loop_Pipeline_loop4_U0_ap_return_0,
        if_full_n => temp_loc_channel_full_n,
        if_write => ap_channel_done_temp_loc_channel,
        if_dout => temp_loc_channel_dout,
        if_empty_n => temp_loc_channel_empty_n,
        if_read => Loop_loop5_proc_U0_ap_ready);

    L_0_loc_channel_U : component fifo_w32_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Loop_Pipeline_loop4_U0_ap_return_1,
        if_full_n => L_0_loc_channel_full_n,
        if_write => ap_channel_done_L_0_loc_channel,
        if_dout => L_0_loc_channel_dout,
        if_empty_n => L_0_loc_channel_empty_n,
        if_read => Loop_loop5_proc_U0_ap_ready);

    inv_init_perm_res_0_s_U : component fifo_w64_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Loop_loop5_proc_U0_ap_return,
        if_full_n => inv_init_perm_res_0_s_full_n,
        if_write => Loop_loop5_proc_U0_ap_done,
        if_dout => inv_init_perm_res_0_s_dout,
        if_empty_n => inv_init_perm_res_0_s_empty_n,
        if_read => p_desDecrypt_c_line2_U0_ap_ready);

    start_for_Loop_ung8j_U : component start_for_Loop_ung8j
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Loop_unroll1_proc_U0_din,
        if_full_n => start_for_Loop_unroll1_proc_U0_full_n,
        if_write => des_dec_entry7_U0_start_write,
        if_dout => start_for_Loop_unroll1_proc_U0_dout,
        if_empty_n => start_for_Loop_unroll1_proc_U0_empty_n,
        if_read => Loop_unroll1_proc_U0_ap_ready);

    start_for_Loop_unhbi_U : component start_for_Loop_unhbi
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Loop_unroll2_proc_U0_din,
        if_full_n => start_for_Loop_unroll2_proc_U0_full_n,
        if_write => des_dec_entry7_U0_start_write,
        if_dout => start_for_Loop_unroll2_proc_U0_dout,
        if_empty_n => start_for_Loop_unroll2_proc_U0_empty_n,
        if_read => Loop_unroll2_proc_U0_ap_ready);





    ap_sync_reg_channel_write_L_0_loc_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_L_0_loc_channel <= ap_const_logic_0;
            else
                if (((Loop_Pipeline_loop4_U0_ap_done and Loop_Pipeline_loop4_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_L_0_loc_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_L_0_loc_channel <= ap_sync_channel_write_L_0_loc_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_L_loc_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_L_loc_channel <= ap_const_logic_0;
            else
                if (((Block_des_dec_exit2_U0_ap_done and Block_des_dec_exit2_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_L_loc_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_L_loc_channel <= ap_sync_channel_write_L_loc_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_R_loc_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_R_loc_channel <= ap_const_logic_0;
            else
                if (((Block_des_dec_exit2_U0_ap_done and Block_des_dec_exit2_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_R_loc_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_R_loc_channel <= ap_sync_channel_write_R_loc_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_permuted_choice_1_0_1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_permuted_choice_1_0_1 <= ap_const_logic_0;
            else
                if (((Loop_unroll2_proc_U0_ap_done and Loop_unroll2_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_permuted_choice_1_0_1 <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_permuted_choice_1_0_1 <= ap_sync_channel_write_permuted_choice_1_0_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_permuted_choice_1_0_s_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_permuted_choice_1_0_s <= ap_const_logic_0;
            else
                if (((Loop_unroll2_proc_U0_ap_done and Loop_unroll2_proc_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_permuted_choice_1_0_s <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_permuted_choice_1_0_s <= ap_sync_channel_write_permuted_choice_1_0_s;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_temp_loc_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_temp_loc_channel <= ap_const_logic_0;
            else
                if (((Loop_Pipeline_loop4_U0_ap_done and Loop_Pipeline_loop4_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_temp_loc_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_temp_loc_channel <= ap_sync_channel_write_temp_loc_channel;
                end if; 
            end if;
        end if;
    end process;

    Block_des_dec_exit2_U0_ap_continue <= (ap_sync_channel_write_R_loc_channel and ap_sync_channel_write_L_loc_channel);
    Block_des_dec_exit2_U0_ap_start <= init_perm_res_0_loc_s_empty_n;
    Block_des_dec_exit2_U0_start_full_n <= ap_const_logic_1;
    Block_des_dec_exit2_U0_start_write <= ap_const_logic_0;
    Loop_Pipeline_loop4_U0_ap_continue <= (ap_sync_channel_write_temp_loc_channel and ap_sync_channel_write_L_0_loc_channel);
    Loop_Pipeline_loop4_U0_ap_start <= (sub_key_t_empty_n and R_loc_channel_empty_n and L_loc_channel_empty_n);
    Loop_Pipeline_loop4_U0_start_full_n <= ap_const_logic_1;
    Loop_Pipeline_loop4_U0_start_write <= ap_const_logic_0;
    Loop_loop3_proc_U0_ap_continue <= sub_key_i_full_n;
    Loop_loop3_proc_U0_ap_start <= (permuted_choice_1_0_s_empty_n and permuted_choice_1_0_1_empty_n);
    Loop_loop3_proc_U0_start_full_n <= ap_const_logic_1;
    Loop_loop3_proc_U0_start_write <= ap_const_logic_0;
    Loop_loop3_proc_U0_sub_key_full_n <= sub_key_i_full_n;
    Loop_loop5_proc_U0_ap_continue <= inv_init_perm_res_0_s_full_n;
    Loop_loop5_proc_U0_ap_start <= (temp_loc_channel_empty_n and L_0_loc_channel_empty_n);
    Loop_loop5_proc_U0_start_full_n <= ap_const_logic_1;
    Loop_loop5_proc_U0_start_write <= ap_const_logic_0;
    Loop_unroll1_proc_U0_ap_continue <= init_perm_res_0_loc_s_full_n;
    Loop_unroll1_proc_U0_ap_start <= start_for_Loop_unroll1_proc_U0_empty_n;
    Loop_unroll1_proc_U0_start_full_n <= ap_const_logic_1;
    Loop_unroll1_proc_U0_start_write <= ap_const_logic_0;
    Loop_unroll2_proc_U0_ap_continue <= (ap_sync_channel_write_permuted_choice_1_0_s and ap_sync_channel_write_permuted_choice_1_0_1);
    Loop_unroll2_proc_U0_ap_start <= start_for_Loop_unroll2_proc_U0_empty_n;
    Loop_unroll2_proc_U0_start_full_n <= ap_const_logic_1;
    Loop_unroll2_proc_U0_start_write <= ap_const_logic_0;
    ap_channel_done_L_0_loc_channel <= ((ap_sync_reg_channel_write_L_0_loc_channel xor ap_const_logic_1) and Loop_Pipeline_loop4_U0_ap_done);
    ap_channel_done_L_loc_channel <= ((ap_sync_reg_channel_write_L_loc_channel xor ap_const_logic_1) and Block_des_dec_exit2_U0_ap_done);
    ap_channel_done_R_loc_channel <= ((ap_sync_reg_channel_write_R_loc_channel xor ap_const_logic_1) and Block_des_dec_exit2_U0_ap_done);
    ap_channel_done_init_perm_res_0_loc_s <= Loop_unroll1_proc_U0_ap_done;
    ap_channel_done_inv_init_perm_res_0_s <= Loop_loop5_proc_U0_ap_done;
    ap_channel_done_permuted_choice_1_0_1 <= ((ap_sync_reg_channel_write_permuted_choice_1_0_1 xor ap_const_logic_1) and Loop_unroll2_proc_U0_ap_done);
    ap_channel_done_permuted_choice_1_0_s <= ((ap_sync_reg_channel_write_permuted_choice_1_0_s xor ap_const_logic_1) and Loop_unroll2_proc_U0_ap_done);
    ap_channel_done_sub_key <= Loop_loop3_proc_U0_ap_done;
    ap_channel_done_temp_loc_channel <= ((ap_sync_reg_channel_write_temp_loc_channel xor ap_const_logic_1) and Loop_Pipeline_loop4_U0_ap_done);
    ap_done <= p_desDecrypt_c_line2_U0_ap_done;
    ap_idle <= (p_desDecrypt_c_line2_U0_ap_idle and (inv_init_perm_res_0_s_empty_n xor ap_const_logic_1) and (ap_const_logic_1 xor L_0_loc_channel_empty_n) and (temp_loc_channel_empty_n xor ap_const_logic_1) and (permuted_choice_1_0_1_empty_n xor ap_const_logic_1) and (permuted_choice_1_0_s_empty_n xor ap_const_logic_1) and (ap_const_logic_1 xor R_loc_channel_empty_n) and (ap_const_logic_1 xor L_loc_channel_empty_n) and (init_perm_res_0_loc_s_empty_n xor ap_const_logic_1) and (sub_key_t_empty_n xor ap_const_logic_1) and des_dec_entry7_U0_ap_idle and Loop_unroll2_proc_U0_ap_idle and Loop_unroll1_proc_U0_ap_idle and Loop_loop5_proc_U0_ap_idle and Loop_loop3_proc_U0_ap_idle and Loop_Pipeline_loop4_U0_ap_idle and Block_des_dec_exit2_U0_ap_idle);
    ap_ready <= des_dec_entry7_U0_ap_ready;
    ap_return <= p_desDecrypt_c_line2_U0_ap_return;
    ap_sync_channel_write_L_0_loc_channel <= ((ap_channel_done_L_0_loc_channel and L_0_loc_channel_full_n) or ap_sync_reg_channel_write_L_0_loc_channel);
    ap_sync_channel_write_L_loc_channel <= ((ap_channel_done_L_loc_channel and L_loc_channel_full_n) or ap_sync_reg_channel_write_L_loc_channel);
    ap_sync_channel_write_R_loc_channel <= ((ap_channel_done_R_loc_channel and R_loc_channel_full_n) or ap_sync_reg_channel_write_R_loc_channel);
    ap_sync_channel_write_permuted_choice_1_0_1 <= ((permuted_choice_1_0_1_full_n and ap_channel_done_permuted_choice_1_0_1) or ap_sync_reg_channel_write_permuted_choice_1_0_1);
    ap_sync_channel_write_permuted_choice_1_0_s <= ((permuted_choice_1_0_s_full_n and ap_channel_done_permuted_choice_1_0_s) or ap_sync_reg_channel_write_permuted_choice_1_0_s);
    ap_sync_channel_write_temp_loc_channel <= ((temp_loc_channel_full_n and ap_channel_done_temp_loc_channel) or ap_sync_reg_channel_write_temp_loc_channel);
    ap_sync_continue <= ap_const_logic_1;
    ap_sync_done <= p_desDecrypt_c_line2_U0_ap_done;
    ap_sync_ready <= des_dec_entry7_U0_ap_ready;
    des_dec_entry7_U0_ap_continue <= ap_const_logic_1;
    des_dec_entry7_U0_ap_start <= ap_start;
    des_dec_entry7_U0_start_full_n <= (start_for_Loop_unroll2_proc_U0_full_n and start_for_Loop_unroll1_proc_U0_full_n);
    p_desDecrypt_c_line2_U0_ap_continue <= ap_const_logic_1;
    p_desDecrypt_c_line2_U0_ap_start <= inv_init_perm_res_0_s_empty_n;
    p_desDecrypt_c_line2_U0_start_full_n <= ap_const_logic_1;
    p_desDecrypt_c_line2_U0_start_write <= ap_const_logic_0;
    start_for_Loop_unroll1_proc_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_Loop_unroll2_proc_U0_din <= (0=>ap_const_logic_1, others=>'-');
    tmp_p_desDecrypt_c_line2_fu_185_ap_return <= ap_const_lv64_0;
end behav;

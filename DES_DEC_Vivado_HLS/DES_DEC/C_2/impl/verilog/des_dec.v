// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="des_dec,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a35tl-cpg236-2L,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.689625,HLS_SYN_LAT=3531,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=1034,HLS_SYN_LUT=2428,HLS_VERSION=2019_1}" *)

module des_dec (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r,
        key,
        ap_return
);

parameter    ap_ST_fsm_state1 = 24'd1;
parameter    ap_ST_fsm_state2 = 24'd2;
parameter    ap_ST_fsm_state3 = 24'd4;
parameter    ap_ST_fsm_state4 = 24'd8;
parameter    ap_ST_fsm_state5 = 24'd16;
parameter    ap_ST_fsm_state6 = 24'd32;
parameter    ap_ST_fsm_state7 = 24'd64;
parameter    ap_ST_fsm_state8 = 24'd128;
parameter    ap_ST_fsm_state9 = 24'd256;
parameter    ap_ST_fsm_state10 = 24'd512;
parameter    ap_ST_fsm_state11 = 24'd1024;
parameter    ap_ST_fsm_state12 = 24'd2048;
parameter    ap_ST_fsm_state13 = 24'd4096;
parameter    ap_ST_fsm_state14 = 24'd8192;
parameter    ap_ST_fsm_state15 = 24'd16384;
parameter    ap_ST_fsm_state16 = 24'd32768;
parameter    ap_ST_fsm_state17 = 24'd65536;
parameter    ap_ST_fsm_state18 = 24'd131072;
parameter    ap_ST_fsm_state19 = 24'd262144;
parameter    ap_ST_fsm_state20 = 24'd524288;
parameter    ap_ST_fsm_state21 = 24'd1048576;
parameter    ap_ST_fsm_state22 = 24'd2097152;
parameter    ap_ST_fsm_state23 = 24'd4194304;
parameter    ap_ST_fsm_state24 = 24'd8388608;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] input_r;
input  [63:0] key;
output  [63:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [23:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] array_temp_address0;
reg    array_temp_ce0;
reg    array_temp_we0;
reg   [47:0] array_temp_d0;
wire   [47:0] array_temp_q0;
reg   [7:0] array_temp_address1;
reg    array_temp_ce1;
reg    array_temp_we1;
reg   [47:0] array_temp_d1;
wire   [47:0] array_temp_q1;
wire   [5:0] PC1_address0;
reg    PC1_ce0;
wire   [5:0] PC1_q0;
wire   [5:0] E_address0;
reg    E_ce0;
wire   [5:0] E_q0;
wire   [8:0] S_address0;
reg    S_ce0;
wire   [3:0] S_q0;
wire   [4:0] P_address0;
reg    P_ce0;
wire   [5:0] P_q0;
wire   [6:0] i_fu_566_p2;
reg   [6:0] i_reg_2581;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln171_fu_560_p2;
wire   [62:0] trunc_ln174_2_fu_583_p1;
reg   [62:0] trunc_ln174_2_reg_2591;
reg   [31:0] L_reg_2596;
wire   [31:0] R_fu_597_p1;
reg   [31:0] R_reg_2601;
wire   [63:0] init_perm_res_fu_624_p3;
wire    ap_CS_fsm_state3;
wire   [5:0] i_2_fu_637_p2;
reg   [5:0] i_2_reg_2614;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln182_fu_631_p2;
wire   [62:0] trunc_ln184_1_fu_648_p1;
reg   [62:0] trunc_ln184_1_reg_2624;
wire   [0:0] tmp_fu_652_p3;
reg   [0:0] tmp_reg_2636;
wire   [0:0] tmp_1_fu_660_p3;
reg   [0:0] tmp_1_reg_2653;
wire   [0:0] trunc_ln198_fu_668_p1;
reg   [0:0] trunc_ln198_reg_2669;
wire   [0:0] tmp_2_fu_672_p3;
reg   [0:0] tmp_2_reg_2686;
wire   [0:0] tmp_3_fu_680_p3;
reg   [0:0] tmp_3_reg_2701;
wire   [0:0] tmp_4_fu_688_p3;
reg   [0:0] tmp_4_reg_2718;
wire   [0:0] tmp_6_fu_696_p3;
reg   [0:0] tmp_6_reg_2734;
wire   [0:0] tmp_7_fu_704_p3;
reg   [0:0] tmp_7_reg_2749;
wire   [0:0] tmp_8_fu_712_p3;
reg   [0:0] tmp_8_reg_2766;
wire   [0:0] tmp_9_fu_720_p3;
reg   [0:0] tmp_9_reg_2783;
wire   [0:0] tmp_10_fu_728_p3;
reg   [0:0] tmp_10_reg_2798;
wire   [0:0] tmp_11_fu_736_p3;
reg   [0:0] tmp_11_reg_2814;
wire   [0:0] tmp_12_fu_744_p3;
reg   [0:0] tmp_12_reg_2829;
wire   [0:0] tmp_13_fu_752_p3;
reg   [0:0] tmp_13_reg_2845;
wire   [0:0] tmp_14_fu_760_p3;
reg   [0:0] tmp_14_reg_2860;
wire   [0:0] tmp_15_fu_768_p3;
reg   [0:0] tmp_15_reg_2875;
wire   [0:0] tmp_16_fu_776_p3;
reg   [0:0] tmp_16_reg_2890;
wire   [0:0] tmp_17_fu_784_p3;
reg   [0:0] tmp_17_reg_2907;
wire   [0:0] tmp_18_fu_792_p3;
reg   [0:0] tmp_18_reg_2922;
wire   [0:0] tmp_19_fu_800_p3;
reg   [0:0] tmp_19_reg_2938;
wire   [0:0] tmp_20_fu_808_p3;
reg   [0:0] tmp_20_reg_2956;
wire   [0:0] tmp_21_fu_816_p3;
reg   [0:0] tmp_21_reg_2970;
wire   [0:0] tmp_22_fu_824_p3;
reg   [0:0] tmp_22_reg_2985;
wire   [0:0] tmp_23_fu_832_p3;
reg   [0:0] tmp_23_reg_3001;
wire   [0:0] tmp_24_fu_840_p3;
reg   [0:0] tmp_24_reg_3017;
wire   [0:0] tmp_25_fu_848_p3;
reg   [0:0] tmp_25_reg_3034;
wire   [0:0] tmp_26_fu_856_p3;
reg   [0:0] tmp_26_reg_3051;
wire   [0:0] tmp_27_fu_864_p3;
reg   [0:0] tmp_27_reg_3067;
wire   [0:0] tmp_28_fu_872_p3;
reg   [0:0] tmp_28_reg_3082;
wire   [0:0] tmp_29_fu_880_p3;
reg   [0:0] tmp_29_reg_3097;
wire   [0:0] tmp_30_fu_888_p3;
reg   [0:0] tmp_30_reg_3112;
wire   [0:0] tmp_31_fu_896_p3;
reg   [0:0] tmp_31_reg_3129;
wire   [0:0] tmp_32_fu_904_p3;
reg   [0:0] tmp_32_reg_3146;
wire   [0:0] tmp_33_fu_912_p3;
reg   [0:0] tmp_33_reg_3162;
wire   [0:0] tmp_34_fu_920_p3;
reg   [0:0] tmp_34_reg_3178;
wire   [0:0] tmp_35_fu_928_p3;
reg   [0:0] tmp_35_reg_3195;
wire   [0:0] tmp_36_fu_936_p3;
reg   [0:0] tmp_36_reg_3210;
wire   [0:0] tmp_37_fu_944_p3;
reg   [0:0] tmp_37_reg_3225;
wire   [0:0] tmp_38_fu_952_p3;
reg   [0:0] tmp_38_reg_3241;
wire   [0:0] tmp_39_fu_960_p3;
reg   [0:0] tmp_39_reg_3257;
wire   [0:0] tmp_40_fu_968_p3;
reg   [0:0] tmp_40_reg_3273;
wire   [0:0] tmp_41_fu_976_p3;
reg   [0:0] tmp_41_reg_3289;
wire   [0:0] tmp_42_fu_984_p3;
reg   [0:0] tmp_42_reg_3305;
wire   [0:0] tmp_43_fu_992_p3;
reg   [0:0] tmp_43_reg_3320;
wire   [0:0] tmp_44_fu_1000_p3;
reg   [0:0] tmp_44_reg_3335;
wire   [0:0] tmp_45_fu_1008_p3;
reg   [0:0] tmp_45_reg_3351;
wire   [0:0] tmp_46_fu_1016_p3;
reg   [0:0] tmp_46_reg_3368;
wire   [0:0] tmp_47_fu_1024_p3;
reg   [0:0] tmp_47_reg_3383;
wire   [0:0] tmp_48_fu_1165_p3;
reg   [0:0] tmp_48_reg_3400;
wire   [0:0] tmp_52_fu_1173_p3;
reg   [0:0] tmp_52_reg_3416;
wire   [0:0] tmp_53_fu_1181_p3;
reg   [0:0] tmp_53_reg_3431;
wire   [0:0] tmp_54_fu_1189_p3;
reg   [0:0] tmp_54_reg_3448;
wire   [0:0] tmp_55_fu_1197_p3;
reg   [0:0] tmp_55_reg_3466;
wire   [0:0] tmp_56_fu_1205_p3;
reg   [0:0] tmp_56_reg_3483;
wire   [0:0] tmp_57_fu_1213_p3;
reg   [0:0] tmp_57_reg_3499;
wire   [0:0] tmp_58_fu_1221_p3;
reg   [0:0] tmp_58_reg_3515;
wire   [63:0] permuted_choice_1_fu_1366_p3;
wire    ap_CS_fsm_state5;
wire   [4:0] i_6_fu_2121_p2;
reg   [4:0] i_6_reg_3540;
wire    ap_CS_fsm_state13;
wire   [63:0] pre_output_fu_2127_p3;
reg   [63:0] pre_output_reg_3545;
wire   [0:0] icmp_ln223_fu_2115_p2;
wire   [5:0] j_fu_2141_p2;
reg   [5:0] j_reg_3553;
wire    ap_CS_fsm_state14;
wire   [0:0] icmp_ln227_fu_2135_p2;
wire   [63:0] s_input_fu_2187_p3;
wire    ap_CS_fsm_state15;
wire   [46:0] xor_ln232_fu_2207_p2;
reg   [46:0] xor_ln232_reg_3573;
wire    ap_CS_fsm_state16;
wire   [47:0] xor_ln232_1_fu_2213_p2;
reg   [47:0] xor_ln232_1_reg_3578;
wire   [3:0] j_4_fu_2225_p2;
reg   [3:0] j_4_reg_3586;
wire    ap_CS_fsm_state17;
wire   [6:0] sub_ln240_fu_2261_p2;
reg   [6:0] sub_ln240_reg_3591;
wire   [0:0] icmp_ln235_fu_2219_p2;
wire   [5:0] sub_ln240_2_fu_2285_p2;
reg   [5:0] sub_ln240_2_reg_3596;
wire   [5:0] sub_ln243_1_fu_2297_p2;
reg   [5:0] sub_ln243_1_reg_3601;
wire   [10:0] add_ln246_1_fu_2426_p2;
reg   [10:0] add_ln246_1_reg_3606;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire   [5:0] j_5_fu_2459_p2;
reg   [5:0] j_5_reg_3619;
wire    ap_CS_fsm_state21;
wire   [0:0] icmp_ln252_fu_2453_p2;
wire   [30:0] trunc_ln254_1_fu_2470_p1;
reg   [30:0] trunc_ln254_1_reg_3629;
wire   [31:0] R_1_fu_2474_p2;
wire   [31:0] f_function_res_fu_2500_p3;
wire    ap_CS_fsm_state22;
wire   [6:0] i_5_fu_2513_p2;
reg   [6:0] i_5_reg_3647;
wire    ap_CS_fsm_state23;
wire   [0:0] icmp_ln267_fu_2507_p2;
wire   [62:0] trunc_ln270_2_fu_2534_p1;
reg   [62:0] trunc_ln270_2_reg_3657;
wire   [63:0] inv_init_perm_res_fu_2561_p3;
wire    ap_CS_fsm_state24;
reg   [63:0] init_perm_res_0_reg_401;
reg   [6:0] i_0_reg_412;
reg   [63:0] permuted_choice_1_0_reg_423;
reg   [5:0] i_1_reg_434;
reg   [31:0] temp_reg_445;
wire    ap_CS_fsm_state12;
reg   [31:0] L_0_reg_455;
reg   [4:0] i_3_reg_466;
reg   [63:0] s_input_0_reg_478;
reg   [5:0] j_1_reg_490;
reg   [3:0] j_2_reg_501;
wire    ap_CS_fsm_state20;
reg   [31:0] f_function_res_0_reg_513;
reg   [5:0] j_3_reg_524;
reg   [6:0] i_4_reg_535;
reg   [63:0] inv_init_perm_res_0_reg_546;
wire   [63:0] zext_ln174_1_fu_578_p1;
wire   [63:0] zext_ln184_1_fu_643_p1;
wire   [63:0] zext_ln229_fu_2147_p1;
wire   [63:0] zext_ln232_fu_2158_p1;
wire  signed [63:0] sext_ln246_3_fu_2432_p1;
wire   [63:0] zext_ln254_fu_2465_p1;
wire   [63:0] zext_ln270_2_fu_2529_p1;
reg   [31:0] s_output_1_fu_284;
wire   [31:0] s_output_fu_2440_p3;
wire   [47:0] or_ln218_s_fu_1032_p49;
wire   [47:0] or_ln218_2_fu_1237_p49;
wire    ap_CS_fsm_state6;
wire   [47:0] or_ln218_1_fu_1373_p49;
wire   [47:0] or_ln218_3_fu_1426_p49;
wire    ap_CS_fsm_state7;
wire   [47:0] or_ln218_4_fu_1479_p49;
wire   [47:0] or_ln218_5_fu_1532_p49;
wire    ap_CS_fsm_state8;
wire   [47:0] or_ln218_6_fu_1585_p49;
wire   [47:0] or_ln218_7_fu_1638_p49;
wire    ap_CS_fsm_state9;
wire   [47:0] or_ln218_8_fu_1691_p49;
wire   [47:0] or_ln218_9_fu_1744_p49;
wire    ap_CS_fsm_state10;
wire   [47:0] or_ln218_10_fu_1797_p49;
wire   [47:0] or_ln218_11_fu_1850_p49;
wire    ap_CS_fsm_state11;
wire   [47:0] or_ln218_12_fu_1903_p49;
wire   [47:0] or_ln218_13_fu_1956_p49;
wire   [47:0] or_ln218_14_fu_2009_p49;
wire   [47:0] or_ln218_15_fu_2062_p49;
wire   [6:0] add_ln174_fu_572_p2;
wire   [6:0] trunc_ln174_fu_601_p1;
wire   [6:0] sub_ln174_fu_605_p2;
wire   [63:0] zext_ln174_fu_611_p1;
wire   [63:0] lshr_ln174_fu_615_p2;
wire   [0:0] trunc_ln174_1_fu_620_p1;
wire   [25:0] trunc_ln198_1_fu_1133_p1;
wire   [26:0] zext_ln198_fu_1147_p1;
wire   [27:0] tmp_5_fu_1151_p3;
wire   [27:0] trunc_ln198_s_fu_1137_p4;
wire   [27:0] or_ln212_fu_1159_p2;
wire   [0:0] tmp_59_fu_1229_p3;
wire   [6:0] zext_ln184_2_fu_1343_p1;
wire   [6:0] sub_ln184_fu_1347_p2;
wire   [63:0] zext_ln184_fu_1353_p1;
wire   [63:0] lshr_ln184_fu_1357_p2;
wire   [0:0] trunc_ln184_fu_1362_p1;
wire   [4:0] sub_ln232_fu_2152_p2;
wire   [5:0] sub_ln229_fu_2163_p2;
wire   [31:0] zext_ln229_1_fu_2169_p1;
wire   [31:0] lshr_ln229_fu_2173_p2;
wire   [62:0] trunc_ln229_1_fu_2183_p1;
wire   [0:0] trunc_ln229_fu_2179_p1;
wire   [46:0] trunc_ln232_2_fu_2203_p1;
wire   [46:0] trunc_ln232_1_fu_2199_p1;
wire   [47:0] trunc_ln232_fu_2195_p1;
wire   [2:0] trunc_ln240_fu_2231_p1;
wire   [5:0] shl_ln_fu_2235_p3;
wire   [3:0] shl_ln240_fu_2247_p2;
wire   [6:0] zext_ln240_fu_2243_p1;
wire   [6:0] zext_ln240_2_fu_2257_p1;
wire   [4:0] shl_ln240_1_fu_2267_p3;
wire   [5:0] zext_ln240_1_fu_2253_p1;
wire   [5:0] sub_ln240_1_fu_2279_p2;
wire   [5:0] zext_ln240_5_fu_2275_p1;
wire   [5:0] sub_ln243_fu_2291_p2;
wire  signed [31:0] sext_ln240_fu_2303_p1;
wire   [47:0] zext_ln240_4_fu_2310_p1;
wire   [47:0] lshr_ln240_fu_2314_p2;
wire   [47:0] and_ln240_fu_2320_p2;
wire   [47:0] zext_ln240_6_fu_2325_p1;
wire   [47:0] lshr_ln240_1_fu_2328_p2;
wire   [0:0] tmp_60_fu_2338_p3;
wire   [0:0] trunc_ln240_1_fu_2334_p1;
wire   [46:0] zext_ln240_3_fu_2306_p1;
wire   [46:0] lshr_ln243_fu_2362_p2;
wire   [46:0] and_ln243_fu_2368_p2;
wire   [46:0] zext_ln243_fu_2373_p1;
wire   [2:0] tmp_49_fu_2352_p4;
wire   [0:0] or_ln241_fu_2346_p2;
wire   [7:0] tmp_50_fu_2382_p4;
wire   [46:0] lshr_ln243_1_fu_2376_p2;
wire   [7:0] trunc_ln246_fu_2396_p1;
wire  signed [8:0] sext_ln246_1_fu_2400_p1;
wire  signed [8:0] sext_ln246_fu_2392_p1;
wire   [8:0] add_ln246_fu_2404_p2;
wire   [9:0] tmp_51_fu_2414_p3;
wire  signed [10:0] sext_ln246_2_fu_2410_p1;
wire   [10:0] zext_ln246_fu_2422_p1;
wire   [27:0] trunc_ln246_1_fu_2436_p1;
wire   [5:0] sub_ln254_fu_2480_p2;
wire   [31:0] zext_ln254_1_fu_2486_p1;
wire   [31:0] lshr_ln254_fu_2490_p2;
wire   [0:0] trunc_ln254_fu_2496_p1;
wire   [7:0] zext_ln270_1_fu_2519_p1;
wire   [7:0] add_ln270_fu_2523_p2;
wire   [6:0] trunc_ln270_fu_2538_p1;
wire   [6:0] sub_ln270_fu_2542_p2;
wire   [63:0] zext_ln270_fu_2548_p1;
wire   [63:0] lshr_ln270_fu_2552_p2;
wire   [0:0] trunc_ln270_1_fu_2557_p1;
reg   [23:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 24'd1;
end

des_dec_array_temp #(
    .DataWidth( 48 ),
    .AddressRange( 144 ),
    .AddressWidth( 8 ))
array_temp_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(array_temp_address0),
    .ce0(array_temp_ce0),
    .we0(array_temp_we0),
    .d0(array_temp_d0),
    .q0(array_temp_q0),
    .address1(array_temp_address1),
    .ce1(array_temp_ce1),
    .we1(array_temp_we1),
    .d1(array_temp_d1),
    .q1(array_temp_q1)
);

des_dec_PC1 #(
    .DataWidth( 6 ),
    .AddressRange( 56 ),
    .AddressWidth( 6 ))
PC1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(PC1_address0),
    .ce0(PC1_ce0),
    .q0(PC1_q0)
);

des_dec_E #(
    .DataWidth( 6 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
E_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(E_address0),
    .ce0(E_ce0),
    .q0(E_q0)
);

des_dec_S #(
    .DataWidth( 4 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
S_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(S_address0),
    .ce0(S_ce0),
    .q0(S_q0)
);

des_dec_P #(
    .DataWidth( 6 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
P_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(P_address0),
    .ce0(P_ce0),
    .q0(P_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        L_0_reg_455 <= L_reg_2596;
    end else if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln252_fu_2453_p2 == 1'd1))) begin
        L_0_reg_455 <= temp_reg_445;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln235_fu_2219_p2 == 1'd1))) begin
        f_function_res_0_reg_513 <= 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        f_function_res_0_reg_513 <= f_function_res_fu_2500_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_0_reg_412 <= i_reg_2581;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_412 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_1_reg_434 <= i_2_reg_2614;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln171_fu_560_p2 == 1'd1))) begin
        i_1_reg_434 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i_3_reg_466 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln252_fu_2453_p2 == 1'd1))) begin
        i_3_reg_466 <= i_6_reg_3540;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        i_4_reg_535 <= i_5_reg_3647;
    end else if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln223_fu_2115_p2 == 1'd1))) begin
        i_4_reg_535 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        init_perm_res_0_reg_401 <= init_perm_res_fu_624_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        init_perm_res_0_reg_401 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        inv_init_perm_res_0_reg_546 <= inv_init_perm_res_fu_2561_p3;
    end else if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln223_fu_2115_p2 == 1'd1))) begin
        inv_init_perm_res_0_reg_546 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        j_1_reg_490 <= j_reg_3553;
    end else if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln223_fu_2115_p2 == 1'd0))) begin
        j_1_reg_490 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        j_2_reg_501 <= j_4_reg_3586;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        j_2_reg_501 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln235_fu_2219_p2 == 1'd1))) begin
        j_3_reg_524 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        j_3_reg_524 <= j_5_reg_3619;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        permuted_choice_1_0_reg_423 <= permuted_choice_1_fu_1366_p3;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln171_fu_560_p2 == 1'd1))) begin
        permuted_choice_1_0_reg_423 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        s_input_0_reg_478 <= s_input_fu_2187_p3;
    end else if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln223_fu_2115_p2 == 1'd0))) begin
        s_input_0_reg_478 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        s_output_1_fu_284 <= s_output_fu_2440_p3;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln182_fu_631_p2 == 1'd1))) begin
        s_output_1_fu_284 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        temp_reg_445 <= R_reg_2601;
    end else if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln252_fu_2453_p2 == 1'd1))) begin
        temp_reg_445 <= R_1_fu_2474_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln171_fu_560_p2 == 1'd1))) begin
        L_reg_2596 <= {{init_perm_res_0_reg_401[63:32]}};
        R_reg_2601 <= R_fu_597_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        add_ln246_1_reg_3606 <= add_ln246_1_fu_2426_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_2_reg_2614 <= i_2_fu_637_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        i_5_reg_3647 <= i_5_fu_2513_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i_6_reg_3540 <= i_6_fu_2121_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_2581 <= i_fu_566_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        j_4_reg_3586 <= j_4_fu_2225_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        j_5_reg_3619 <= j_5_fu_2459_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        j_reg_3553 <= j_fu_2141_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln223_fu_2115_p2 == 1'd1))) begin
        pre_output_reg_3545 <= pre_output_fu_2127_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln235_fu_2219_p2 == 1'd0))) begin
        sub_ln240_2_reg_3596[5 : 1] <= sub_ln240_2_fu_2285_p2[5 : 1];
        sub_ln240_reg_3591[6 : 1] <= sub_ln240_fu_2261_p2[6 : 1];
        sub_ln243_1_reg_3601[5 : 1] <= sub_ln243_1_fu_2297_p2[5 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln182_fu_631_p2 == 1'd1))) begin
        tmp_10_reg_2798 <= permuted_choice_1_0_reg_423[32'd50];
        tmp_11_reg_2814 <= permuted_choice_1_0_reg_423[32'd52];
        tmp_12_reg_2829 <= permuted_choice_1_0_reg_423[32'd49];
        tmp_13_reg_2845 <= permuted_choice_1_0_reg_423[32'd34];
        tmp_14_reg_2860 <= permuted_choice_1_0_reg_423[32'd45];
        tmp_15_reg_2875 <= permuted_choice_1_0_reg_423[32'd32];
        tmp_16_reg_2890 <= permuted_choice_1_0_reg_423[32'd36];
        tmp_17_reg_2907 <= permuted_choice_1_0_reg_423[32'd43];
        tmp_18_reg_2922 <= permuted_choice_1_0_reg_423[32'd51];
        tmp_19_reg_2938 <= permuted_choice_1_0_reg_423[32'd29];
        tmp_1_reg_2653 <= permuted_choice_1_0_reg_423[32'd27];
        tmp_20_reg_2956 <= permuted_choice_1_0_reg_423[32'd47];
        tmp_21_reg_2970 <= permuted_choice_1_0_reg_423[32'd39];
        tmp_22_reg_2985 <= permuted_choice_1_0_reg_423[32'd48];
        tmp_23_reg_3001 <= permuted_choice_1_0_reg_423[32'd35];
        tmp_24_reg_3017 <= permuted_choice_1_0_reg_423[32'd42];
        tmp_25_reg_3034 <= permuted_choice_1_0_reg_423[32'd53];
        tmp_26_reg_3051 <= permuted_choice_1_0_reg_423[32'd14];
        tmp_27_reg_3067 <= permuted_choice_1_0_reg_423[32'd3];
        tmp_28_reg_3082 <= permuted_choice_1_0_reg_423[32'd24];
        tmp_29_reg_3097 <= permuted_choice_1_0_reg_423[32'd18];
        tmp_2_reg_2686 <= permuted_choice_1_0_reg_423[32'd28];
        tmp_30_reg_3112 <= permuted_choice_1_0_reg_423[32'd8];
        tmp_31_reg_3129 <= permuted_choice_1_0_reg_423[32'd25];
        tmp_32_reg_3146 <= permuted_choice_1_0_reg_423[32'd15];
        tmp_33_reg_3162 <= permuted_choice_1_0_reg_423[32'd4];
        tmp_34_reg_3178 <= permuted_choice_1_0_reg_423[32'd10];
        tmp_35_reg_3195 <= permuted_choice_1_0_reg_423[32'd22];
        tmp_36_reg_3210 <= permuted_choice_1_0_reg_423[32'd7];
        tmp_37_reg_3225 <= permuted_choice_1_0_reg_423[32'd11];
        tmp_38_reg_3241 <= permuted_choice_1_0_reg_423[32'd6];
        tmp_39_reg_3257 <= permuted_choice_1_0_reg_423[32'd16];
        tmp_3_reg_2701 <= permuted_choice_1_0_reg_423[32'd40];
        tmp_40_reg_3273 <= permuted_choice_1_0_reg_423[32'd21];
        tmp_41_reg_3289 <= permuted_choice_1_0_reg_423[32'd2];
        tmp_42_reg_3305 <= permuted_choice_1_0_reg_423[32'd9];
        tmp_43_reg_3320 <= permuted_choice_1_0_reg_423[32'd13];
        tmp_44_reg_3335 <= permuted_choice_1_0_reg_423[32'd5];
        tmp_45_reg_3351 <= permuted_choice_1_0_reg_423[32'd19];
        tmp_46_reg_3368 <= permuted_choice_1_0_reg_423[32'd26];
        tmp_47_reg_3383 <= permuted_choice_1_0_reg_423[32'd23];
        tmp_48_reg_3400 <= permuted_choice_1_0_reg_423[32'd37];
        tmp_4_reg_2718 <= permuted_choice_1_0_reg_423[32'd38];
        tmp_52_reg_3416 <= permuted_choice_1_0_reg_423[32'd30];
        tmp_53_reg_3431 <= permuted_choice_1_0_reg_423[32'd33];
        tmp_54_reg_3448 <= permuted_choice_1_0_reg_423[32'd46];
        tmp_55_reg_3466 <= permuted_choice_1_0_reg_423[32'd17];
        tmp_56_reg_3483 <= permuted_choice_1_0_reg_423[32'd20];
        tmp_57_reg_3499 <= permuted_choice_1_0_reg_423[32'd1];
        tmp_58_reg_3515 <= permuted_choice_1_0_reg_423[32'd12];
        tmp_6_reg_2734 <= permuted_choice_1_0_reg_423[32'd41];
        tmp_7_reg_2749 <= permuted_choice_1_0_reg_423[32'd44];
        tmp_8_reg_2766 <= permuted_choice_1_0_reg_423[32'd31];
        tmp_9_reg_2783 <= permuted_choice_1_0_reg_423[32'd54];
        tmp_reg_2636 <= permuted_choice_1_0_reg_423[32'd55];
        trunc_ln198_reg_2669 <= trunc_ln198_fu_668_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln171_fu_560_p2 == 1'd0))) begin
        trunc_ln174_2_reg_2591 <= trunc_ln174_2_fu_583_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln182_fu_631_p2 == 1'd0))) begin
        trunc_ln184_1_reg_2624 <= trunc_ln184_1_fu_648_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln252_fu_2453_p2 == 1'd0))) begin
        trunc_ln254_1_reg_3629 <= trunc_ln254_1_fu_2470_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln267_fu_2507_p2 == 1'd0))) begin
        trunc_ln270_2_reg_3657 <= trunc_ln270_2_fu_2534_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        xor_ln232_1_reg_3578 <= xor_ln232_1_fu_2213_p2;
        xor_ln232_reg_3573 <= xor_ln232_fu_2207_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        E_ce0 = 1'b1;
    end else begin
        E_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        PC1_ce0 = 1'b1;
    end else begin
        PC1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        P_ce0 = 1'b1;
    end else begin
        P_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        S_ce0 = 1'b1;
    end else begin
        S_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln267_fu_2507_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln267_fu_2507_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        array_temp_address0 = zext_ln270_2_fu_2529_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        array_temp_address0 = 8'd15;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        array_temp_address0 = 8'd13;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        array_temp_address0 = 8'd11;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        array_temp_address0 = 8'd9;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        array_temp_address0 = 8'd7;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        array_temp_address0 = 8'd5;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        array_temp_address0 = 8'd3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        array_temp_address0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        array_temp_address0 = zext_ln174_1_fu_578_p1;
    end else begin
        array_temp_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        array_temp_address1 = zext_ln232_fu_2158_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        array_temp_address1 = 8'd14;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        array_temp_address1 = 8'd12;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        array_temp_address1 = 8'd10;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        array_temp_address1 = 8'd8;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        array_temp_address1 = 8'd6;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        array_temp_address1 = 8'd4;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        array_temp_address1 = 8'd2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        array_temp_address1 = 8'd1;
    end else begin
        array_temp_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        array_temp_ce0 = 1'b1;
    end else begin
        array_temp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state4))) begin
        array_temp_ce1 = 1'b1;
    end else begin
        array_temp_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        array_temp_d0 = or_ln218_15_fu_2062_p49;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        array_temp_d0 = or_ln218_13_fu_1956_p49;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        array_temp_d0 = or_ln218_11_fu_1850_p49;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        array_temp_d0 = or_ln218_9_fu_1744_p49;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        array_temp_d0 = or_ln218_7_fu_1638_p49;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        array_temp_d0 = or_ln218_5_fu_1532_p49;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        array_temp_d0 = or_ln218_3_fu_1426_p49;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        array_temp_d0 = or_ln218_s_fu_1032_p49;
    end else begin
        array_temp_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        array_temp_d1 = or_ln218_14_fu_2009_p49;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        array_temp_d1 = or_ln218_12_fu_1903_p49;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        array_temp_d1 = or_ln218_10_fu_1797_p49;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        array_temp_d1 = or_ln218_8_fu_1691_p49;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        array_temp_d1 = or_ln218_6_fu_1585_p49;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        array_temp_d1 = or_ln218_4_fu_1479_p49;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        array_temp_d1 = or_ln218_1_fu_1373_p49;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        array_temp_d1 = or_ln218_2_fu_1237_p49;
    end else begin
        array_temp_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln182_fu_631_p2 == 1'd1)))) begin
        array_temp_we0 = 1'b1;
    end else begin
        array_temp_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln182_fu_631_p2 == 1'd1)))) begin
        array_temp_we1 = 1'b1;
    end else begin
        array_temp_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln171_fu_560_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln182_fu_631_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln223_fu_2115_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (icmp_ln227_fu_2135_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (icmp_ln235_fu_2219_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state21 : begin
            if (((1'b1 == ap_CS_fsm_state21) & (icmp_ln252_fu_2453_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln267_fu_2507_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign E_address0 = zext_ln229_fu_2147_p1;

assign PC1_address0 = zext_ln184_1_fu_643_p1;

assign P_address0 = zext_ln254_fu_2465_p1;

assign R_1_fu_2474_p2 = (f_function_res_0_reg_513 ^ L_0_reg_455);

assign R_fu_597_p1 = init_perm_res_0_reg_401[31:0];

assign S_address0 = sext_ln246_3_fu_2432_p1;

assign add_ln174_fu_572_p2 = (7'd16 + i_0_reg_412);

assign add_ln246_1_fu_2426_p2 = ($signed(sext_ln246_2_fu_2410_p1) + $signed(zext_ln246_fu_2422_p1));

assign add_ln246_fu_2404_p2 = ($signed(sext_ln246_1_fu_2400_p1) + $signed(sext_ln246_fu_2392_p1));

assign add_ln270_fu_2523_p2 = (8'd80 + zext_ln270_1_fu_2519_p1);

assign and_ln240_fu_2320_p2 = (xor_ln232_1_reg_3578 & lshr_ln240_fu_2314_p2);

assign and_ln243_fu_2368_p2 = (xor_ln232_reg_3573 & lshr_ln243_fu_2362_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return = inv_init_perm_res_0_reg_546;

assign f_function_res_fu_2500_p3 = {{trunc_ln254_1_reg_3629}, {trunc_ln254_fu_2496_p1}};

assign i_2_fu_637_p2 = (i_1_reg_434 + 6'd1);

assign i_5_fu_2513_p2 = (i_4_reg_535 + 7'd1);

assign i_6_fu_2121_p2 = (i_3_reg_466 + 5'd1);

assign i_fu_566_p2 = (i_0_reg_412 + 7'd1);

assign icmp_ln171_fu_560_p2 = ((i_0_reg_412 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln182_fu_631_p2 = ((i_1_reg_434 == 6'd56) ? 1'b1 : 1'b0);

assign icmp_ln223_fu_2115_p2 = ((i_3_reg_466 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln227_fu_2135_p2 = ((j_1_reg_490 == 6'd48) ? 1'b1 : 1'b0);

assign icmp_ln235_fu_2219_p2 = ((j_2_reg_501 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln252_fu_2453_p2 = ((j_3_reg_524 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln267_fu_2507_p2 = ((i_4_reg_535 == 7'd64) ? 1'b1 : 1'b0);

assign init_perm_res_fu_624_p3 = {{trunc_ln174_2_reg_2591}, {trunc_ln174_1_fu_620_p1}};

assign inv_init_perm_res_fu_2561_p3 = {{trunc_ln270_2_reg_3657}, {trunc_ln270_1_fu_2557_p1}};

assign j_4_fu_2225_p2 = (j_2_reg_501 + 4'd1);

assign j_5_fu_2459_p2 = (j_3_reg_524 + 6'd1);

assign j_fu_2141_p2 = (j_1_reg_490 + 6'd1);

assign lshr_ln174_fu_615_p2 = input_r >> zext_ln174_fu_611_p1;

assign lshr_ln184_fu_1357_p2 = key >> zext_ln184_fu_1353_p1;

assign lshr_ln229_fu_2173_p2 = temp_reg_445 >> zext_ln229_1_fu_2169_p1;

assign lshr_ln240_1_fu_2328_p2 = and_ln240_fu_2320_p2 >> zext_ln240_6_fu_2325_p1;

assign lshr_ln240_fu_2314_p2 = 48'd145135534866432 >> zext_ln240_4_fu_2310_p1;

assign lshr_ln243_1_fu_2376_p2 = and_ln243_fu_2368_p2 >> zext_ln243_fu_2373_p1;

assign lshr_ln243_fu_2362_p2 = 47'd131941395333120 >> zext_ln240_3_fu_2306_p1;

assign lshr_ln254_fu_2490_p2 = s_output_1_fu_284 >> zext_ln254_1_fu_2486_p1;

assign lshr_ln270_fu_2552_p2 = pre_output_reg_3545 >> zext_ln270_fu_2548_p1;

assign or_ln212_fu_1159_p2 = (trunc_ln198_s_fu_1137_p4 | tmp_5_fu_1151_p3);

assign or_ln218_10_fu_1797_p49 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_18_reg_2922}, {tmp_22_reg_2985}}, {tmp_9_reg_2783}}, {tmp_6_reg_2734}}, {tmp_16_reg_2890}}, {tmp_15_reg_2875}}, {tmp_13_reg_2845}}, {tmp_48_reg_3400}}, {tmp_10_reg_2798}}, {tmp_8_reg_2766}}, {tmp_7_reg_2749}}, {tmp_reg_2636}}, {tmp_24_reg_3017}}, {tmp_54_reg_3448}}, {tmp_25_reg_3034}}, {tmp_53_reg_3431}}, {tmp_21_reg_2970}}, {tmp_19_reg_2938}}, {tmp_12_reg_2829}}, {tmp_52_reg_3416}}, {tmp_4_reg_2718}}, {tmp_14_reg_2860}}, {tmp_11_reg_2814}}, {tmp_23_reg_3001}}, {tmp_28_reg_3082}}, {tmp_43_reg_3320}}, {tmp_38_reg_3241}}, {trunc_ln198_reg_2669}}, {tmp_29_reg_3097}}, {tmp_34_reg_3178}}, {tmp_36_reg_3210}}, {tmp_31_reg_3129}}, {tmp_26_reg_3051}}, {tmp_56_reg_3483}}, {tmp_33_reg_3162}}, {tmp_55_reg_3466}}, {tmp_40_reg_3273}}, {tmp_39_reg_3257}}, {tmp_46_reg_3368}}, {tmp_42_reg_3305}}, {tmp_27_reg_3067}}, {tmp_58_reg_3515}}, {tmp_45_reg_3351}}, {tmp_47_reg_3383}}, {tmp_32_reg_3146}}, {tmp_57_reg_3499}}, {tmp_30_reg_3112}}, {tmp_44_reg_3335}};

assign or_ln218_11_fu_1850_p49 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_12_reg_2829}, {tmp_54_reg_3448}}, {tmp_11_reg_2814}}, {tmp_21_reg_2970}}, {tmp_13_reg_2845}}, {tmp_52_reg_3416}}, {tmp_15_reg_2875}}, {tmp_23_reg_3001}}, {tmp_22_reg_2985}}, {tmp_19_reg_2938}}, {tmp_24_reg_3017}}, {tmp_25_reg_3034}}, {tmp_3_reg_2701}}, {tmp_7_reg_2749}}, {tmp_18_reg_2922}}, {tmp_8_reg_2766}}, {tmp_48_reg_3400}}, {tmp_reg_2636}}, {tmp_20_reg_2956}}, {tmp_2_reg_2686}}, {tmp_16_reg_2890}}, {tmp_17_reg_2907}}, {tmp_10_reg_2798}}, {tmp_53_reg_3431}}, {tmp_35_reg_3195}}, {tmp_37_reg_3225}}, {tmp_33_reg_3162}}, {tmp_46_reg_3368}}, {tmp_39_reg_3257}}, {tmp_30_reg_3112}}, {tmp_44_reg_3335}}, {tmp_47_reg_3383}}, {tmp_58_reg_3515}}, {tmp_29_reg_3097}}, {tmp_41_reg_3289}}, {tmp_32_reg_3146}}, {tmp_45_reg_3351}}, {tmp_26_reg_3051}}, {tmp_28_reg_3082}}, {tmp_36_reg_3210}}, {tmp_57_reg_3499}}, {tmp_34_reg_3178}}, {tmp_55_reg_3466}}, {tmp_40_reg_3273}}, {tmp_43_reg_3320}}, {tmp_1_reg_2653}}, {tmp_38_reg_3241}}, {tmp_27_reg_3067}};

assign or_ln218_12_fu_1903_p49 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_20_reg_2956}, {tmp_7_reg_2749}}, {tmp_10_reg_2798}}, {tmp_48_reg_3400}}, {tmp_15_reg_2875}}, {tmp_2_reg_2686}}, {tmp_52_reg_3416}}, {tmp_53_reg_3431}}, {tmp_54_reg_3448}}, {tmp_reg_2636}}, {tmp_3_reg_2701}}, {tmp_18_reg_2922}}, {tmp_4_reg_2718}}, {tmp_24_reg_3017}}, {tmp_12_reg_2829}}, {tmp_19_reg_2938}}, {tmp_23_reg_3001}}, {tmp_25_reg_3034}}, {tmp_14_reg_2860}}, {tmp_9_reg_2783}}, {tmp_13_reg_2845}}, {tmp_6_reg_2734}}, {tmp_22_reg_2985}}, {tmp_8_reg_2766}}, {tmp_56_reg_3483}}, {tmp_42_reg_3305}}, {tmp_41_reg_3289}}, {tmp_28_reg_3082}}, {tmp_26_reg_3051}}, {tmp_38_reg_3241}}, {tmp_27_reg_3067}}, {tmp_40_reg_3273}}, {tmp_34_reg_3178}}, {tmp_39_reg_3257}}, {trunc_ln198_reg_2669}}, {tmp_43_reg_3320}}, {tmp_55_reg_3466}}, {tmp_58_reg_3515}}, {tmp_35_reg_3195}}, {tmp_44_reg_3335}}, {tmp_1_reg_2653}}, {tmp_30_reg_3112}}, {tmp_32_reg_3146}}, {tmp_45_reg_3351}}, {tmp_37_reg_3225}}, {tmp_31_reg_3129}}, {tmp_33_reg_3162}}, {tmp_57_reg_3499}};

assign or_ln218_13_fu_1956_p49 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_14_reg_2860}, {tmp_24_reg_3017}}, {tmp_22_reg_2985}}, {tmp_23_reg_3001}}, {tmp_52_reg_3416}}, {tmp_9_reg_2783}}, {tmp_2_reg_2686}}, {tmp_8_reg_2766}}, {tmp_7_reg_2749}}, {tmp_25_reg_3034}}, {tmp_4_reg_2718}}, {tmp_12_reg_2829}}, {tmp_16_reg_2890}}, {tmp_3_reg_2701}}, {tmp_20_reg_2956}}, {tmp_reg_2636}}, {tmp_53_reg_3431}}, {tmp_18_reg_2922}}, {tmp_17_reg_2907}}, {tmp_11_reg_2814}}, {tmp_15_reg_2875}}, {tmp_21_reg_2970}}, {tmp_54_reg_3448}}, {tmp_19_reg_2938}}, {tmp_29_reg_3097}}, {tmp_36_reg_3210}}, {trunc_ln198_reg_2669}}, {tmp_35_reg_3195}}, {tmp_58_reg_3515}}, {tmp_33_reg_3162}}, {tmp_57_reg_3499}}, {tmp_45_reg_3351}}, {tmp_30_reg_3112}}, {tmp_26_reg_3051}}, {tmp_46_reg_3368}}, {tmp_37_reg_3225}}, {tmp_32_reg_3146}}, {tmp_34_reg_3178}}, {tmp_56_reg_3483}}, {tmp_27_reg_3067}}, {tmp_31_reg_3129}}, {tmp_38_reg_3241}}, {tmp_43_reg_3320}}, {tmp_55_reg_3466}}, {tmp_42_reg_3305}}, {tmp_47_reg_3383}}, {tmp_41_reg_3289}}, {tmp_1_reg_2653}};

assign or_ln218_14_fu_2009_p49 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_17_reg_2907}, {tmp_3_reg_2701}}, {tmp_54_reg_3448}}, {tmp_53_reg_3431}}, {tmp_2_reg_2686}}, {tmp_11_reg_2814}}, {tmp_9_reg_2783}}, {tmp_19_reg_2938}}, {tmp_24_reg_3017}}, {tmp_18_reg_2922}}, {tmp_16_reg_2890}}, {tmp_20_reg_2956}}, {tmp_13_reg_2845}}, {tmp_4_reg_2718}}, {tmp_14_reg_2860}}, {tmp_25_reg_3034}}, {tmp_8_reg_2766}}, {tmp_12_reg_2829}}, {tmp_6_reg_2734}}, {tmp_10_reg_2798}}, {tmp_52_reg_3416}}, {tmp_48_reg_3400}}, {tmp_7_reg_2749}}, {tmp_reg_2636}}, {tmp_39_reg_3257}}, {tmp_44_reg_3335}}, {tmp_46_reg_3368}}, {tmp_56_reg_3483}}, {tmp_34_reg_3178}}, {tmp_41_reg_3289}}, {tmp_1_reg_2653}}, {tmp_55_reg_3466}}, {tmp_38_reg_3241}}, {tmp_58_reg_3515}}, {tmp_28_reg_3082}}, {tmp_42_reg_3305}}, {tmp_43_reg_3320}}, {tmp_30_reg_3112}}, {tmp_29_reg_3097}}, {tmp_57_reg_3499}}, {tmp_47_reg_3383}}, {tmp_33_reg_3162}}, {tmp_37_reg_3225}}, {tmp_32_reg_3146}}, {tmp_36_reg_3210}}, {tmp_40_reg_3273}}, {trunc_ln198_reg_2669}}, {tmp_31_reg_3129}};

assign or_ln218_15_fu_2062_p49 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_24_reg_3017}, {tmp_21_reg_2970}}, {tmp_14_reg_2860}}, {tmp_15_reg_2875}}, {tmp_reg_2636}}, {tmp_18_reg_2922}}, {tmp_25_reg_3034}}, {tmp_2_reg_2686}}, {tmp_6_reg_2734}}, {tmp_10_reg_2798}}, {tmp_23_reg_3001}}, {tmp_54_reg_3448}}, {tmp_53_reg_3431}}, {tmp_48_reg_3400}}, {tmp_7_reg_2749}}, {tmp_11_reg_2814}}, {tmp_52_reg_3416}}, {tmp_22_reg_2985}}, {tmp_3_reg_2701}}, {tmp_12_reg_2829}}, {tmp_19_reg_2938}}, {tmp_16_reg_2890}}, {tmp_17_reg_2907}}, {tmp_9_reg_2783}}, {tmp_32_reg_3146}}, {tmp_33_reg_3162}}, {tmp_31_reg_3129}}, {tmp_45_reg_3351}}, {tmp_42_reg_3305}}, {tmp_57_reg_3499}}, {tmp_46_reg_3368}}, {tmp_39_reg_3257}}, {tmp_44_reg_3335}}, {tmp_37_reg_3225}}, {tmp_47_reg_3383}}, {tmp_30_reg_3112}}, {tmp_58_reg_3515}}, {tmp_36_reg_3210}}, {tmp_55_reg_3466}}, {trunc_ln198_reg_2669}}, {tmp_35_reg_3195}}, {tmp_27_reg_3067}}, {tmp_34_reg_3178}}, {tmp_26_reg_3051}}, {tmp_38_reg_3241}}, {tmp_56_reg_3483}}, {tmp_1_reg_2653}}, {tmp_28_reg_3082}};

assign or_ln218_1_fu_1373_p49 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_4_reg_2718}, {tmp_23_reg_3001}}, {tmp_6_reg_2734}}, {tmp_2_reg_2686}}, {tmp_18_reg_2922}}, {tmp_20_reg_2956}}, {tmp_12_reg_2829}}, {tmp_11_reg_2814}}, {tmp_48_reg_3400}}, {tmp_54_reg_3448}}, {tmp_8_reg_2766}}, {tmp_24_reg_3017}}, {tmp_19_reg_2938}}, {tmp_53_reg_3431}}, {tmp_3_reg_2701}}, {tmp_22_reg_2985}}, {tmp_9_reg_2783}}, {tmp_7_reg_2749}}, {tmp_16_reg_2890}}, {tmp_14_reg_2860}}, {tmp_25_reg_3034}}, {tmp_15_reg_2875}}, {tmp_21_reg_2970}}, {tmp_10_reg_2798}}, {tmp_37_reg_3225}}, {trunc_ln198_reg_2669}}, {tmp_40_reg_3273}}, {tmp_32_reg_3146}}, {tmp_44_reg_3335}}, {tmp_31_reg_3129}}, {tmp_35_reg_3195}}, {tmp_58_reg_3515}}, {tmp_57_reg_3499}}, {tmp_36_reg_3210}}, {tmp_45_reg_3351}}, {tmp_33_reg_3162}}, {tmp_30_reg_3112}}, {tmp_27_reg_3067}}, {tmp_43_reg_3320}}, {tmp_28_reg_3082}}, {tmp_29_reg_3097}}, {tmp_1_reg_2653}}, {tmp_38_reg_3241}}, {tmp_34_reg_3178}}, {tmp_41_reg_3289}}, {tmp_39_reg_3257}}, {tmp_47_reg_3383}}, {tmp_56_reg_3483}};

assign or_ln218_2_fu_1237_p49 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_3_fu_680_p3}, {tmp_48_fu_1165_p3}}, {tmp_17_fu_784_p3}}, {tmp_52_fu_1173_p3}}, {tmp_25_fu_848_p3}}, {tmp_12_fu_744_p3}}, {tmp_18_fu_792_p3}}, {tmp_9_fu_720_p3}}, {tmp_21_fu_816_p3}}, {tmp_22_fu_824_p3}}, {tmp_53_fu_1181_p3}}, {tmp_7_fu_704_p3}}, {tmp_8_fu_712_p3}}, {tmp_23_fu_832_p3}}, {tmp_24_fu_840_p3}}, {tmp_10_fu_728_p3}}, {tmp_2_fu_672_p3}}, {tmp_54_fu_1189_p3}}, {tmp_4_fu_688_p3}}, {tmp_20_fu_808_p3}}, {tmp_fu_652_p3}}, {tmp_13_fu_752_p3}}, {tmp_6_fu_696_p3}}, {tmp_11_fu_736_p3}}, {tmp_43_fu_992_p3}}, {tmp_41_fu_976_p3}}, {tmp_47_fu_1024_p3}}, {tmp_55_fu_1197_p3}}, {tmp_36_fu_936_p3}}, {tmp_1_fu_660_p3}}, {tmp_28_fu_872_p3}}, {tmp_26_fu_856_p3}}, {tmp_27_fu_864_p3}}, {tmp_42_fu_984_p3}}, {tmp_40_fu_968_p3}}, {tmp_38_fu_952_p3}}, {tmp_34_fu_920_p3}}, {tmp_44_fu_1000_p3}}, {tmp_32_fu_904_p3}}, {tmp_46_fu_1016_p3}}, {tmp_56_fu_1205_p3}}, {tmp_57_fu_1213_p3}}, {tmp_30_fu_888_p3}}, {tmp_58_fu_1221_p3}}, {tmp_33_fu_912_p3}}, {tmp_29_fu_880_p3}}, {tmp_59_fu_1229_p3}}, {tmp_35_fu_928_p3}};

assign or_ln218_3_fu_1426_p49 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_16_reg_2890}, {tmp_53_reg_3431}}, {tmp_21_reg_2970}}, {tmp_9_reg_2783}}, {tmp_12_reg_2829}}, {tmp_14_reg_2860}}, {tmp_20_reg_2956}}, {tmp_10_reg_2798}}, {tmp_23_reg_3001}}, {tmp_7_reg_2749}}, {tmp_19_reg_2938}}, {tmp_3_reg_2701}}, {tmp_reg_2636}}, {tmp_8_reg_2766}}, {tmp_4_reg_2718}}, {tmp_54_reg_3448}}, {tmp_11_reg_2814}}, {tmp_24_reg_3017}}, {tmp_13_reg_2845}}, {tmp_17_reg_2907}}, {tmp_18_reg_2922}}, {tmp_52_reg_3416}}, {tmp_48_reg_3400}}, {tmp_22_reg_2985}}, {tmp_42_reg_3305}}, {tmp_46_reg_3368}}, {tmp_45_reg_3351}}, {tmp_43_reg_3320}}, {tmp_27_reg_3067}}, {tmp_47_reg_3383}}, {tmp_56_reg_3483}}, {tmp_34_reg_3178}}, {tmp_1_reg_2653}}, {tmp_44_reg_3335}}, {tmp_55_reg_3466}}, {tmp_41_reg_3289}}, {tmp_38_reg_3241}}, {tmp_57_reg_3499}}, {tmp_37_reg_3225}}, {tmp_35_reg_3195}}, {tmp_39_reg_3257}}, {tmp_31_reg_3129}}, {tmp_33_reg_3162}}, {tmp_30_reg_3112}}, {trunc_ln198_reg_2669}}, {tmp_26_reg_3051}}, {tmp_40_reg_3273}}, {tmp_29_reg_3097}};

assign or_ln218_4_fu_1479_p49 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_13_reg_2845}, {tmp_8_reg_2766}}, {tmp_48_reg_3400}}, {tmp_11_reg_2814}}, {tmp_20_reg_2956}}, {tmp_17_reg_2907}}, {tmp_14_reg_2860}}, {tmp_22_reg_2985}}, {tmp_53_reg_3431}}, {tmp_24_reg_3017}}, {tmp_reg_2636}}, {tmp_4_reg_2718}}, {tmp_25_reg_3034}}, {tmp_19_reg_2938}}, {tmp_16_reg_2890}}, {tmp_7_reg_2749}}, {tmp_10_reg_2798}}, {tmp_3_reg_2701}}, {tmp_15_reg_2875}}, {tmp_6_reg_2734}}, {tmp_12_reg_2829}}, {tmp_2_reg_2686}}, {tmp_23_reg_3001}}, {tmp_54_reg_3448}}, {tmp_36_reg_3210}}, {tmp_28_reg_3082}}, {tmp_55_reg_3466}}, {tmp_37_reg_3225}}, {tmp_57_reg_3499}}, {tmp_40_reg_3273}}, {tmp_29_reg_3097}}, {tmp_30_reg_3112}}, {tmp_31_reg_3129}}, {tmp_27_reg_3067}}, {tmp_32_reg_3146}}, {trunc_ln198_reg_2669}}, {tmp_33_reg_3162}}, {tmp_1_reg_2653}}, {tmp_42_reg_3305}}, {tmp_56_reg_3483}}, {tmp_26_reg_3051}}, {tmp_47_reg_3383}}, {tmp_41_reg_3289}}, {tmp_38_reg_3241}}, {tmp_46_reg_3368}}, {tmp_58_reg_3515}}, {tmp_45_reg_3351}}, {tmp_39_reg_3257}};

assign or_ln218_5_fu_1532_p49 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_15_reg_2875}, {tmp_19_reg_2938}}, {tmp_23_reg_3001}}, {tmp_10_reg_2798}}, {tmp_14_reg_2860}}, {tmp_6_reg_2734}}, {tmp_17_reg_2907}}, {tmp_54_reg_3448}}, {tmp_8_reg_2766}}, {tmp_3_reg_2701}}, {tmp_25_reg_3034}}, {tmp_16_reg_2890}}, {tmp_18_reg_2922}}, {tmp_reg_2636}}, {tmp_13_reg_2845}}, {tmp_24_reg_3017}}, {tmp_22_reg_2985}}, {tmp_4_reg_2718}}, {tmp_52_reg_3416}}, {tmp_21_reg_2970}}, {tmp_20_reg_2956}}, {tmp_9_reg_2783}}, {tmp_53_reg_3431}}, {tmp_7_reg_2749}}, {tmp_44_reg_3335}}, {tmp_35_reg_3195}}, {tmp_32_reg_3146}}, {tmp_42_reg_3305}}, {tmp_1_reg_2653}}, {tmp_45_reg_3351}}, {tmp_39_reg_3257}}, {tmp_38_reg_3241}}, {tmp_47_reg_3383}}, {tmp_57_reg_3499}}, {tmp_43_reg_3320}}, {tmp_46_reg_3368}}, {tmp_41_reg_3289}}, {tmp_31_reg_3129}}, {tmp_36_reg_3210}}, {tmp_29_reg_3097}}, {tmp_58_reg_3515}}, {tmp_40_reg_3273}}, {trunc_ln198_reg_2669}}, {tmp_33_reg_3162}}, {tmp_28_reg_3082}}, {tmp_34_reg_3178}}, {tmp_55_reg_3466}}, {tmp_26_reg_3051}};

assign or_ln218_6_fu_1585_p49 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_52_reg_3416}, {tmp_reg_2636}}, {tmp_53_reg_3431}}, {tmp_22_reg_2985}}, {tmp_17_reg_2907}}, {tmp_21_reg_2970}}, {tmp_6_reg_2734}}, {tmp_7_reg_2749}}, {tmp_19_reg_2938}}, {tmp_4_reg_2718}}, {tmp_18_reg_2922}}, {tmp_13_reg_2845}}, {tmp_12_reg_2829}}, {tmp_25_reg_3034}}, {tmp_15_reg_2875}}, {tmp_3_reg_2701}}, {tmp_54_reg_3448}}, {tmp_16_reg_2890}}, {tmp_2_reg_2686}}, {tmp_48_reg_3400}}, {tmp_14_reg_2860}}, {tmp_11_reg_2814}}, {tmp_8_reg_2766}}, {tmp_24_reg_3017}}, {tmp_27_reg_3067}}, {tmp_56_reg_3483}}, {tmp_43_reg_3320}}, {tmp_36_reg_3210}}, {tmp_31_reg_3129}}, {tmp_55_reg_3466}}, {tmp_26_reg_3051}}, {tmp_33_reg_3162}}, {tmp_40_reg_3273}}, {tmp_1_reg_2653}}, {tmp_37_reg_3225}}, {tmp_28_reg_3082}}, {trunc_ln198_reg_2669}}, {tmp_47_reg_3383}}, {tmp_44_reg_3335}}, {tmp_39_reg_3257}}, {tmp_34_reg_3178}}, {tmp_45_reg_3351}}, {tmp_46_reg_3368}}, {tmp_41_reg_3289}}, {tmp_35_reg_3195}}, {tmp_30_reg_3112}}, {tmp_32_reg_3146}}, {tmp_58_reg_3515}};

assign or_ln218_7_fu_1638_p49 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_2_reg_2686}, {tmp_25_reg_3034}}, {tmp_8_reg_2766}}, {tmp_54_reg_3448}}, {tmp_6_reg_2734}}, {tmp_48_reg_3400}}, {tmp_21_reg_2970}}, {tmp_24_reg_3017}}, {tmp_reg_2636}}, {tmp_16_reg_2890}}, {tmp_12_reg_2829}}, {tmp_15_reg_2875}}, {tmp_20_reg_2956}}, {tmp_18_reg_2922}}, {tmp_52_reg_3416}}, {tmp_4_reg_2718}}, {tmp_7_reg_2749}}, {tmp_13_reg_2845}}, {tmp_9_reg_2783}}, {tmp_23_reg_3001}}, {tmp_17_reg_2907}}, {tmp_10_reg_2798}}, {tmp_19_reg_2938}}, {tmp_3_reg_2701}}, {tmp_57_reg_3499}}, {tmp_29_reg_3097}}, {tmp_37_reg_3225}}, {tmp_44_reg_3335}}, {tmp_47_reg_3383}}, {tmp_32_reg_3146}}, {tmp_58_reg_3515}}, {tmp_41_reg_3289}}, {tmp_45_reg_3351}}, {tmp_31_reg_3129}}, {tmp_42_reg_3305}}, {tmp_35_reg_3195}}, {tmp_46_reg_3368}}, {tmp_40_reg_3273}}, {tmp_27_reg_3067}}, {tmp_26_reg_3051}}, {tmp_30_reg_3112}}, {tmp_55_reg_3466}}, {tmp_28_reg_3082}}, {trunc_ln198_reg_2669}}, {tmp_56_reg_3483}}, {tmp_38_reg_3241}}, {tmp_43_reg_3320}}, {tmp_34_reg_3178}};

assign or_ln218_8_fu_1691_p49 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_reg_2636}, {tmp_11_reg_2814}}, {tmp_52_reg_3416}}, {tmp_14_reg_2860}}, {tmp_3_reg_2701}}, {tmp_16_reg_2890}}, {tmp_4_reg_2718}}, {tmp_6_reg_2734}}, {tmp_9_reg_2783}}, {tmp_23_reg_3001}}, {tmp_22_reg_2985}}, {tmp_8_reg_2766}}, {tmp_54_reg_3448}}, {tmp_10_reg_2798}}, {tmp_19_reg_2938}}, {tmp_48_reg_3400}}, {tmp_17_reg_2907}}, {tmp_53_reg_3431}}, {tmp_25_reg_3034}}, {tmp_13_reg_2845}}, {tmp_24_reg_3017}}, {tmp_12_reg_2829}}, {tmp_2_reg_2686}}, {tmp_21_reg_2970}}, {trunc_ln198_reg_2669}}, {tmp_55_reg_3466}}, {tmp_34_reg_3178}}, {tmp_33_reg_3162}}, {tmp_35_reg_3195}}, {tmp_26_reg_3051}}, {tmp_37_reg_3225}}, {tmp_57_reg_3499}}, {tmp_29_reg_3097}}, {tmp_28_reg_3082}}, {tmp_30_reg_3112}}, {tmp_40_reg_3273}}, {tmp_31_reg_3129}}, {tmp_56_reg_3483}}, {tmp_41_reg_3289}}, {tmp_43_reg_3320}}, {tmp_36_reg_3210}}, {tmp_39_reg_3257}}, {tmp_47_reg_3383}}, {tmp_1_reg_2653}}, {tmp_45_reg_3351}}, {tmp_44_reg_3335}}, {tmp_58_reg_3515}}, {tmp_42_reg_3305}};

assign or_ln218_9_fu_1744_p49 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_25_reg_3034}, {tmp_10_reg_2798}}, {tmp_2_reg_2686}}, {tmp_17_reg_2907}}, {tmp_4_reg_2718}}, {tmp_13_reg_2845}}, {tmp_16_reg_2890}}, {tmp_21_reg_2970}}, {tmp_11_reg_2814}}, {tmp_53_reg_3431}}, {tmp_54_reg_3448}}, {tmp_19_reg_2938}}, {tmp_7_reg_2749}}, {tmp_22_reg_2985}}, {tmp_reg_2636}}, {tmp_23_reg_3001}}, {tmp_6_reg_2734}}, {tmp_8_reg_2766}}, {tmp_18_reg_2922}}, {tmp_15_reg_2875}}, {tmp_3_reg_2701}}, {tmp_20_reg_2956}}, {tmp_9_reg_2783}}, {tmp_48_reg_3400}}, {tmp_46_reg_3368}}, {tmp_32_reg_3146}}, {tmp_30_reg_3112}}, {tmp_41_reg_3289}}, {tmp_56_reg_3483}}, {tmp_58_reg_3515}}, {tmp_42_reg_3305}}, {tmp_1_reg_2653}}, {tmp_39_reg_3257}}, {tmp_35_reg_3195}}, {tmp_38_reg_3241}}, {tmp_45_reg_3351}}, {tmp_47_reg_3383}}, {tmp_29_reg_3097}}, {trunc_ln198_reg_2669}}, {tmp_37_reg_3225}}, {tmp_44_reg_3335}}, {tmp_26_reg_3051}}, {tmp_40_reg_3273}}, {tmp_31_reg_3129}}, {tmp_55_reg_3466}}, {tmp_27_reg_3067}}, {tmp_34_reg_3178}}, {tmp_36_reg_3210}};

assign or_ln218_s_fu_1032_p49 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_6_fu_696_p3}, {tmp_4_fu_688_p3}}, {tmp_7_fu_704_p3}}, {tmp_8_fu_712_p3}}, {tmp_9_fu_720_p3}}, {tmp_10_fu_728_p3}}, {tmp_11_fu_736_p3}}, {tmp_fu_652_p3}}, {tmp_3_fu_680_p3}}, {tmp_12_fu_744_p3}}, {tmp_13_fu_752_p3}}, {tmp_14_fu_760_p3}}, {tmp_15_fu_768_p3}}, {tmp_16_fu_776_p3}}, {tmp_17_fu_784_p3}}, {tmp_18_fu_792_p3}}, {tmp_19_fu_800_p3}}, {tmp_20_fu_808_p3}}, {tmp_21_fu_816_p3}}, {tmp_22_fu_824_p3}}, {tmp_2_fu_672_p3}}, {tmp_23_fu_832_p3}}, {tmp_24_fu_840_p3}}, {tmp_25_fu_848_p3}}, {tmp_26_fu_856_p3}}, {tmp_27_fu_864_p3}}, {tmp_28_fu_872_p3}}, {tmp_29_fu_880_p3}}, {tmp_30_fu_888_p3}}, {trunc_ln198_fu_668_p1}}, {tmp_31_fu_896_p3}}, {tmp_32_fu_904_p3}}, {tmp_33_fu_912_p3}}, {tmp_34_fu_920_p3}}, {tmp_35_fu_928_p3}}, {tmp_36_fu_936_p3}}, {tmp_37_fu_944_p3}}, {tmp_38_fu_952_p3}}, {tmp_39_fu_960_p3}}, {tmp_1_fu_660_p3}}, {tmp_40_fu_968_p3}}, {tmp_41_fu_976_p3}}, {tmp_42_fu_984_p3}}, {tmp_43_fu_992_p3}}, {tmp_44_fu_1000_p3}}, {tmp_45_fu_1008_p3}}, {tmp_46_fu_1016_p3}}, {tmp_47_fu_1024_p3}};

assign or_ln241_fu_2346_p2 = (trunc_ln240_1_fu_2334_p1 | tmp_60_fu_2338_p3);

assign permuted_choice_1_fu_1366_p3 = {{trunc_ln184_1_reg_2624}, {trunc_ln184_fu_1362_p1}};

assign pre_output_fu_2127_p3 = {{temp_reg_445}, {L_0_reg_455}};

assign s_input_fu_2187_p3 = {{trunc_ln229_1_fu_2183_p1}, {trunc_ln229_fu_2179_p1}};

assign s_output_fu_2440_p3 = {{trunc_ln246_1_fu_2436_p1}, {S_q0}};

assign sext_ln240_fu_2303_p1 = $signed(sub_ln240_reg_3591);

assign sext_ln246_1_fu_2400_p1 = $signed(trunc_ln246_fu_2396_p1);

assign sext_ln246_2_fu_2410_p1 = $signed(add_ln246_fu_2404_p2);

assign sext_ln246_3_fu_2432_p1 = $signed(add_ln246_1_reg_3606);

assign sext_ln246_fu_2392_p1 = $signed(tmp_50_fu_2382_p4);

assign shl_ln240_1_fu_2267_p3 = {{trunc_ln240_fu_2231_p1}, {2'd0}};

assign shl_ln240_fu_2247_p2 = j_2_reg_501 << 4'd1;

assign shl_ln_fu_2235_p3 = {{trunc_ln240_fu_2231_p1}, {3'd0}};

assign sub_ln174_fu_605_p2 = ($signed(7'd64) - $signed(trunc_ln174_fu_601_p1));

assign sub_ln184_fu_1347_p2 = ($signed(7'd64) - $signed(zext_ln184_2_fu_1343_p1));

assign sub_ln229_fu_2163_p2 = ($signed(6'd32) - $signed(E_q0));

assign sub_ln232_fu_2152_p2 = (5'd15 - i_3_reg_466);

assign sub_ln240_1_fu_2279_p2 = ($signed(6'd42) - $signed(zext_ln240_1_fu_2253_p1));

assign sub_ln240_2_fu_2285_p2 = (sub_ln240_1_fu_2279_p2 - zext_ln240_5_fu_2275_p1);

assign sub_ln240_fu_2261_p2 = (zext_ln240_fu_2243_p1 - zext_ln240_2_fu_2257_p1);

assign sub_ln243_1_fu_2297_p2 = (sub_ln243_fu_2291_p2 - zext_ln240_5_fu_2275_p1);

assign sub_ln243_fu_2291_p2 = ($signed(6'd43) - $signed(zext_ln240_1_fu_2253_p1));

assign sub_ln254_fu_2480_p2 = ($signed(6'd32) - $signed(P_q0));

assign sub_ln270_fu_2542_p2 = ($signed(7'd64) - $signed(trunc_ln270_fu_2538_p1));

assign tmp_10_fu_728_p3 = permuted_choice_1_0_reg_423[32'd50];

assign tmp_11_fu_736_p3 = permuted_choice_1_0_reg_423[32'd52];

assign tmp_12_fu_744_p3 = permuted_choice_1_0_reg_423[32'd49];

assign tmp_13_fu_752_p3 = permuted_choice_1_0_reg_423[32'd34];

assign tmp_14_fu_760_p3 = permuted_choice_1_0_reg_423[32'd45];

assign tmp_15_fu_768_p3 = permuted_choice_1_0_reg_423[32'd32];

assign tmp_16_fu_776_p3 = permuted_choice_1_0_reg_423[32'd36];

assign tmp_17_fu_784_p3 = permuted_choice_1_0_reg_423[32'd43];

assign tmp_18_fu_792_p3 = permuted_choice_1_0_reg_423[32'd51];

assign tmp_19_fu_800_p3 = permuted_choice_1_0_reg_423[32'd29];

assign tmp_1_fu_660_p3 = permuted_choice_1_0_reg_423[32'd27];

assign tmp_20_fu_808_p3 = permuted_choice_1_0_reg_423[32'd47];

assign tmp_21_fu_816_p3 = permuted_choice_1_0_reg_423[32'd39];

assign tmp_22_fu_824_p3 = permuted_choice_1_0_reg_423[32'd48];

assign tmp_23_fu_832_p3 = permuted_choice_1_0_reg_423[32'd35];

assign tmp_24_fu_840_p3 = permuted_choice_1_0_reg_423[32'd42];

assign tmp_25_fu_848_p3 = permuted_choice_1_0_reg_423[32'd53];

assign tmp_26_fu_856_p3 = permuted_choice_1_0_reg_423[32'd14];

assign tmp_27_fu_864_p3 = permuted_choice_1_0_reg_423[32'd3];

assign tmp_28_fu_872_p3 = permuted_choice_1_0_reg_423[32'd24];

assign tmp_29_fu_880_p3 = permuted_choice_1_0_reg_423[32'd18];

assign tmp_2_fu_672_p3 = permuted_choice_1_0_reg_423[32'd28];

assign tmp_30_fu_888_p3 = permuted_choice_1_0_reg_423[32'd8];

assign tmp_31_fu_896_p3 = permuted_choice_1_0_reg_423[32'd25];

assign tmp_32_fu_904_p3 = permuted_choice_1_0_reg_423[32'd15];

assign tmp_33_fu_912_p3 = permuted_choice_1_0_reg_423[32'd4];

assign tmp_34_fu_920_p3 = permuted_choice_1_0_reg_423[32'd10];

assign tmp_35_fu_928_p3 = permuted_choice_1_0_reg_423[32'd22];

assign tmp_36_fu_936_p3 = permuted_choice_1_0_reg_423[32'd7];

assign tmp_37_fu_944_p3 = permuted_choice_1_0_reg_423[32'd11];

assign tmp_38_fu_952_p3 = permuted_choice_1_0_reg_423[32'd6];

assign tmp_39_fu_960_p3 = permuted_choice_1_0_reg_423[32'd16];

assign tmp_3_fu_680_p3 = permuted_choice_1_0_reg_423[32'd40];

assign tmp_40_fu_968_p3 = permuted_choice_1_0_reg_423[32'd21];

assign tmp_41_fu_976_p3 = permuted_choice_1_0_reg_423[32'd2];

assign tmp_42_fu_984_p3 = permuted_choice_1_0_reg_423[32'd9];

assign tmp_43_fu_992_p3 = permuted_choice_1_0_reg_423[32'd13];

assign tmp_44_fu_1000_p3 = permuted_choice_1_0_reg_423[32'd5];

assign tmp_45_fu_1008_p3 = permuted_choice_1_0_reg_423[32'd19];

assign tmp_46_fu_1016_p3 = permuted_choice_1_0_reg_423[32'd26];

assign tmp_47_fu_1024_p3 = permuted_choice_1_0_reg_423[32'd23];

assign tmp_48_fu_1165_p3 = permuted_choice_1_0_reg_423[32'd37];

assign tmp_49_fu_2352_p4 = {{lshr_ln240_1_fu_2328_p2[7:5]}};

assign tmp_4_fu_688_p3 = permuted_choice_1_0_reg_423[32'd38];

assign tmp_50_fu_2382_p4 = {{{tmp_49_fu_2352_p4}, {or_ln241_fu_2346_p2}}, {4'd0}};

assign tmp_51_fu_2414_p3 = {{j_2_reg_501}, {6'd0}};

assign tmp_52_fu_1173_p3 = permuted_choice_1_0_reg_423[32'd30];

assign tmp_53_fu_1181_p3 = permuted_choice_1_0_reg_423[32'd33];

assign tmp_54_fu_1189_p3 = permuted_choice_1_0_reg_423[32'd46];

assign tmp_55_fu_1197_p3 = permuted_choice_1_0_reg_423[32'd17];

assign tmp_56_fu_1205_p3 = permuted_choice_1_0_reg_423[32'd20];

assign tmp_57_fu_1213_p3 = permuted_choice_1_0_reg_423[32'd1];

assign tmp_58_fu_1221_p3 = permuted_choice_1_0_reg_423[32'd12];

assign tmp_59_fu_1229_p3 = or_ln212_fu_1159_p2[32'd27];

assign tmp_5_fu_1151_p3 = {{1'd0}, {zext_ln198_fu_1147_p1}};

assign tmp_60_fu_2338_p3 = lshr_ln240_1_fu_2328_p2[32'd4];

assign tmp_6_fu_696_p3 = permuted_choice_1_0_reg_423[32'd41];

assign tmp_7_fu_704_p3 = permuted_choice_1_0_reg_423[32'd44];

assign tmp_8_fu_712_p3 = permuted_choice_1_0_reg_423[32'd31];

assign tmp_9_fu_720_p3 = permuted_choice_1_0_reg_423[32'd54];

assign tmp_fu_652_p3 = permuted_choice_1_0_reg_423[32'd55];

assign trunc_ln174_1_fu_620_p1 = lshr_ln174_fu_615_p2[0:0];

assign trunc_ln174_2_fu_583_p1 = init_perm_res_0_reg_401[62:0];

assign trunc_ln174_fu_601_p1 = array_temp_q0[6:0];

assign trunc_ln184_1_fu_648_p1 = permuted_choice_1_0_reg_423[62:0];

assign trunc_ln184_fu_1362_p1 = lshr_ln184_fu_1357_p2[0:0];

assign trunc_ln198_1_fu_1133_p1 = permuted_choice_1_0_reg_423[25:0];

assign trunc_ln198_fu_668_p1 = permuted_choice_1_0_reg_423[0:0];

assign trunc_ln198_s_fu_1137_p4 = {{{trunc_ln198_1_fu_1133_p1}, {tmp_1_fu_660_p3}}, {1'd0}};

assign trunc_ln229_1_fu_2183_p1 = s_input_0_reg_478[62:0];

assign trunc_ln229_fu_2179_p1 = lshr_ln229_fu_2173_p2[0:0];

assign trunc_ln232_1_fu_2199_p1 = s_input_0_reg_478[46:0];

assign trunc_ln232_2_fu_2203_p1 = array_temp_q1[46:0];

assign trunc_ln232_fu_2195_p1 = s_input_0_reg_478[47:0];

assign trunc_ln240_1_fu_2334_p1 = lshr_ln240_1_fu_2328_p2[0:0];

assign trunc_ln240_fu_2231_p1 = j_2_reg_501[2:0];

assign trunc_ln246_1_fu_2436_p1 = s_output_1_fu_284[27:0];

assign trunc_ln246_fu_2396_p1 = lshr_ln243_1_fu_2376_p2[7:0];

assign trunc_ln254_1_fu_2470_p1 = f_function_res_0_reg_513[30:0];

assign trunc_ln254_fu_2496_p1 = lshr_ln254_fu_2490_p2[0:0];

assign trunc_ln270_1_fu_2557_p1 = lshr_ln270_fu_2552_p2[0:0];

assign trunc_ln270_2_fu_2534_p1 = inv_init_perm_res_0_reg_546[62:0];

assign trunc_ln270_fu_2538_p1 = array_temp_q0[6:0];

assign xor_ln232_1_fu_2213_p2 = (trunc_ln232_fu_2195_p1 ^ array_temp_q1);

assign xor_ln232_fu_2207_p2 = (trunc_ln232_2_fu_2203_p1 ^ trunc_ln232_1_fu_2199_p1);

assign zext_ln174_1_fu_578_p1 = add_ln174_fu_572_p2;

assign zext_ln174_fu_611_p1 = sub_ln174_fu_605_p2;

assign zext_ln184_1_fu_643_p1 = i_1_reg_434;

assign zext_ln184_2_fu_1343_p1 = PC1_q0;

assign zext_ln184_fu_1353_p1 = sub_ln184_fu_1347_p2;

assign zext_ln198_fu_1147_p1 = tmp_46_fu_1016_p3;

assign zext_ln229_1_fu_2169_p1 = sub_ln229_fu_2163_p2;

assign zext_ln229_fu_2147_p1 = j_1_reg_490;

assign zext_ln232_fu_2158_p1 = sub_ln232_fu_2152_p2;

assign zext_ln240_1_fu_2253_p1 = shl_ln240_fu_2247_p2;

assign zext_ln240_2_fu_2257_p1 = shl_ln240_fu_2247_p2;

assign zext_ln240_3_fu_2306_p1 = $unsigned(sext_ln240_fu_2303_p1);

assign zext_ln240_4_fu_2310_p1 = $unsigned(sext_ln240_fu_2303_p1);

assign zext_ln240_5_fu_2275_p1 = shl_ln240_1_fu_2267_p3;

assign zext_ln240_6_fu_2325_p1 = sub_ln240_2_reg_3596;

assign zext_ln240_fu_2243_p1 = shl_ln_fu_2235_p3;

assign zext_ln243_fu_2373_p1 = sub_ln243_1_reg_3601;

assign zext_ln246_fu_2422_p1 = tmp_51_fu_2414_p3;

assign zext_ln254_1_fu_2486_p1 = sub_ln254_fu_2480_p2;

assign zext_ln254_fu_2465_p1 = j_3_reg_524;

assign zext_ln270_1_fu_2519_p1 = i_4_reg_535;

assign zext_ln270_2_fu_2529_p1 = add_ln270_fu_2523_p2;

assign zext_ln270_fu_2548_p1 = sub_ln270_fu_2542_p2;

always @ (posedge ap_clk) begin
    sub_ln240_reg_3591[0] <= 1'b0;
    sub_ln240_2_reg_3596[0] <= 1'b0;
    sub_ln243_1_reg_3601[0] <= 1'b1;
end

endmodule //des_dec
